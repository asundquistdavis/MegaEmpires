(()=>{var __webpack_modules__={446:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// NAMESPACE OBJECT: ./node_modules/@popperjs/core/lib/index.js\nvar lib_namespaceObject = {};\n__webpack_require__.r(lib_namespaceObject);\n__webpack_require__.d(lib_namespaceObject, {\n  afterMain: () => (afterMain),\n  afterRead: () => (afterRead),\n  afterWrite: () => (afterWrite),\n  applyStyles: () => (modifiers_applyStyles),\n  arrow: () => (modifiers_arrow),\n  auto: () => (auto),\n  basePlacements: () => (basePlacements),\n  beforeMain: () => (beforeMain),\n  beforeRead: () => (beforeRead),\n  beforeWrite: () => (beforeWrite),\n  bottom: () => (bottom),\n  clippingParents: () => (clippingParents),\n  computeStyles: () => (modifiers_computeStyles),\n  createPopper: () => (popper_createPopper),\n  createPopperBase: () => (createPopper),\n  createPopperLite: () => (popper_lite_createPopper),\n  detectOverflow: () => (detectOverflow),\n  end: () => (end),\n  eventListeners: () => (eventListeners),\n  flip: () => (modifiers_flip),\n  hide: () => (modifiers_hide),\n  left: () => (left),\n  main: () => (enums_main),\n  modifierPhases: () => (modifierPhases),\n  offset: () => (modifiers_offset),\n  placements: () => (enums_placements),\n  popper: () => (popper),\n  popperGenerator: () => (popperGenerator),\n  popperOffsets: () => (modifiers_popperOffsets),\n  preventOverflow: () => (modifiers_preventOverflow),\n  read: () => (read),\n  reference: () => (reference),\n  right: () => (right),\n  start: () => (start),\n  top: () => (enums_top),\n  variationPlacements: () => (variationPlacements),\n  viewport: () => (viewport),\n  write: () => (write)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(294);\n// EXTERNAL MODULE: ./node_modules/react-dom/client.js\nvar client = __webpack_require__(745);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/reset.scss\nvar styles_reset = __webpack_require__(972);\n;// CONCATENATED MODULE: ./frontend/styles/reset.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, \"head\");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(styles_reset/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const frontend_styles_reset = (styles_reset/* default */.Z && styles_reset/* default */.Z.locals ? styles_reset/* default */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/main.scss\nvar main = __webpack_require__(33);\n;// CONCATENATED MODULE: ./frontend/styles/main.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar main_options = {};\n\nmain_options.styleTagTransform = (styleTagTransform_default());\nmain_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      main_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nmain_options.domAPI = (styleDomAPI_default());\nmain_options.insertStyleElement = (insertStyleElement_default());\n\nvar main_update = injectStylesIntoStyleTag_default()(main/* default */.Z, main_options);\n\n\n\n\n       /* harmony default export */ const styles_main = (main/* default */.Z && main/* default */.Z.locals ? main/* default */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/header.scss\nvar header = __webpack_require__(932);\n;// CONCATENATED MODULE: ./frontend/styles/header.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar header_options = {};\n\nheader_options.styleTagTransform = (styleTagTransform_default());\nheader_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      header_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nheader_options.domAPI = (styleDomAPI_default());\nheader_options.insertStyleElement = (insertStyleElement_default());\n\nvar header_update = injectStylesIntoStyleTag_default()(header/* default */.Z, header_options);\n\n\n\n\n       /* harmony default export */ const styles_header = (header/* default */.Z && header/* default */.Z.locals ? header/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/components/Header.js\n\n\nvar Header = function Header(props) {\n  var left = props.left,\n    right = props.right,\n    children = props.children,\n    className = props.className;\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: 'flexRow ' + className\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"headerSide\"\n  }, left), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"headerTitle\"\n  }, children), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"headerSide\"\n  }, right)));\n};\n/* harmony default export */ const components_Header = (Header);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/auth.scss\nvar auth = __webpack_require__(68);\n;// CONCATENATED MODULE: ./frontend/styles/auth.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar auth_options = {};\n\nauth_options.styleTagTransform = (styleTagTransform_default());\nauth_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      auth_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nauth_options.domAPI = (styleDomAPI_default());\nauth_options.insertStyleElement = (insertStyleElement_default());\n\nvar auth_update = injectStylesIntoStyleTag_default()(auth/* default */.Z, auth_options);\n\n\n\n\n       /* harmony default export */ const styles_auth = (auth/* default */.Z && auth/* default */.Z.locals ? auth/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/pages/Auth.js\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\nfunction Auth(props) {\n  var appState = props.appState,\n    setAppState = props.setAppState;\n  var _useState = (0,react.useState)({\n      email: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    authState = _useState2[0],\n    setAuthState = _useState2[1];\n  var changeUsername = function changeUsername(event) {\n    setAuthState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: event.target.value\n      });\n    });\n  };\n  var submitLogIn = function submitLogIn(event) {\n    setAppState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userId: 1\n      });\n    });\n  }; // userId 1 is override\n  var submitRegister = function submitRegister(event) {\n    setAppState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userId: 1\n      });\n    });\n  };\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_Header, {\n    className: \"mb--2pc\"\n  }, \"Mega Empires\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"authBody\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"authEmailRow\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    className: \"authEmailLabel\"\n  }, \"Username:\"), /*#__PURE__*/react.createElement(\"input\", {\n    id: \"usernameField\",\n    className: \"authEmailInput\",\n    value: authState.email,\n    onChange: changeUsername\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"submitRow\"\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    className: \"login\",\n    onClick: submitLogIn\n  }, \"Login\"), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"register\",\n    onClick: submitRegister\n  }, \"Register\"))));\n}\n;\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/board.scss\nvar board = __webpack_require__(620);\n;// CONCATENATED MODULE: ./frontend/styles/board.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar board_options = {};\n\nboard_options.styleTagTransform = (styleTagTransform_default());\nboard_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      board_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nboard_options.domAPI = (styleDomAPI_default());\nboard_options.insertStyleElement = (insertStyleElement_default());\n\nvar board_update = injectStylesIntoStyleTag_default()(board/* default */.Z, board_options);\n\n\n\n\n       /* harmony default export */ const styles_board = (board/* default */.Z && board/* default */.Z.locals ? board/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/components/Board.js\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure \" + obj); }\n\n\nvar Board = /*#__PURE__*/(0,react.forwardRef)(function (props, ref) {\n  _objectDestructuringEmpty(props);\n  return /*#__PURE__*/react.createElement(\"iframe\", {\n    ref: ref,\n    id: \"boardFrame\",\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      overflow: \"hidden\"\n    },\n    src: \"/frontend/assets/west-map.html\"\n  });\n});\n/* harmony default export */ const components_Board = (Board);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/playerscard.scss\nvar playerscard = __webpack_require__(428);\n;// CONCATENATED MODULE: ./frontend/styles/playerscard.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar playerscard_options = {};\n\nplayerscard_options.styleTagTransform = (styleTagTransform_default());\nplayerscard_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      playerscard_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nplayerscard_options.domAPI = (styleDomAPI_default());\nplayerscard_options.insertStyleElement = (insertStyleElement_default());\n\nvar playerscard_update = injectStylesIntoStyleTag_default()(playerscard/* default */.Z, playerscard_options);\n\n\n\n\n       /* harmony default export */ const styles_playerscard = (playerscard/* default */.Z && playerscard/* default */.Z.locals ? playerscard/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/components/PlayersCard.js\n\n\nvar PlayersCard = function PlayersCard(playerNumber, players, hover, setHover) {\n  if (!players) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overBoard card playersCardBorder\"\n    }, \"Loading...\");\n  }\n  ;\n  var currentPlayerRow = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playersCardPlayerRow playersCardCurrentPlayer\"\n  }, players[playerNumber].username);\n  var n = players.length;\n  var title = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playersCardTitle\"\n  }, \"Players\");\n  var playerRow = function playerRow(player, key) {\n    return key === playerNumber ? currentPlayerRow : /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"playersCardPlayerRow\"\n    }, player.username);\n  };\n  var playerRows = players.map(playerRow);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overBoard card playersCardBorder\",\n    onMouseEnter: function onMouseEnter() {\n      return setHover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHover(false);\n    }\n  }, hover ? playerRows : currentPlayerRow);\n};\n/* harmony default export */ const components_PlayersCard = ((/* unused pure expression or super */ null && (PlayersCard)));\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/playgame.scss\nvar playgame = __webpack_require__(470);\n;// CONCATENATED MODULE: ./frontend/styles/playgame.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar playgame_options = {};\n\nplaygame_options.styleTagTransform = (styleTagTransform_default());\nplaygame_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      playgame_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nplaygame_options.domAPI = (styleDomAPI_default());\nplaygame_options.insertStyleElement = (insertStyleElement_default());\n\nvar playgame_update = injectStylesIntoStyleTag_default()(playgame/* default */.Z, playgame_options);\n\n\n\n\n       /* harmony default export */ const styles_playgame = (playgame/* default */.Z && playgame/* default */.Z.locals ? playgame/* default */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/phasesbanner.scss\nvar phasesbanner = __webpack_require__(523);\n;// CONCATENATED MODULE: ./frontend/styles/phasesbanner.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar phasesbanner_options = {};\n\nphasesbanner_options.styleTagTransform = (styleTagTransform_default());\nphasesbanner_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      phasesbanner_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nphasesbanner_options.domAPI = (styleDomAPI_default());\nphasesbanner_options.insertStyleElement = (insertStyleElement_default());\n\nvar phasesbanner_update = injectStylesIntoStyleTag_default()(phasesbanner/* default */.Z, phasesbanner_options);\n\n\n\n\n       /* harmony default export */ const styles_phasesbanner = (phasesbanner/* default */.Z && phasesbanner/* default */.Z.locals ? phasesbanner/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/bind.js\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/utils.js\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString: utils_toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = utils_toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst utils_hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n/* harmony default export */ const utils = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty: utils_hasOwnProperty,\n  hasOwnProp: utils_hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n});\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/AxiosError.js\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst AxiosError_prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(AxiosError_prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(AxiosError_prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n/* harmony default export */ const core_AxiosError = (AxiosError);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/null.js\n// eslint-disable-next-line strict\n/* harmony default export */ const helpers_null = (null);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/toFormData.js\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (helpers_null || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new core_AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/* harmony default export */ const helpers_toFormData = (toFormData);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && helpers_toFormData(params, this, options);\n}\n\nconst AxiosURLSearchParams_prototype = AxiosURLSearchParams.prototype;\n\nAxiosURLSearchParams_prototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nAxiosURLSearchParams_prototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/* harmony default export */ const helpers_AxiosURLSearchParams = (AxiosURLSearchParams);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/buildURL.js\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction buildURL_encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || buildURL_encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new helpers_AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/InterceptorManager.js\n\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\n/* harmony default export */ const core_InterceptorManager = (InterceptorManager);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/defaults/transitional.js\n\n\n/* harmony default export */ const defaults_transitional = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\n\n\n\n/* harmony default export */ const classes_URLSearchParams = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : helpers_AxiosURLSearchParams);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/platform/browser/classes/FormData.js\n\n\n/* harmony default export */ const classes_FormData = (typeof FormData !== 'undefined' ? FormData : null);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/platform/browser/classes/Blob.js\n\n\n/* harmony default export */ const classes_Blob = (typeof Blob !== 'undefined' ? Blob : null);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/platform/browser/index.js\n\n\n\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\n/* harmony default export */ const browser = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: classes_URLSearchParams,\n    FormData: classes_FormData,\n    Blob: classes_Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n});\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/toURLEncodedForm.js\n\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return helpers_toFormData(data, new browser.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (browser.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/formDataToJSON.js\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/* harmony default export */ const helpers_formDataToJSON = (formDataToJSON);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/defaults/index.js\n\n\n\n\n\n\n\n\n\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: defaults_transitional,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(helpers_formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return helpers_toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw core_AxiosError.from(e, core_AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: browser.classes.FormData,\n    Blob: browser.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\n/* harmony default export */ const lib_defaults = (defaults);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/parseHeaders.js\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ const parseHeaders = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n});\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/AxiosHeaders.js\n\n\n\n\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\n/* harmony default export */ const core_AxiosHeaders = (AxiosHeaders);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/transformData.js\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || lib_defaults;\n  const context = response || config;\n  const headers = core_AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/cancel/isCancel.js\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/cancel/CanceledError.js\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  core_AxiosError.call(this, message == null ? 'canceled' : message, core_AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, core_AxiosError, {\n  __CANCEL__: true\n});\n\n/* harmony default export */ const cancel_CanceledError = (CanceledError);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/settle.js\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new core_AxiosError(\n      'Request failed with status code ' + response.status,\n      [core_AxiosError.ERR_BAD_REQUEST, core_AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/cookies.js\n\n\n\n\n\n/* harmony default export */ const cookies = (browser.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })());\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/isAbsoluteURL.js\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/combineURLs.js\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/buildFullPath.js\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/isURLSameOrigin.js\n\n\n\n\n\n/* harmony default export */ const isURLSameOrigin = (browser.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })());\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/parseProtocol.js\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/speedometer.js\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/* harmony default export */ const helpers_speedometer = (speedometer);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/adapters/xhr.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = helpers_speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\n/* harmony default export */ const xhr = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = core_AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (browser.isStandardBrowserEnv || browser.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if(!requestHeaders.getContentType(/^\\s*multipart\\/form-data/)){\n        requestHeaders.setContentType('multipart/form-data'); // mobile/desktop app frameworks\n      } else if(utils.isString(contentType = requestHeaders.getContentType())){\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        requestHeaders.setContentType(contentType.replace(/^\\s*(multipart\\/form-data);+/, '$1'))\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = core_AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new core_AxiosError('Request aborted', core_AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new core_AxiosError('Network Error', core_AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || defaults_transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new core_AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? core_AxiosError.ETIMEDOUT : core_AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (browser.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new cancel_CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && browser.protocols.indexOf(protocol) === -1) {\n      reject(new core_AxiosError('Unsupported protocol ' + protocol + ':', core_AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/adapters/adapters.js\n\n\n\n\n\nconst knownAdapters = {\n  http: helpers_null,\n  xhr: xhr\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\n/* harmony default export */ const adapters = ({\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new core_AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new core_AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n});\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/dispatchRequest.js\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new cancel_CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = core_AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || lib_defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = core_AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = core_AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/mergeConfig.js\n\n\n\n\n\nconst headersToObject = (thing) => thing instanceof core_AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/env/data.js\nconst VERSION = \"1.5.1\";\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/validator.js\n\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new core_AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        core_AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new core_AxiosError('options must be an object', core_AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new core_AxiosError('option ' + opt + ' must be ' + result, core_AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new core_AxiosError('Unknown option ' + opt, core_AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\n/* harmony default export */ const validator = ({\n  assertOptions,\n  validators\n});\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/core/Axios.js\n\n\n\n\n\n\n\n\n\n\n\nconst Axios_validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new core_InterceptorManager(),\n      response: new core_InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: Axios_validators.transitional(Axios_validators.boolean),\n        forcedJSONParsing: Axios_validators.transitional(Axios_validators.boolean),\n        clarifyTimeoutError: Axios_validators.transitional(Axios_validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: Axios_validators.function,\n          serialize: Axios_validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = core_AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\n/* harmony default export */ const core_Axios = (Axios);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/cancel/CancelToken.js\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new cancel_CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/* harmony default export */ const cancel_CancelToken = (CancelToken);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/spread.js\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/isAxiosError.js\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/helpers/HttpStatusCode.js\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/* harmony default export */ const helpers_HttpStatusCode = (HttpStatusCode);\n\n;// CONCATENATED MODULE: ./node_modules/axios/lib/axios.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new core_Axios(defaultConfig);\n  const instance = bind(core_Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, core_Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios_axios = createInstance(lib_defaults);\n\n// Expose Axios class to allow class inheritance\naxios_axios.Axios = core_Axios;\n\n// Expose Cancel & CancelToken\naxios_axios.CanceledError = cancel_CanceledError;\naxios_axios.CancelToken = cancel_CancelToken;\naxios_axios.isCancel = isCancel;\naxios_axios.VERSION = VERSION;\naxios_axios.toFormData = helpers_toFormData;\n\n// Expose AxiosError class\naxios_axios.AxiosError = core_AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios_axios.Cancel = axios_axios.CanceledError;\n\n// Expose all/spread\naxios_axios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios_axios.spread = spread;\n\n// Expose isAxiosError\naxios_axios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios_axios.mergeConfig = mergeConfig;\n\naxios_axios.AxiosHeaders = core_AxiosHeaders;\n\naxios_axios.formToJSON = thing => helpers_formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios_axios.getAdapter = adapters.getAdapter;\n\naxios_axios.HttpStatusCode = helpers_HttpStatusCode;\n\naxios_axios.default = axios_axios;\n\n// this module should only have a default export\n/* harmony default export */ const lib_axios = (axios_axios);\n\n;// CONCATENATED MODULE: ./frontend/utilities.js\nfunction utilities_typeof(o) { \"@babel/helpers - typeof\"; return utilities_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, utilities_typeof(o); }\nfunction utilities_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction utilities_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? utilities_ownKeys(Object(t), !0).forEach(function (r) { utilities_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : utilities_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction utilities_defineProperty(obj, key, value) { key = utilities_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction utilities_toPropertyKey(arg) { var key = utilities_toPrimitive(arg, \"string\"); return utilities_typeof(key) === \"symbol\" ? key : String(key); }\nfunction utilities_toPrimitive(input, hint) { if (utilities_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (utilities_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar endpoint = function endpoint(route) {\n  return \"http://23.88.147.138:1104/\".concat(route);\n};\nvar axiosCorsConfig = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nvar useServer = false;\nvar capitalize = function capitalize(string) {\n  return string.length === 0 ? '' : string[0].toUpperCase() + string.slice(1);\n};\nvar utilities_title = function title(string) {\n  return string.split(' ').map(capitalize).join(' ');\n};\n\n// use to update data on app and before server sends response\nvar useServerState = function useServerState(state, setState, name, endpoint, data) {\n  var config = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  // \n  var setServerState = function setServerState(propName, value) {\n    // set state locally\n    setState(function (state) {\n      return utilities_objectSpread(utilities_objectSpread({}, state), {}, utilities_defineProperty({}, propName, value));\n    });\n    // call server\n    axios.post(endpoint, utilities_objectSpread(utilities_objectSpread({}, data), {}, utilities_defineProperty({}, propName, value)), config).then(console.log);\n  };\n  return state, setServerState;\n};\nvar setServerState = function setServerState(setter, errorSetter, route, apiData, fallback) {\n  var config = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : axiosCorsConfig;\n  if (useServer) {\n    lib_axios.post(endpoint(route), apiData, config).then(function (response) {\n      response.data.status ? errorSetter(response.data.status) : setter(response.data.data);\n    })[\"catch\"](console.log);\n  } else {\n    setter(fallback);\n  }\n  ;\n};\nvar pollServer = function pollServer(rate, route, schemaSend, schemaRec, appState, setAppState) {\n  var interval = setInterval(function () {\n    axios.post(endpoint(route), schemaSend(appState), axiosCorsConfig).then()[\"catch\"]();\n  }, rate);\n  return function () {\n    return clearInterval(interval);\n  };\n};\n;// CONCATENATED MODULE: ./frontend/components/PhasesBanner.js\n\n\n\nvar PhasesBanner = function PhasesBanner(phaseName, phaseActionNumber, hover, setHover, phases) {\n  var n = phases.length;\n  var svgs = function svgs(width, height, phases) {\n    var currentColor = 'yellow';\n    var defaultColor = 'lightblue';\n    var stepX1 = width / (2 * n - 1) * 2;\n    var stepX2 = width / (2 * n - 1);\n    var stepY = 5 / 6 * height;\n    var stepT = stepY / 5;\n    var inners = phases.map(function (_ref, key) {\n      var name = _ref.name,\n        hover = _ref.hover,\n        setHover = _ref.setHover;\n      return /*#__PURE__*/React.createElement(\"svg\", {\n        key: key,\n        onMouseEnter: function onMouseEnter() {\n          return setHover(true);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return setHover(false);\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M\".concat(stepX1 * key - (key > 0 ? stepX2 : 0), \" 0 l\").concat(stepX1 - (key === 0 ? stepX2 : 0), \" 0 l\").concat(key != n - 1 ? stepX2 : 0, \" \").concat(stepY, \" l\").concat(-stepX1 + (key === n - 1 ? stepX2 : 0), \" 0 z\"),\n        fill: phaseName === name ? currentColor : defaultColor,\n        stroke: \"black\"\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        fontSize: \".9rem\",\n        fontWeight: 400,\n        x: stepX2 / 2 + stepX1 * key,\n        y: stepY / 2,\n        textAnchor: \"middle\",\n        alignmentBaseline: \"central\"\n      }, title(name)), hover ? /*#__PURE__*/React.createElement(\"path\", {\n        fill: \"transparent\",\n        stroke: \"black\",\n        d: \"M\".concat(stepX1 * key + stepT, \" \").concat(stepY, \" l\").concat(stepT / 2, \" \").concat(stepT, \" l\").concat(stepT / 2, \" \").concat(-stepT)\n      }) : null);\n    });\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      width: width,\n      height: height\n    }, inners);\n  };\n  var phaseActionName = phaseActionNumber ? phases.filter(function (phase) {\n    return phase.name === phaseName;\n  })[0].actions[phaseActionNumber] : '';\n  var currentPhase = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"phasesBannerCurrentPhase\"\n  }, title(phaseName) + title(phaseActionName ? ' - ' + phaseActionName : ''));\n  var hoverPhase = function hoverPhase(phase, key) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      className: \"phasesBannerHoverPhase\"\n    }, phase.actions.map(function (action, key) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        className: \"phasesBannerHoverPhaseAction\",\n        style: phase.name === phaseName && key === phaseActionNumber ? {\n          backgroundColor: 'yellow',\n          boxShadow: 'yellow 0 0 3px 3px'\n        } : null\n      }, title(action));\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overBoard card phasesBannerBorder\",\n    onMouseEnter: function onMouseEnter() {\n      return setHover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHover(false);\n    }\n  }, currentPhase, hover ? svgs(100 * n, 30, phases) : null, phases.map(function (phase) {\n    return phase.hover ? hoverPhase(phase) : null;\n  }));\n};\n/* harmony default export */ const components_PhasesBanner = ((/* unused pure expression or super */ null && (PhasesBanner)));\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/button.scss\nvar styles_button = __webpack_require__(346);\n;// CONCATENATED MODULE: ./frontend/styles/button.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar button_options = {};\n\nbutton_options.styleTagTransform = (styleTagTransform_default());\nbutton_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      button_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nbutton_options.domAPI = (styleDomAPI_default());\nbutton_options.insertStyleElement = (insertStyleElement_default());\n\nvar button_update = injectStylesIntoStyleTag_default()(styles_button/* default */.Z, button_options);\n\n\n\n\n       /* harmony default export */ const frontend_styles_button = (styles_button/* default */.Z && styles_button/* default */.Z.locals ? styles_button/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/components/Button.js\n\n\nvar Button = function Button(props) {\n  var Icon = props.Icon,\n    children = props.children,\n    onClick = props.onClick,\n    className = props.className,\n    width = props.width,\n    height = props.height,\n    checked = props.checked,\n    checkable = props.checkable,\n    style = props.style;\n  var btnType = (Icon ? 'btnI ' : checkable ? 'btnC ' : 'btnT ') + (checkable && checked ? 'checked ' : '');\n  var _width = width || 25;\n  var _height = height || 25;\n  var _body = Icon ? /*#__PURE__*/react.createElement(Icon, {\n    width: _width,\n    height: _height\n  }) : checkable ? /*#__PURE__*/react.createElement(\"div\", null) : children;\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"button\", {\n    className: 'btn ' + btnType + className,\n    style: style,\n    onClick: onClick\n  }, _body));\n};\n/* harmony default export */ const components_Button = (Button);\n;// CONCATENATED MODULE: ./frontend/Pages/PlayGame.js\nfunction PlayGame_slicedToArray(arr, i) { return PlayGame_arrayWithHoles(arr) || PlayGame_iterableToArrayLimit(arr, i) || PlayGame_unsupportedIterableToArray(arr, i) || PlayGame_nonIterableRest(); }\nfunction PlayGame_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction PlayGame_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return PlayGame_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return PlayGame_arrayLikeToArray(o, minLen); }\nfunction PlayGame_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction PlayGame_iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction PlayGame_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\nfunction PlayGame(props) {\n  var appState = props.appState,\n    setAppState = props.setAppState;\n  var mapRef = /*#__PURE__*/(0,react.createRef)();\n  var _useState = (0,react.useState)({\n      game: {\n        phase: ''\n      }\n    }),\n    _useState2 = PlayGame_slicedToArray(_useState, 2),\n    playState = _useState2[0],\n    setPlayState = _useState2[1];\n  (0,react.useEffect)(function () {\n    if (playState.game.phase === 'movement') {\n      console.log(mapRef.current);\n    }\n  }, [playState]);\n  var handleClick = function handleClick() {\n    var doc = mapRef.current.contentDocument;\n    var texts = Array.from(doc.getElementsByTagName('text'));\n    texts.forEach(function (text) {\n      text.style.display = 'none';\n    });\n  };\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_Board, {\n    ref: mapRef\n  }), /*#__PURE__*/react.createElement(components_Button, {\n    className: \"overBoard\",\n    onClick: handleClick\n  }, \"click me\"));\n}\n;\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/pregame.scss\nvar pregame = __webpack_require__(119);\n;// CONCATENATED MODULE: ./frontend/styles/pregame.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar pregame_options = {};\n\npregame_options.styleTagTransform = (styleTagTransform_default());\npregame_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      pregame_options.insert = insertBySelector_default().bind(null, \"head\");\n    \npregame_options.domAPI = (styleDomAPI_default());\npregame_options.insertStyleElement = (insertStyleElement_default());\n\nvar pregame_update = injectStylesIntoStyleTag_default()(pregame/* default */.Z, pregame_options);\n\n\n\n\n       /* harmony default export */ const styles_pregame = (pregame/* default */.Z && pregame/* default */.Z.locals ? pregame/* default */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(697);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n;// CONCATENATED MODULE: ./node_modules/react-bootstrap-icons/dist/icons/gear-fill.js\nvar _excluded = [\"color\", \"size\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar GearFill = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/react.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), title ? /*#__PURE__*/react.createElement(\"title\", null, title) : null, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\"\n  }));\n});\nGearFill.propTypes = {\n  color: (prop_types_default()).string,\n  size: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  title: (prop_types_default()).string\n};\nGearFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null\n};\n/* harmony default export */ const gear_fill = (GearFill);\n;// CONCATENATED MODULE: ./node_modules/react-bootstrap-icons/dist/icons/arrow-left-circle-fill.js\nvar arrow_left_circle_fill_excluded = [\"color\", \"size\", \"title\"];\n\nfunction arrow_left_circle_fill_extends() { arrow_left_circle_fill_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return arrow_left_circle_fill_extends.apply(this, arguments); }\n\nfunction arrow_left_circle_fill_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = arrow_left_circle_fill_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction arrow_left_circle_fill_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar ArrowLeftCircleFill = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      rest = arrow_left_circle_fill_objectWithoutProperties(_ref, arrow_left_circle_fill_excluded);\n\n  return /*#__PURE__*/react.createElement(\"svg\", arrow_left_circle_fill_extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), title ? /*#__PURE__*/react.createElement(\"title\", null, title) : null, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\"\n  }));\n});\nArrowLeftCircleFill.propTypes = {\n  color: (prop_types_default()).string,\n  size: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  title: (prop_types_default()).string\n};\nArrowLeftCircleFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null\n};\n/* harmony default export */ const arrow_left_circle_fill = (ArrowLeftCircleFill);\n;// CONCATENATED MODULE: ./node_modules/react-bootstrap-icons/dist/icons/star-fill.js\nvar star_fill_excluded = [\"color\", \"size\", \"title\"];\n\nfunction star_fill_extends() { star_fill_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return star_fill_extends.apply(this, arguments); }\n\nfunction star_fill_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = star_fill_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction star_fill_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar StarFill = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      rest = star_fill_objectWithoutProperties(_ref, star_fill_excluded);\n\n  return /*#__PURE__*/react.createElement(\"svg\", star_fill_extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), title ? /*#__PURE__*/react.createElement(\"title\", null, title) : null, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"\n  }));\n});\nStarFill.propTypes = {\n  color: (prop_types_default()).string,\n  size: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  title: (prop_types_default()).string\n};\nStarFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null\n};\n/* harmony default export */ const star_fill = (StarFill);\n;// CONCATENATED MODULE: ./node_modules/react-bootstrap-icons/dist/icons/person-fill.js\nvar person_fill_excluded = [\"color\", \"size\", \"title\"];\n\nfunction person_fill_extends() { person_fill_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return person_fill_extends.apply(this, arguments); }\n\nfunction person_fill_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = person_fill_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction person_fill_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar PersonFill = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      rest = person_fill_objectWithoutProperties(_ref, person_fill_excluded);\n\n  return /*#__PURE__*/react.createElement(\"svg\", person_fill_extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), title ? /*#__PURE__*/react.createElement(\"title\", null, title) : null, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"\n  }));\n});\nPersonFill.propTypes = {\n  color: (prop_types_default()).string,\n  size: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  title: (prop_types_default()).string\n};\nPersonFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null\n};\n/* harmony default export */ const person_fill = (PersonFill);\n;// CONCATENATED MODULE: ./node_modules/react-bootstrap-icons/dist/icons/robot.js\nvar robot_excluded = [\"color\", \"size\", \"title\"];\n\nfunction robot_extends() { robot_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return robot_extends.apply(this, arguments); }\n\nfunction robot_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = robot_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction robot_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar Robot = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      rest = robot_objectWithoutProperties(_ref, robot_excluded);\n\n  return /*#__PURE__*/react.createElement(\"svg\", robot_extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), title ? /*#__PURE__*/react.createElement(\"title\", null, title) : null, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5ZM3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.58 26.58 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.933.933 0 0 1-.765.935c-.845.147-2.34.346-4.235.346-1.895 0-3.39-.2-4.235-.346A.933.933 0 0 1 3 9.219V8.062Zm4.542-.827a.25.25 0 0 0-.217.068l-.92.9a24.767 24.767 0 0 1-1.871-.183.25.25 0 0 0-.068.495c.55.076 1.232.149 2.02.193a.25.25 0 0 0 .189-.071l.754-.736.847 1.71a.25.25 0 0 0 .404.062l.932-.97a25.286 25.286 0 0 0 1.922-.188.25.25 0 0 0-.068-.495c-.538.074-1.207.145-1.98.189a.25.25 0 0 0-.166.076l-.754.785-.842-1.7a.25.25 0 0 0-.182-.135Z\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M8.5 1.866a1 1 0 1 0-1 0V3h-2A4.5 4.5 0 0 0 1 7.5V8a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1v1a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-1a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1v-.5A4.5 4.5 0 0 0 10.5 3h-2V1.866ZM14 7.5V13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.5A3.5 3.5 0 0 1 5.5 4h5A3.5 3.5 0 0 1 14 7.5Z\"\n  }));\n});\nRobot.propTypes = {\n  color: (prop_types_default()).string,\n  size: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  title: (prop_types_default()).string\n};\nRobot.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null\n};\n/* harmony default export */ const robot = (Robot);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/modal.scss\nvar modal = __webpack_require__(3);\n;// CONCATENATED MODULE: ./frontend/styles/modal.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar modal_options = {};\n\nmodal_options.styleTagTransform = (styleTagTransform_default());\nmodal_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      modal_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nmodal_options.domAPI = (styleDomAPI_default());\nmodal_options.insertStyleElement = (insertStyleElement_default());\n\nvar modal_update = injectStylesIntoStyleTag_default()(modal/* default */.Z, modal_options);\n\n\n\n\n       /* harmony default export */ const styles_modal = (modal/* default */.Z && modal/* default */.Z.locals ? modal/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./node_modules/react-bootstrap-icons/dist/icons/x-circle-fill.js\nvar x_circle_fill_excluded = [\"color\", \"size\", \"title\"];\n\nfunction x_circle_fill_extends() { x_circle_fill_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return x_circle_fill_extends.apply(this, arguments); }\n\nfunction x_circle_fill_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = x_circle_fill_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction x_circle_fill_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar XCircleFill = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      rest = x_circle_fill_objectWithoutProperties(_ref, x_circle_fill_excluded);\n\n  return /*#__PURE__*/react.createElement(\"svg\", x_circle_fill_extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), title ? /*#__PURE__*/react.createElement(\"title\", null, title) : null, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"\n  }));\n});\nXCircleFill.propTypes = {\n  color: (prop_types_default()).string,\n  size: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  title: (prop_types_default()).string\n};\nXCircleFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null\n};\n/* harmony default export */ const x_circle_fill = (XCircleFill);\n;// CONCATENATED MODULE: ./frontend/components/Modal.js\n\n\n\n\n\nvar Modal = function Modal(props) {\n  var children = props.children,\n    title = props.title,\n    exit = props.exit;\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modalOverlay\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modalBody\"\n  }, /*#__PURE__*/react.createElement(components_Header, {\n    right: /*#__PURE__*/react.createElement(components_Button, {\n      Icon: x_circle_fill,\n      onClick: exit\n    })\n  }, title), children)));\n};\n/* harmony default export */ const components_Modal = (Modal);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/settings.scss\nvar settings = __webpack_require__(831);\n;// CONCATENATED MODULE: ./frontend/styles/settings.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar settings_options = {};\n\nsettings_options.styleTagTransform = (styleTagTransform_default());\nsettings_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      settings_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nsettings_options.domAPI = (styleDomAPI_default());\nsettings_options.insertStyleElement = (insertStyleElement_default());\n\nvar settings_update = injectStylesIntoStyleTag_default()(settings/* default */.Z, settings_options);\n\n\n\n\n       /* harmony default export */ const styles_settings = (settings/* default */.Z && settings/* default */.Z.locals ? settings/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/components/Settings.js\nfunction Settings_typeof(o) { \"@babel/helpers - typeof\"; return Settings_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, Settings_typeof(o); }\nfunction Settings_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction Settings_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? Settings_ownKeys(Object(t), !0).forEach(function (r) { Settings_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Settings_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction Settings_defineProperty(obj, key, value) { key = Settings_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction Settings_toPropertyKey(arg) { var key = Settings_toPrimitive(arg, \"string\"); return Settings_typeof(key) === \"symbol\" ? key : String(key); }\nfunction Settings_toPrimitive(input, hint) { if (Settings_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (Settings_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nvar Settings = function Settings(pageState) {\n  var nullState = {\n    name: null,\n    pageState: null,\n    setState: null,\n    error: 0,\n    render: function render() {\n      return /*#__PURE__*/react.createElement(react.Fragment, null);\n    },\n    user: null,\n    game: null\n  };\n  var user = pageState.user;\n  var exit = function exit() {\n    return pageState.setPageState(function (state) {\n      return Settings_objectSpread(Settings_objectSpread({}, state), {}, {\n        showSettings: !state.showSettings\n      });\n    });\n  };\n  var handleLogout = function handleLogout() {\n    localStorage.removeItem('token');\n    pageState.setAppState(function (state) {\n      return Settings_objectSpread({\n        token: null\n      }, nullState);\n    });\n  };\n  var gameRow = pageState.game ? /*#__PURE__*/react.createElement(\"div\", {\n    className: \"settingsGameRow\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"settingsGameHost\"\n  }, \"Veiwing \", pageState.game ? pageState.game.hostUsername : null, \"'s Game\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"settingsGameStatus\"\n  }, \" in \", pageState.game ? pageState.game.status : null), /*#__PURE__*/react.createElement(components_Button, {\n    onClick: function onClick() {\n      return pageState.setAppState(function (_) {\n        return Settings_objectSpread({}, nullState);\n      });\n    }\n  }, \"Back\")) : null;\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_Modal, {\n    title: \"Settings\",\n    exit: exit\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"settingsUserRow\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, \"User: \", user.username), /*#__PURE__*/react.createElement(components_Button, {\n    className: \"cc-alert\",\n    width: 15,\n    height: 15,\n    onClick: handleLogout\n  }, \"Logout\")), gameRow));\n};\n/* harmony default export */ const components_Settings = (Settings);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/chat.scss\nvar chat = __webpack_require__(18);\n;// CONCATENATED MODULE: ./frontend/styles/chat.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar chat_options = {};\n\nchat_options.styleTagTransform = (styleTagTransform_default());\nchat_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      chat_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nchat_options.domAPI = (styleDomAPI_default());\nchat_options.insertStyleElement = (insertStyleElement_default());\n\nvar chat_update = injectStylesIntoStyleTag_default()(chat/* default */.Z, chat_options);\n\n\n\n\n       /* harmony default export */ const styles_chat = (chat/* default */.Z && chat/* default */.Z.locals ? chat/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/components/Chat.js\n\n\n\nvar Chat = function Chat() {\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chatBorder\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chatMessages\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chatMessageWrapper message\"\n  }, \"test\", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chatMessageBubble\"\n  }, \"Hi. I'm Excited to play!\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chatMessageWrapper reply\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chatMessageBubble\"\n  }, \"Hi. I would like to me Iberia.\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chatSendMessageRow\"\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Message\"\n  }), /*#__PURE__*/react.createElement(components_Button, null, \"Send\")));\n};\n/* harmony default export */ const components_Chat = (Chat);\n;// CONCATENATED MODULE: ./frontend/Pages/PreGame.js\nvar _class;\nfunction PreGame_typeof(o) { \"@babel/helpers - typeof\"; return PreGame_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, PreGame_typeof(o); }\nfunction PreGame_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction PreGame_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? PreGame_ownKeys(Object(t), !0).forEach(function (r) { PreGame_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : PreGame_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, PreGame_toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction PreGame_defineProperty(obj, key, value) { key = PreGame_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction PreGame_toPropertyKey(arg) { var key = PreGame_toPrimitive(arg, \"string\"); return PreGame_typeof(key) === \"symbol\" ? key : String(key); }\nfunction PreGame_toPrimitive(input, hint) { if (PreGame_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (PreGame_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n\n\n\nvar PreGameState = /*#__PURE__*/_createClass(function PreGameState(setAppState, game, user) {\n  var _this = this;\n  _classCallCheck(this, PreGameState);\n  this.name = 'pregame';\n  this.setAppState = setAppState;\n  this.setPageState = function (setState) {\n    return _this.setAppState(function (appState) {\n      return PreGame_objectSpread(PreGame_objectSpread({}, appState), {}, {\n        pageState: setState(appState.pageState)\n      });\n    });\n  };\n  this.errorSetter = function (error) {\n    return _this.setPageState(function (state) {\n      return PreGame_objectSpread(PreGame_objectSpread({}, state), {}, {\n        error: error\n      });\n    });\n  };\n  this.game = game;\n  this.user = user;\n  this.render = function (appState) {\n    return PreGame(appState);\n  };\n  this.showSettings = false;\n});\n_class = PreGameState;\nPreGame_defineProperty(PreGameState, \"new\", function (setter, game, user) {\n  return {\n    name: 'pregame',\n    pageState: new _class(setter, game, user)\n  };\n});\n\n;\nvar PreGame = function PreGame(appState) {\n  var pageState = appState.pageState,\n    token = appState.token;\n  var game = pageState.game,\n    user = pageState.user;\n  var players = game.players || null;\n  var civilizations = game.civilizations || [];\n  var isHost = game.hostId === user.userId;\n  var toggleGameProperty = function toggleGameProperty(propertyName) {\n    var setter = function setter(game) {\n      return pageState.setPageState(function (state) {\n        return PreGame_objectSpread(PreGame_objectSpread({}, state), {}, {\n          game: game\n        });\n      });\n    };\n    setServerState(setter, pageState.errorSetter, '/pregame/settings', PreGame_defineProperty({\n      token: token\n    }, propertyName, !pageState.game[propertyName]), PreGame_objectSpread(PreGame_objectSpread({}, pageState.game), {}, PreGame_defineProperty({}, propertyName, !pageState.game[propertyName])));\n  };\n  var changeGameProperty = function changeGameProperty(propertyName, value) {\n    var setter = function setter(game) {\n      return pageState.setPageState(function (state) {\n        return PreGame_objectSpread(PreGame_objectSpread({}, state), {}, {\n          game: game\n        });\n      });\n    };\n    setServerState(setter, pageState.errorSetter, '/pregame/settings', PreGame_defineProperty({\n      token: token\n    }, propertyName, value), PreGame_objectSpread(PreGame_objectSpread({}, pageState.game), {}, PreGame_defineProperty({}, propertyName, value)));\n  };\n  var nullState = {\n    name: null,\n    pageState: null,\n    setState: null,\n    error: 0,\n    render: function render() {\n      return /*#__PURE__*/react.createElement(react.Fragment, null);\n    },\n    user: null,\n    game: null\n  };\n  var settingsButton = /*#__PURE__*/react.createElement(components_Button, {\n    Icon: gear_fill,\n    onClick: function onClick() {\n      return pageState.setPageState(function (state) {\n        return PreGame_objectSpread(PreGame_objectSpread({}, state), {}, {\n          showSettings: !state.showSettings\n        });\n      });\n    }\n  });\n  var backButton = /*#__PURE__*/react.createElement(components_Button, {\n    Icon: arrow_left_circle_fill,\n    onClick: function onClick() {\n      return pageState.setAppState(function (_) {\n        return PreGame_objectSpread({}, nullState);\n      });\n    }\n  });\n\n  // needs a setServerStateAsync\n  var handleCivilizationChange = function handleCivilizationChange(userId, civilizationId) {\n    return console.log(\"changing user \".concat(userId, \" to civlilzation \").concat(civilizationId));\n  };\n  var civilizationFor = function civilizationFor(player) {\n    var _civilizations$filter;\n    return (_civilizations$filter = civilizations.filter(function (civilization) {\n      return civilization.civilizationId === player.civilizationId;\n    })) === null || _civilizations$filter === void 0 ? void 0 : _civilizations$filter[0];\n  };\n  var civilizationOption = function civilizationOption(civilization, key) {\n    return /*#__PURE__*/react.createElement(\"option\", {\n      disabled: civilization.isTaken,\n      value: civilization.civilizationId,\n      style: {\n        backgroundColor: civilization.color\n      },\n      key: key\n    }, utilities_title(civilization.name));\n  };\n  var civilizationSelect = function civilizationSelect(player) {\n    return /*#__PURE__*/react.createElement(\"select\", {\n      className: \"pregameCivilizationSelect\",\n      value: player.civilizationId,\n      onChange: function onChange(event) {\n        return handleCivilizationChange(player.userId, event.target.value);\n      },\n      style: {\n        backgroundColor: civilizationFor(player).color\n      }\n    }, civilizations.map(civilizationOption));\n  };\n  var civilizationDisplay = function civilizationDisplay(player) {\n    return /*#__PURE__*/react.createElement(\"div\", {\n      className: \"pregameCivilizationDisplay\",\n      style: {\n        backgroundColor: civilizationFor(player).color\n      }\n    }, utilities_title(civilizationFor(player).name));\n  };\n  var playerRow = function playerRow(player, key) {\n    var isUser = player.userId === user.userId;\n    var playerIsHost = player.userId === game.hostId;\n    var icon = /*#__PURE__*/react.createElement(\"div\", {\n      className: \"pregamePlayerIcon\"\n    }, playerIsHost ? /*#__PURE__*/react.createElement(star_fill, {\n      color: \"yellow\"\n    }) : isUser ? /*#__PURE__*/react.createElement(person_fill, {\n      color: \"lightblue\"\n    }) : player.type === 'human' ? /*#__PURE__*/react.createElement(person_fill, {\n      color: \"black\"\n    }) : /*#__PURE__*/react.createElement(robot, {\n      color: \"black\"\n    }));\n    return /*#__PURE__*/react.createElement(\"div\", {\n      key: key,\n      className: \"pregamePlayerRow\"\n    }, icon, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"pregamePlayerUsername\"\n    }, player.username), isHost || isUser ? civilizationSelect(player) : civilizationDisplay(player));\n  };\n  var playersCard = /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregamePlayersCardWrapper\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregamePlayersCardText\"\n  }, \"Players\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregamePlayersCard\"\n  }, players ? players.map(playerRow) : 'loading...'));\n  var gameSettingsCard = /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameSettingsCardWrapper\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameSettingsCardText\"\n  }, \"Settings\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameSettingsCard\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameSettingRow\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, \"Max number of players\"), /*#__PURE__*/react.createElement(\"input\", {\n    className: \"inpN\",\n    type: \"number\",\n    value: game.maxNumberOfPlayers,\n    onChange: function onChange(event) {\n      return changeGameProperty('maxNumberOfPlayers', event.target.value);\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameSettingRow\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, \"Allow AI\"), /*#__PURE__*/react.createElement(components_Button, {\n    checkable: true,\n    checked: game.allowAI,\n    onClick: function onClick() {\n      return toggleGameProperty('allowAI');\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameSettingRow\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, \"Use advanced AST track\"), /*#__PURE__*/react.createElement(components_Button, {\n    checkable: true,\n    checked: game.useAdvancedAST,\n    onClick: function onClick() {\n      return toggleGameProperty('useAdvancedAST');\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameSettingRow\"\n  }, \"Civilizations\")), /*#__PURE__*/react.createElement(components_Button, {\n    className: \"pregameStart\"\n  }, \"Start The Game Already\"));\n  var chatCard = /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameChatWrapper\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameChatText\"\n  }, \"Chat\"), components_Chat());\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_Header, {\n    left: backButton,\n    right: settingsButton\n  }, \"Mega Empires\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pregameBody\"\n  }, playersCard, gameSettingsCard, chatCard), pageState.showSettings ? components_Settings(pageState) : null);\n};\n;// CONCATENATED MODULE: ./node_modules/react-bootstrap-icons/dist/icons/map-fill.js\nvar map_fill_excluded = [\"color\", \"size\", \"title\"];\n\nfunction map_fill_extends() { map_fill_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return map_fill_extends.apply(this, arguments); }\n\nfunction map_fill_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = map_fill_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction map_fill_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar MapFill = /*#__PURE__*/(0,react.forwardRef)(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      rest = map_fill_objectWithoutProperties(_ref, map_fill_excluded);\n\n  return /*#__PURE__*/react.createElement(\"svg\", map_fill_extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), title ? /*#__PURE__*/react.createElement(\"title\", null, title) : null, /*#__PURE__*/react.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M16 .5a.5.5 0 0 0-.598-.49L10.5.99 5.598.01a.5.5 0 0 0-.196 0l-5 1A.5.5 0 0 0 0 1.5v14a.5.5 0 0 0 .598.49l4.902-.98 4.902.98a.502.502 0 0 0 .196 0l5-1A.5.5 0 0 0 16 14.5V.5zM5 14.09V1.11l.5-.1.5.1v12.98l-.402-.08a.498.498 0 0 0-.196 0L5 14.09zm5 .8V1.91l.402.08a.5.5 0 0 0 .196 0L11 1.91v12.98l-.5.1-.5-.1z\"\n  }));\n});\nMapFill.propTypes = {\n  color: (prop_types_default()).string,\n  size: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]),\n  title: (prop_types_default()).string\n};\nMapFill.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null\n};\n/* harmony default export */ const map_fill = (MapFill);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/choose.scss\nvar choose = __webpack_require__(870);\n;// CONCATENATED MODULE: ./frontend/styles/choose.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar choose_options = {};\n\nchoose_options.styleTagTransform = (styleTagTransform_default());\nchoose_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      choose_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nchoose_options.domAPI = (styleDomAPI_default());\nchoose_options.insertStyleElement = (insertStyleElement_default());\n\nvar choose_update = injectStylesIntoStyleTag_default()(choose/* default */.Z, choose_options);\n\n\n\n\n       /* harmony default export */ const styles_choose = (choose/* default */.Z && choose/* default */.Z.locals ? choose/* default */.Z.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/mapeditor.scss\nvar mapeditor = __webpack_require__(756);\n;// CONCATENATED MODULE: ./frontend/styles/mapeditor.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar mapeditor_options = {};\n\nmapeditor_options.styleTagTransform = (styleTagTransform_default());\nmapeditor_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      mapeditor_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nmapeditor_options.domAPI = (styleDomAPI_default());\nmapeditor_options.insertStyleElement = (insertStyleElement_default());\n\nvar mapeditor_update = injectStylesIntoStyleTag_default()(mapeditor/* default */.Z, mapeditor_options);\n\n\n\n\n       /* harmony default export */ const styles_mapeditor = (mapeditor/* default */.Z && mapeditor/* default */.Z.locals ? mapeditor/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/assets/MegaCiv_Mapboard.jpg\n/* harmony default export */ const MegaCiv_Mapboard = (__webpack_require__.p + \"10946e158ed2eee438e76f108d105d45.jpg\");\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/gameeditor.scss\nvar gameeditor = __webpack_require__(783);\n;// CONCATENATED MODULE: ./frontend/styles/gameeditor.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar gameeditor_options = {};\n\ngameeditor_options.styleTagTransform = (styleTagTransform_default());\ngameeditor_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      gameeditor_options.insert = insertBySelector_default().bind(null, \"head\");\n    \ngameeditor_options.domAPI = (styleDomAPI_default());\ngameeditor_options.insertStyleElement = (insertStyleElement_default());\n\nvar gameeditor_update = injectStylesIntoStyleTag_default()(gameeditor/* default */.Z, gameeditor_options);\n\n\n\n\n       /* harmony default export */ const styles_gameeditor = (gameeditor/* default */.Z && gameeditor/* default */.Z.locals ? gameeditor/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/Pages/GameEditor.js\nfunction GameEditor_typeof(o) { \"@babel/helpers - typeof\"; return GameEditor_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, GameEditor_typeof(o); }\nfunction GameEditor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction GameEditor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, GameEditor_toPropertyKey(descriptor.key), descriptor); } }\nfunction GameEditor_createClass(Constructor, protoProps, staticProps) { if (protoProps) GameEditor_defineProperties(Constructor.prototype, protoProps); if (staticProps) GameEditor_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction GameEditor_defineProperty(obj, key, value) { key = GameEditor_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction GameEditor_toPropertyKey(arg) { var key = GameEditor_toPrimitive(arg, \"string\"); return GameEditor_typeof(key) === \"symbol\" ? key : String(key); }\nfunction GameEditor_toPrimitive(input, hint) { if (GameEditor_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (GameEditor_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\nfunction GameEditor(props) {\n  var _class, _class2;\n  var appState = props.appState,\n    setAppState = props.setAppState;\n  var mapAreas = appState.mapAreas,\n    mapMeta = appState.mapMeta;\n  var resolution = mapMeta.resolution,\n    Nx = mapMeta.Nx,\n    Ny = mapMeta.Ny;\n  var mapWidth = 1600;\n  var mapHeight = 552;\n  var scaleMin = 1;\n  var scaleMax = 10;\n  var mapValues = (0,react.useRef)({\n    x: 0,\n    y: 0,\n    scale: scaleMin,\n    clicking: false,\n    moving: false\n  });\n  var mapRef = /*#__PURE__*/(0,react.createRef)();\n  var changeElement = function changeElement(elem, attr, value) {\n    elem.attributes[attr].value = value;\n  };\n  var _Area = /*#__PURE__*/function () {\n    function _Area(name, type, points, cityPoint, floodPlainPoints, isFlood, support, waterPoints) {\n      GameEditor_classCallCheck(this, _Area);\n      this.name = name;\n      this.type = type;\n      this.points = points;\n      this.cityPoint = cityPoint;\n      this.floodPlainPoints = floodPlainPoints;\n      this.volcanoPoint = this.volcanoPoint;\n      this.isFlood = isFlood;\n      this.support = support;\n      this.waterPoints = waterPoints;\n    }\n    GameEditor_createClass(_Area, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n        var boundPoint = function boundPoint(point) {\n          var tl = !_this.points.some(function (other) {\n            return other.nx == point.nx && other.ny == point.ny - 1;\n          });\n          var tr = !_this.points.some(function (other) {\n            return other.nx == point.nx + 1 && other.ny == point.ny - 1;\n          });\n          var r = !_this.points.some(function (other) {\n            return other.nx == point.nx + 1 && other.ny == point.ny;\n          });\n          var br = !_this.points.some(function (other) {\n            return other.nx == point.nx + 1 && other.ny == point.ny + 1;\n          });\n          var bl = !_this.points.some(function (other) {\n            return other.nx == point.nx && other.ny == point.ny + 1;\n          });\n          var l = !_this.points.some(function (other) {\n            return other.nx == point.nx - 1 && other.ny == point.ny;\n          });\n          return new _Point(point.nx, point.ny, tl, tr, r, br, bl, l);\n        };\n        var enterArea = function enterArea(event) {\n          console.log(event.target);\n          changeElement(event.target, 'fill', 'green');\n        };\n        var leaveArea = function leaveArea(event) {\n          changeElement(event.target, 'fill', 'white');\n        };\n        var pointsBounds = this.points.map(boundPoint);\n        var draw = function draw(point) {\n          return _Point.from(point).render();\n        };\n        return /*#__PURE__*/react.createElement(\"g\", {\n          stroke: \"black\",\n          key: this.id,\n          id: \"mapArea\".concat(this.id),\n          strokeLinecap: \"round\",\n          strokeWidth: .5,\n          onMouseEnter: enterArea,\n          onMouseLeave: leaveArea\n        }, pointsBounds.map(draw));\n      }\n    }]);\n    return _Area;\n  }();\n  _class = _Area;\n  GameEditor_defineProperty(_Area, \"from\", function (area) {\n    return new _class(area.name, area.type, area.points, area.cityPoint, area.floodPlainPoints, area.volcanoPoint, area.isFlood, area.support, area.waterPoints);\n  });\n  ;\n  var _Point = /*#__PURE__*/function () {\n    function _Point(nx, ny, tl, tr, r, br, bl, l) {\n      GameEditor_classCallCheck(this, _Point);\n      this.nx = nx;\n      this.ny = ny;\n      this.tl = tl;\n      this.tr = tr;\n      this.r = r;\n      this.br = br;\n      this.bl = bl;\n      this.l = l;\n    }\n    GameEditor_createClass(_Point, [{\n      key: \"render\",\n      value: function render() {\n        var _packingWidth = Math.sqrt(3) / 2 * resolution;\n        var _packingHeight = 3 / 4 * resolution;\n        var _xStep = _packingWidth / 2;\n        var _yStep = _packingHeight / 3;\n        var _x = _packingWidth * (this.nx - 1) + resolution - (this.ny % 2 ? _xStep : 0);\n        var _y = _packingHeight * this.ny;\n        return /*#__PURE__*/react.createElement(react.Fragment, null, this.tl ? /*#__PURE__*/react.createElement(\"path\", {\n          d: \"m\".concat(_x, \" \").concat(_y, \"l\").concat(_xStep, \" \").concat(-_yStep)\n        }) : null, this.tr ? /*#__PURE__*/react.createElement(\"path\", {\n          d: \"m\".concat(_x + _xStep, \" \").concat(_y - _yStep, \"l\").concat(_xStep, \" \").concat(_yStep)\n        }) : null, this.r ? /*#__PURE__*/react.createElement(\"path\", {\n          d: \"m\".concat(_x + 2 * _xStep, \" \").concat(_y, \"v\").concat(2 * _yStep)\n        }) : null, this.br ? /*#__PURE__*/react.createElement(\"path\", {\n          d: \"m\".concat(_x + 2 * _xStep, \" \").concat(_y + 2 * _yStep, \"l\").concat(-_xStep, \" \").concat(_yStep)\n        }) : null, this.bl ? /*#__PURE__*/react.createElement(\"path\", {\n          d: \"m\".concat(_x + _xStep, \" \").concat(_y + 3 * _yStep, \"l\").concat(-_xStep, \" \").concat(-_yStep)\n        }) : null, this.l ? /*#__PURE__*/react.createElement(\"path\", {\n          d: \"m\".concat(_x, \" \").concat(_y, \"v\").concat(2 * _yStep)\n        }) : null);\n      }\n    }]);\n    return _Point;\n  }();\n  _class2 = _Point;\n  GameEditor_defineProperty(_Point, \"from\", function (point) {\n    return new _class2(point.nx, point.ny, point.tl, point.tr, point.r, point.br, point.bl, point.l);\n  });\n  ;\n  var draw = function draw(area) {\n    return _Area.from(area).render();\n  };\n  var handleMouseDown = function handleMouseDown(event) {\n    mapValues.current.moving = true;\n    mapValues.current.clicking = true;\n  };\n  var handleMouseMove = function handleMouseMove(event) {\n    if (mapValues.current.moving) {\n      var boardWidth = mapRef.current.parentNode.clientWidth;\n      var boardHeight = mapRef.current.parentNode.clientHeight;\n      var scale = mapValues.current.scale;\n      var xMin = (1 - 1 / scale) * mapWidth;\n      var yMin = (1 - 1 / scale) * mapHeight;\n      var xMax = boardWidth - mapWidth - yMin * scale;\n      var yMax = boardHeight - mapHeight - yMin;\n      var x = mapValues.current.x;\n      var y = mapValues.current.y;\n      var dx = event.movementX;\n      var dy = event.movementY;\n      var tx = x + dx;\n      var ty = y + dy;\n      console.log(scale, yMin, ty, yMax);\n      var ix = tx > xMin || xMax > xMin ? xMin : tx < xMax ? xMax : tx;\n      var iy = ty > yMin || yMax > yMin ? yMin : ty < yMax ? yMax : ty;\n      mapValues.current.x = ix;\n      mapValues.current.y = iy;\n      changeElement(mapRef.current, 'transform', \"translate(\".concat(mapValues.current.x, \" \").concat(mapValues.current.y, \") scale(\").concat(mapValues.current.scale, \" \").concat(mapValues.current.scale, \")\"));\n    }\n    ;\n  };\n  var handleMouseUp = function handleMouseUp() {\n    mapValues.current.moving = false;\n    mapValues.current.clicking = false;\n  };\n  var handleWheel = function handleWheel(event) {\n    // const boardWidth = mapRef.current.parentNode.clientWidth;\n    // const boardHeight = mapRef.current.parentNode.clientHeight;\n    // const px = event.clientX/mapValues.current.scale-boardWidth/2;\n    // const py = event.clientY/mapValues.current.scale-boardHeight/2;\n    var tScale = mapValues.current.scale + (event.deltaY > 0 ? -1 : 1);\n    console.log(tScale, mapValues.current.x, mapValues.current.y);\n    mapValues.current.scale = tScale <= scaleMin ? scaleMin : tScale > scaleMax ? scaleMax : tScale;\n    // const tx = -px*mapValues.current.scale;\n    // const ty = -py*mapValues.current.scale;\n    // mapValues.current.x = tx;\n    // mapValues.current.y = ty;\n    changeElement(mapRef.current, 'transform', \"translate(\".concat(mapValues.current.x, \" \").concat(mapValues.current.y, \") scale(\").concat(mapValues.current.scale, \" \").concat(mapValues.current.scale, \")\"));\n  };\n  var handleMouseLeave = function handleMouseLeave() {\n    mapValues.current.moving = false;\n  };\n  var map = (0,react.useMemo)(function () {\n    return /*#__PURE__*/react.createElement(\"svg\", {\n      ref: mapRef,\n      tabIndex: 0,\n      style: {\n        backgroundImage: \"url(\".concat(MegaCiv_Mapboard, \")\"),\n        backgroundSize: 'cover',\n        backgroundPositionX: 0,\n        backgroundPositionY: 0,\n        position: \"absolute\",\n        top: 0\n      },\n      width: 1600,\n      height: 552,\n      transform: \"scale(1 1) translate(0 0)\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onWheel: handleWheel,\n      onMouseLeave: handleMouseLeave\n    }, mapAreas.map(draw));\n  }, []);\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      overflow: \"hidden\",\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%'\n    }\n  }, map);\n}\n;\n;// CONCATENATED MODULE: ./frontend/Pages/MapEditor.js\nfunction MapEditor_typeof(o) { \"@babel/helpers - typeof\"; return MapEditor_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, MapEditor_typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || MapEditor_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return MapEditor_arrayLikeToArray(arr); }\nfunction MapEditor_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction MapEditor_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? MapEditor_ownKeys(Object(t), !0).forEach(function (r) { MapEditor_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : MapEditor_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction MapEditor_defineProperty(obj, key, value) { key = MapEditor_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction MapEditor_slicedToArray(arr, i) { return MapEditor_arrayWithHoles(arr) || MapEditor_iterableToArrayLimit(arr, i) || MapEditor_unsupportedIterableToArray(arr, i) || MapEditor_nonIterableRest(); }\nfunction MapEditor_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction MapEditor_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return MapEditor_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return MapEditor_arrayLikeToArray(o, minLen); }\nfunction MapEditor_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction MapEditor_iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction MapEditor_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction MapEditor_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, MapEditor_toPropertyKey(descriptor.key), descriptor); } }\nfunction MapEditor_createClass(Constructor, protoProps, staticProps) { if (protoProps) MapEditor_defineProperties(Constructor.prototype, protoProps); if (staticProps) MapEditor_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction MapEditor_toPropertyKey(arg) { var key = MapEditor_toPrimitive(arg, \"string\"); return MapEditor_typeof(key) === \"symbol\" ? key : String(key); }\nfunction MapEditor_toPrimitive(input, hint) { if (MapEditor_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (MapEditor_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction MapEditor_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\nfunction MapEditor(props) {\n  var areaId = 0;\n  var appState = props.appState,\n    setAppState = props.setAppState;\n  var _Point = /*#__PURE__*/MapEditor_createClass(function _Point(elem) {\n    MapEditor_classCallCheck(this, _Point);\n    this.nx = elem.attributes.nx.value;\n    this.ny = elem.attributes.ny.value;\n    this.elem = elem;\n  });\n  ;\n  var _Area = /*#__PURE__*/MapEditor_createClass(function _Area() {\n    MapEditor_classCallCheck(this, _Area);\n    this.name = '';\n    this.points = [];\n    this.openSeaPoints = [];\n    this.coastalPoints = [];\n    this.cityPoint = null;\n    this.floodPlainPoints = [];\n    this.volcanoPoint = null;\n    this.floodPlainCityPoint = null;\n    this.support = 0;\n    this.waterPoints = [];\n    this.id = areaId;\n    areaId += 1;\n    console.log(this);\n  });\n  ;\n  var _useState = (0,react.useState)({\n      areas: [],\n      currentArea: new _Area(),\n      down: false,\n      showCurrent: false,\n      showMapAreas: false,\n      mapName: '',\n      numberOfNodes: 15200\n    }),\n    _useState2 = MapEditor_slicedToArray(_useState, 2),\n    editorState = _useState2[0],\n    setEditorState = _useState2[1];\n\n  // 208 * 71 ~= 15000 and 208 * 7px = 1600px\n  // 52 * 17 ~= 884 and 52 * 28px = 1456px\n  var resolution = 12;\n  var Nx = Math.ceil(1600 / resolution * 2 * Math.sqrt(3) / 3);\n  var Ny = Math.ceil(552 / resolution / 3 * 4);\n  var maxScale = 10;\n  var minScale = 1;\n  var mapRef = /*#__PURE__*/(0,react.createRef)();\n  var mapValues = (0,react.useRef)({\n    scale: 3,\n    mx: 0,\n    my: 0,\n    moving: false,\n    hovered: null,\n    selected: null\n  });\n  function changeElement(elem, attr, value) {\n    elem.attributes[attr].value = value;\n  }\n  ;\n  var moveInBounds = function moveInBounds() {\n    mapRef.current.scrollIntoView({\n      block: 'nearest',\n      inline: 'nearest'\n    });\n  };\n  var handleMouseDown = (0,react.useCallback)(function (event) {\n    mapValues.current.clicking = true;\n    mapValues.current.moving = true;\n  }, [mapRef]);\n  var handleMouseMoveMap = (0,react.useCallback)(function (event) {\n    mapValues.current.clicking = false;\n    if (mapValues.current.moving) {\n      mapValues.current.mx += event.movementX;\n      mapValues.current.my += event.movementY;\n      changeElement(mapRef.current, 'transform', \"translate(\".concat(mapValues.current.mx, \" \").concat(mapValues.current.my, \") scale(\").concat(mapValues.current.scale, \" \").concat(mapValues.current.scale, \")\"));\n      moveInBounds();\n    }\n    ;\n  }, [mapRef]);\n  var handleMouseUpMap = function handleMouseUpMap() {\n    mapValues.current.moving = false;\n  };\n  var handleMouseUpHex = (0,react.useCallback)(function (event) {\n    var target = event.target;\n    var isUsed = target.attributes.isused.value === 'true';\n    if (mapValues.current.clicking && !isUsed) {\n      var alt = event.altKey;\n      var shift = event.shiftKey;\n      var ctrl = event.ctrlKey;\n      var isSelected = target.attributes.isselected.value === 'true';\n      if (isSelected) {\n        // deselect - blue\n        setEditorState(function (state) {\n          var _state$currentArea$ci, _state$currentArea$fl, _state$currentArea$vo;\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n            currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n              points: state.currentArea.points.filter(function (point) {\n                return point.elem !== target;\n              }),\n              cityPoint: ((_state$currentArea$ci = state.currentArea.cityPoint) === null || _state$currentArea$ci === void 0 ? void 0 : _state$currentArea$ci.elem) === target ? null : state.currentArea.cityPoint,\n              floodPlainCityPoint: ((_state$currentArea$fl = state.currentArea.floodPlainCityPoint) === null || _state$currentArea$fl === void 0 ? void 0 : _state$currentArea$fl.elem) === target ? null : state.currentArea.floodPlainCityPoint,\n              floodPlainPoints: state.currentArea.floodPlainPoints.filter(function (point) {\n                return point.elem !== target;\n              }),\n              volcanoPoint: ((_state$currentArea$vo = state.currentArea.volcanoPoint) === null || _state$currentArea$vo === void 0 ? void 0 : _state$currentArea$vo.elem) === target ? null : state.currentArea.volcanoPoint,\n              coastalPoints: state.currentArea.coastalPoints.filter(function (point) {\n                return point.elem !== target;\n              }),\n              openSeaPoints: state.currentArea.openSeaPoints.filter(function (point) {\n                return point.elem !== target;\n              })\n            })\n          });\n        });\n        changeElement(target, 'fill', 'blue');\n        changeElement(target, 'opacity', .3);\n      } else {\n        changeElement(target, 'opacity', 1);\n        if (ctrl && shift && alt) {// not implemented/reserved\n        } else if (ctrl && shift && !alt) {\n          // open sea - dark blue \n          setEditorState(function (state) {\n            return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n              currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n                openSeaPoints: [].concat(_toConsumableArray(state.currentArea.openSeaPoints), [new _Point(target)])\n              })\n            });\n          });\n          changeElement(target, 'fill', 'darkblue');\n        } else if (ctrl && !shift && alt) {\n          // flood plain city - white\n          setEditorState(function (state) {\n            return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n              currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n                floodPlainCityPoint: new _Point(target)\n              })\n            });\n          });\n          changeElement(target, 'fill', !isSelected ? 'white' : 'blue');\n        } else if (ctrl && !shift && !alt) {\n          // plain city - black\n          setEditorState(function (state) {\n            return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n              currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n                cityPoint: new _Point(target)\n              })\n            });\n          });\n          changeElement(target, 'fill', 'black');\n        } else if (!ctrl && shift && alt) {\n          // volcano - red\n          setEditorState(function (state) {\n            return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n              currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n                volcanoPoint: new _Point(target)\n              })\n            });\n          });\n          changeElement(target, 'fill', 'red');\n        } else if (!ctrl && shift && !alt) {\n          // coastal - light blue\n          setEditorState(function (state) {\n            return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n              currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n                coastalPoints: [].concat(_toConsumableArray(state.currentArea.coastalPoints), [new _Point(target)])\n              })\n            });\n          });\n          changeElement(target, 'fill', 'lightblue');\n        } else if (!ctrl && !shift && alt) {\n          // flood plain - dark green\n          setEditorState(function (state) {\n            return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n              currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n                floodPlainPoints: [].concat(_toConsumableArray(state.currentArea.floodPlainPoints), [new _Point(target)])\n              })\n            });\n          });\n          changeElement(target, 'fill', 'darkgreen');\n        } else {\n          // default/none - yellow\n          changeElement(target, 'fill', 'yellow');\n        }\n        ;\n        setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n            currentArea: MapEditor_objectSpread(MapEditor_objectSpread({}, state.currentArea), {}, {\n              points: [].concat(_toConsumableArray(state.currentArea.points), [new _Point(target)])\n            })\n          });\n        });\n      }\n      ;\n      changeElement(target, 'isselected', !isSelected);\n    }\n    ;\n  }, [mapRef]);\n  var handleMouseEnterHex = (0,react.useCallback)(function (event) {\n    var hovered = event.target;\n    var isSelected = hovered.attributes.isselected.value === 'true';\n    var isUsed = hovered.attributes.isused.value === 'true';\n    if (!isSelected && !isUsed) {\n      mapValues.current.hovered = hovered;\n      changeElement(hovered, 'fill', 'green');\n    }\n    ;\n  }, [mapRef]);\n  var handleMouseLeaveHex = (0,react.useCallback)(function (event) {\n    var hovered = mapValues.current.hovered;\n    var isSelected = hovered ? hovered.attributes.isselected.value === 'true' : false;\n    var isUsed = hovered ? hovered.attributes.isused.value === 'true' : false;\n    if (hovered && !isSelected && !isUsed) {\n      changeElement(hovered, 'fill', 'blue');\n    }\n    ;\n  }, [mapRef]);\n  var handleMouseLeaveMap = function handleMouseLeaveMap() {\n    mapValues.current.moving = false;\n  };\n  var handleWheel = (0,react.useCallback)(function (event) {\n    var scrollDirection = event.deltaY < 0 ? 1 : -1;\n    var targetScale = mapValues.current.scale + scrollDirection;\n    if (targetScale < maxScale && targetScale >= minScale) {\n      mapValues.current.mx += (targetScale / mapValues.current.scale - 1) * mapValues.current.mx;\n      mapValues.current.my += (targetScale / mapValues.current.scale - 1) * mapValues.current.my;\n      mapValues.current.scale = targetScale;\n      var transform = \"translate(\".concat(mapValues.current.mx, \" \").concat(mapValues.current.my, \") scale(\").concat(mapValues.current.scale, \" \").concat(mapValues.current.scale, \")\");\n      changeElement(mapRef.current, 'transform', transform);\n      moveInBounds();\n    }\n    ;\n  }, [mapRef]);\n  var Hexagon = function Hexagon(props) {\n    var _nx = props.nx || 0;\n    var _ny = props.ny || 0;\n    var _scale = props.scale;\n    var _height = _scale || 40;\n    var _width = _scale || 40;\n    var _yStep = _height / 4;\n    var _xStep = Math.sqrt(3) * _width / 4;\n    var _xOff = _width - 2 * _xStep;\n    var _x = 2 * _xStep * _nx - (_ny % 2 ? _xStep : 0);\n    var _y = 3 * _yStep * _ny - _yStep;\n    return /*#__PURE__*/react.createElement(\"path\", {\n      nx: _nx,\n      ny: _ny,\n      d: \"M\".concat(_x + _xOff, \" \").concat(_y + _yStep, \" l\").concat(_xStep, \" \").concat(-_yStep, \" l\").concat(_xStep, \" \").concat(_yStep, \" v\").concat(2 * _yStep, \" l\").concat(-_xStep, \" \").concat(_yStep, \" l\").concat(-_xStep, \" \").concat(-_yStep, \" z\"),\n      fill: \"blue\",\n      stroke: \"black\",\n      strokeWidth: .5,\n      onMouseDown: handleMouseDown,\n      onMouseEnter: function onMouseEnter(event) {\n        return handleMouseEnterHex(event);\n      },\n      onMouseLeave: function onMouseLeave(event) {\n        return handleMouseLeaveHex(event);\n      },\n      onMouseUp: function onMouseUp(event) {\n        return handleMouseUpHex(event);\n      },\n      isselected: \"false\",\n      isused: \"false\",\n      opacity: .3\n    });\n  };\n  var map = (0,react.useMemo)(function () {\n    var scale = mapValues.current.scale;\n    var points = Array.from(Array(Nx)).map(function (_, nx) {\n      return Array.from(Array(Ny)).map(function (_, ny) {\n        return [nx, ny];\n      });\n    }).flat(1);\n    var hexagons = points.map(function (_ref, key) {\n      var _ref2 = MapEditor_slicedToArray(_ref, 2),\n        nx = _ref2[0],\n        ny = _ref2[1];\n      return /*#__PURE__*/react.createElement(Hexagon, {\n        key: key,\n        nx: nx,\n        ny: ny,\n        scale: resolution\n      });\n    });\n    return /*#__PURE__*/react.createElement(\"svg\", {\n      ref: mapRef,\n      tabIndex: 0,\n      style: {\n        backgroundImage: \"url(\".concat(MegaCiv_Mapboard, \")\"),\n        backgroundSize: 'cover',\n        backgroundPositionX: 0,\n        backgroundPositionY: 0\n      },\n      onMouseDown: handleMouseDown,\n      onMouseLeave: handleMouseLeaveMap,\n      onMouseUp: handleMouseUpMap,\n      onMouseMove: handleMouseMoveMap,\n      onWheel: handleWheel,\n      width: 1600,\n      height: 552,\n      transform: \"scale(1 1) translate(0 0)\"\n    }, hexagons);\n  }, []);\n  function Overlay() {\n    function TextEntry(props) {\n      var label = props.label,\n        stateName = props.stateName,\n        sub = props.sub,\n        number = props.number;\n      var stateValue = sub ? editorState[sub][stateName] : editorState[stateName];\n      var id = stateName + 'Input';\n      var setter = function setter(event) {\n        return sub ? setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, MapEditor_defineProperty({}, sub, MapEditor_objectSpread(MapEditor_objectSpread({}, state[sub]), {}, MapEditor_defineProperty({}, stateName, event.target.value))));\n        }) : setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, MapEditor_defineProperty({}, stateName, event.target.value));\n        });\n      };\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"textEntryRow\"\n      }, /*#__PURE__*/react.createElement(\"label\", {\n        htmlFor: id,\n        className: \"textEntryLabel\"\n      }, label), /*#__PURE__*/react.createElement(\"input\", {\n        id: id,\n        className: \"textEntryInput\",\n        min: 0,\n        type: number ? 'number' : 'text',\n        placeholder: label,\n        value: stateValue,\n        onChange: setter\n      }));\n    }\n    ;\n    function DisplayValue(props) {\n      var label = props.label,\n        value = props.value;\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"textEntryRow\"\n      }, /*#__PURE__*/react.createElement(\"div\", null, label), /*#__PURE__*/react.createElement(\"div\", null, value));\n    }\n    ;\n    function SelectType(props) {\n      var label = props.label,\n        stateName = props.stateName,\n        optionLabelValues = props.optionLabelValues,\n        sub = props.sub;\n      var stateValue = sub ? editorState[sub][stateName] : editorState[stateName];\n      var setter = function setter(event) {\n        return sub ? setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, MapEditor_defineProperty({}, sub, MapEditor_objectSpread(MapEditor_objectSpread({}, state[sub]), {}, MapEditor_defineProperty({}, stateName, event.target.value))));\n        }) : setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, MapEditor_defineProperty({}, stateName, event.target.value));\n        });\n      };\n      var options = optionLabelValues.map(function (option, key) {\n        return /*#__PURE__*/react.createElement(\"option\", {\n          key: key,\n          value: option.value\n        }, option.label);\n      });\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"textEntryRow\"\n      }, /*#__PURE__*/react.createElement(\"div\", null, label), /*#__PURE__*/react.createElement(\"select\", {\n        className: \"selectType\",\n        value: stateValue,\n        onChange: setter\n      }, options));\n    }\n    ;\n    var handleAreaAdd = function handleAreaAdd() {\n      editorState.currentArea.points.forEach(function (point) {\n        changeElement(point.elem, 'opacity', '.5');\n        changeElement(point.elem, 'isselected', 'false');\n        changeElement(point.elem, 'isused', 'true');\n      });\n      setEditorState(function (state) {\n        return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n          areas: [].concat(_toConsumableArray(state.areas), [state.currentArea]),\n          currentArea: new _Area()\n        });\n      });\n    };\n    var handleAreaReset = function handleAreaReset() {\n      editorState.currentArea.points.forEach(function (point) {\n        changeElement(point.elem, 'fill', 'blue');\n        changeElement(point.elem, 'isselected', 'false');\n        changeElement(point.elem, 'opacity', .3);\n      });\n      setEditorState(function (state) {\n        return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n          currentArea: new _Area()\n        });\n      });\n    };\n    var handleUndo = function handleUndo() {\n      var _editorState$areas;\n      (_editorState$areas = editorState.areas) === null || _editorState$areas === void 0 || (_editorState$areas = _editorState$areas[editorState.areas.length - 1]) === null || _editorState$areas === void 0 || (_editorState$areas = _editorState$areas.points) === null || _editorState$areas === void 0 || _editorState$areas.forEach(function (point) {\n        changeElement(point.elem, 'fill', 'blue');\n        changeElement(point.elem, 'isused', 'false');\n        changeElement(point.elem, 'opacity', .3);\n      });\n      setEditorState(function (state) {\n        return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n          areas: state.areas.slice(0, -1)\n        });\n      });\n    };\n    var handleCreateMap = function handleCreateMap() {\n      setAppState(function (state) {\n        return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n          name: 'gameEditor',\n          App: GameEditor,\n          mapAreas: editorState.areas,\n          mapMeta: {\n            resolution: resolution,\n            Nx: Nx,\n            Ny: Ny\n          }\n        });\n      });\n    };\n    return /*#__PURE__*/react.createElement(\"div\", {\n      className: \"overlay  \" + (editorState.down ? 'down ' : '')\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: 'currentArea overboard ',\n      onMouseEnter: function onMouseEnter() {\n        return setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n            showCurrent: true\n          });\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n            showCurrent: false\n          });\n        });\n      }\n    }, /*#__PURE__*/react.createElement(components_Header, null, \"Current Area\"), editorState.showCurrent ? /*#__PURE__*/react.createElement(\"div\", {\n      className: \"currentAreaContent\"\n    }, TextEntry({\n      label: 'Area Name',\n      stateName: 'name',\n      sub: 'currentArea'\n    }), TextEntry({\n      label: 'Support',\n      stateName: 'support',\n      sub: 'currentArea',\n      number: true\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Type\",\n      value: editorState.currentArea.openSeaPoints.length ? 'Open Sea' : editorState.currentArea.coastalPoints.length ? 'Coastal' : 'Land'\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Has City Cite\",\n      value: editorState.currentArea.cityPoint || editorState.currentArea.floodPlainCityPoint ? 'Yes' : 'No'\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Number of Hexagons\",\n      value: editorState.currentArea.points.length\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Has Flood Plain\",\n      value: editorState.currentArea.floodPlainPoints.length || editorState.currentArea.floodPlainCityPoint ? 'Yes' : 'No'\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Has Volcano\",\n      value: editorState.currentArea.volcanoPoint ? 'Yes' : 'No'\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"City is on Flood Plain\",\n      value: editorState.currentArea.floodPlainCityPoint ? 'Yes' : 'No'\n    }), /*#__PURE__*/react.createElement(\"div\", {\n      className: \"currentButtonsRow\"\n    }, /*#__PURE__*/react.createElement(components_Button, {\n      onClick: handleAreaAdd\n    }, \"Add Area\"), /*#__PURE__*/react.createElement(components_Button, {\n      onClick: handleAreaReset\n    }, \"Reset Area\"), /*#__PURE__*/react.createElement(components_Button, {\n      onClick: handleUndo\n    }, \"Undo Area\"))) : null), /*#__PURE__*/react.createElement(\"div\", {\n      className: \"mapAreas overboard\",\n      onMouseEnter: function onMouseEnter() {\n        return setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n            showMapAreas: true\n          });\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        return setEditorState(function (state) {\n          return MapEditor_objectSpread(MapEditor_objectSpread({}, state), {}, {\n            showMapAreas: false\n          });\n        });\n      }\n    }, /*#__PURE__*/react.createElement(components_Header, null, \"Map\"), editorState.showMapAreas ? /*#__PURE__*/react.createElement(\"div\", null, TextEntry({\n      label: 'Map Name',\n      stateName: 'mapName'\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Total Number of Hexagons\",\n      value: Nx * Ny\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Hexagon Resolution\",\n      value: resolution\n    }), /*#__PURE__*/react.createElement(DisplayValue, {\n      label: \"Number Map Areas\",\n      value: editorState.areas.length\n    }), /*#__PURE__*/react.createElement(components_Button, {\n      onClick: handleCreateMap\n    }, \"Submit\")) : null));\n  }\n  ;\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"board\"\n  }, map), Overlay());\n}\n;\n;// CONCATENATED MODULE: ./frontend/Pages/ChooseGame.js\nfunction ChooseGame_typeof(o) { \"@babel/helpers - typeof\"; return ChooseGame_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, ChooseGame_typeof(o); }\nfunction ChooseGame_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction ChooseGame_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ChooseGame_ownKeys(Object(t), !0).forEach(function (r) { ChooseGame_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ChooseGame_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction ChooseGame_defineProperty(obj, key, value) { key = ChooseGame_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction ChooseGame_toPropertyKey(arg) { var key = ChooseGame_toPrimitive(arg, \"string\"); return ChooseGame_typeof(key) === \"symbol\" ? key : String(key); }\nfunction ChooseGame_toPrimitive(input, hint) { if (ChooseGame_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (ChooseGame_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction ChooseGame_slicedToArray(arr, i) { return ChooseGame_arrayWithHoles(arr) || ChooseGame_iterableToArrayLimit(arr, i) || ChooseGame_unsupportedIterableToArray(arr, i) || ChooseGame_nonIterableRest(); }\nfunction ChooseGame_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction ChooseGame_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return ChooseGame_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ChooseGame_arrayLikeToArray(o, minLen); }\nfunction ChooseGame_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ChooseGame_iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction ChooseGame_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\nfunction ChooseGame(props) {\n  var _chooseGameState$user;\n  var appState = props.appState,\n    setAppState = props.setAppState;\n  var _useState = (0,react.useState)({\n      showSettings: false,\n      gameId: ''\n    }),\n    _useState2 = ChooseGame_slicedToArray(_useState, 2),\n    chooseGameState = _useState2[0],\n    setChooseGameState = _useState2[1];\n  var gameRow = function gameRow(game, key) {\n    var players = \"\".concat(game.numberOfPlayers, \"/\").concat(game.maxNumberOfPlayers);\n    var status = game.status === 'pregame' ? 'Lobby' : game.status === 'playing' ? 'Playing' : game.status === 'adjourned' ? 'Paused' : 'Finished';\n    var action = game.status === 'pregame' ? /*#__PURE__*/react.createElement(components_Button, {\n      onClick: function onClick() {\n        return handleChooseGame('selecctgame', game.gameId);\n      }\n    }, \"View\") : game.status === 'playing' ? /*#__PURE__*/react.createElement(components_Button, {\n      onClick: function onClick() {\n        return handleChooseGame('selecctgame', game.gameId);\n      }\n    }, \"Play\") : game.status === 'adjourned' ? /*#__PURE__*/react.createElement(components_Button, {\n      onClick: function onClick() {\n        return handleChooseGame('selecctgame', game.gameId);\n      }\n    }, \"View\") : /*#__PURE__*/react.createElement(components_Button, {\n      onClick: function onClick() {\n        return handleChooseGame('selecctgame', game.gameId);\n      }\n    }, \"Review\");\n    return /*#__PURE__*/react.createElement(\"div\", {\n      key: key,\n      className: \"chooseGameRow\"\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"chooseGameHost\"\n    }, /*#__PURE__*/react.createElement(\"strong\", null, \"Host: \"), game.hostUsername), /*#__PURE__*/react.createElement(\"div\", {\n      className: \"chooseGameStatus\"\n    }, /*#__PURE__*/react.createElement(\"strong\", null, \"Status: \"), status), /*#__PURE__*/react.createElement(\"div\", {\n      className: \"chooseGamePlayers\"\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"chooseGamePlayersPill\"\n    }, players), \"Players\"), action);\n  };\n  var handleChooseGame = function handleChooseGame(type) {\n    var gameId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var setter = function setter(gameId) {\n      return setAppState(function (state) {\n        return ChooseGame_objectSpread(ChooseGame_objectSpread({}, loadState), {}, {\n          userId: state.userId,\n          gameId: gameId\n        });\n      });\n    };\n    var errorSetter = function errorSetter(status) {\n      return setChooseGameState(function (state) {\n        return ChooseGame_objectSpread(ChooseGame_objectSpread({}, state), {}, {\n          error: status\n        });\n      });\n    };\n    var route = '/choose/' + type;\n    var data = {\n      token: appState.token,\n      gameId: gameId\n    };\n    var fallback = {\n      gameId: 0,\n      status: 'playing'\n    };\n    setServerState(setter, errorSetter, route, data, fallback);\n  };\n  var buttonsRow = /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chooseGameButtonsRow\"\n  }, /*#__PURE__*/react.createElement(components_Button, {\n    onClick: function onClick() {\n      return setAppState(function (state) {\n        return ChooseGame_objectSpread(ChooseGame_objectSpread({}, state), {}, {\n          name: 'map',\n          App: MapEditor\n        });\n      });\n    },\n    Icon: map_fill\n  }), /*#__PURE__*/react.createElement(components_Button, {\n    Icon: gear_fill,\n    onClick: function onClick() {\n      return setChooseGameState(function (state) {\n        return ChooseGame_objectSpread(ChooseGame_objectSpread({}, state), {}, {\n          showSettings: !state.showSettings\n        });\n      });\n    }\n  }));\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_Header, {\n    left: '',\n    right: buttonsRow\n  }, chooseGameState.user ? utilities_title(chooseGameState.user.handle) : 'Loading...'), /*#__PURE__*/react.createElement(\"strong\", null, \"Games:\"), ((_chooseGameState$user = chooseGameState.user) === null || _chooseGameState$user === void 0 ? void 0 : _chooseGameState$user.games.map(gameRow)) || 'Loading...', /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chooseAddRow\"\n  }, /*#__PURE__*/react.createElement(components_Button, {\n    onClick: function onClick() {\n      return handleChooseGame('join', chooseGameState.gameId);\n    }\n  }, \"Join Game\"), /*#__PURE__*/react.createElement(\"input\", {\n    placeholder: \"Game Id?\",\n    type: \"number\",\n    onChange: function onChange(event) {\n      return setChooseGameState(function (state) {\n        return ChooseGame_objectSpread(ChooseGame_objectSpread({}, state), {}, {\n          gameId: event.target.value\n        });\n      });\n    },\n    value: chooseGameState.gameId\n  }), \"or\", /*#__PURE__*/react.createElement(components_Button, {\n    onClick: function onClick() {\n      return handleChooseGame('host');\n    }\n  }, \"Host Game\")), chooseGameState.showSettings ? components_Settings(pageState) : null);\n}\n;\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./node_modules/sass-loader/dist/cjs.js!./frontend/styles/base.scss\nvar base = __webpack_require__(730);\n;// CONCATENATED MODULE: ./frontend/styles/base.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar base_options = {};\n\nbase_options.styleTagTransform = (styleTagTransform_default());\nbase_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      base_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nbase_options.domAPI = (styleDomAPI_default());\nbase_options.insertStyleElement = (insertStyleElement_default());\n\nvar base_update = injectStylesIntoStyleTag_default()(base/* default */.Z, base_options);\n\n\n\n\n       /* harmony default export */ const styles_base = (base/* default */.Z && base/* default */.Z.locals ? base/* default */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./frontend/components/Base.js\n\n\nvar Base = function Base(props) {\n  var children = props.children;\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"basePage\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"baseBody\"\n  }, children)));\n};\n/* harmony default export */ const components_Base = (Base);\n;// CONCATENATED MODULE: ./frontend/App.js\nfunction App_typeof(o) { \"@babel/helpers - typeof\"; return App_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, App_typeof(o); }\nfunction App_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction App_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? App_ownKeys(Object(t), !0).forEach(function (r) { App_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : App_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction App_defineProperty(obj, key, value) { key = App_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction App_toPropertyKey(arg) { var key = App_toPrimitive(arg, \"string\"); return App_typeof(key) === \"symbol\" ? key : String(key); }\nfunction App_toPrimitive(input, hint) { if (App_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (App_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction App_slicedToArray(arr, i) { return App_arrayWithHoles(arr) || App_iterableToArrayLimit(arr, i) || App_unsupportedIterableToArray(arr, i) || App_nonIterableRest(); }\nfunction App_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction App_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return App_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return App_arrayLikeToArray(o, minLen); }\nfunction App_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction App_iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction App_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar App = function App() {\n  var _useAppState = useAppState(),\n    _useAppState2 = App_slicedToArray(_useAppState, 2),\n    appState = _useAppState2[0],\n    setAppState = _useAppState2[1];\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_Base, null, /*#__PURE__*/react.createElement(appState.App, {\n    appState: appState,\n    setAppState: setAppState\n  })));\n};\nvar loadState = {\n  name: 'loading',\n  error: 0,\n  App: function App(props) {\n    return /*#__PURE__*/react.createElement(react.Fragment, null, \"Loading...\");\n  },\n  userId: null,\n  gameId: null\n};\n/* harmony default export */ const frontend_App = (App);\nvar useAppState = function useAppState() {\n  var _useState = (0,react.useState)(App_objectSpread(App_objectSpread({}, loadState), {}, {\n      userId: localStorage.getItem('userId')\n    })),\n    _useState2 = App_slicedToArray(_useState, 2),\n    appState = _useState2[0],\n    setAppState = _useState2[1];\n  (0,react.useEffect)(function () {\n    // update local storage 'token' if token changes\n    if (appState.userId) {\n      localStorage.setItem('userId', appState.userId);\n    }\n    ;\n  }, [appState.userId]);\n  (0,react.useEffect)(function () {\n    console.log(appState.userId, appState.name);\n    // move to auth if there is no userId\n    if (appState.name !== 'auth' && !appState.userId) {\n      setAppState(function (state) {\n        return App_objectSpread(App_objectSpread({}, state), {}, {\n          name: 'auth',\n          App: Auth\n        });\n      });\n    }\n    ;\n    // go to choose game if there is a userId\n    if (appState.name === 'loading' && appState.userId && !appState.gameId) {\n      setAppState(function (state) {\n        return App_objectSpread(App_objectSpread({}, state), {}, {\n          name: 'choose',\n          App: ChooseGame\n        });\n      });\n    }\n    ;\n  }, [appState.name]);\n  (0,react.useEffect)(function () {\n    // more to load state from auth if there is a userId \n    if (appState.name === 'auth' && appState.userId) {\n      setAppState(function (state) {\n        return App_objectSpread(App_objectSpread(App_objectSpread({}, state), loadState), {}, {\n          userId: state.userId\n        });\n      });\n    }\n    ;\n  }, [appState.userId]);\n  (0,react.useEffect)(function () {\n    if (appState.gameId) {\n      var userId = appState.userId;\n      var gameId = appState.gameId;\n      setInterval(function () {\n        setAppState(function (state) {\n          return App_objectSpread(App_objectSpread({}, state), {}, {\n            name: 'play',\n            App: PlayGame\n          });\n        });\n      }, 1000);\n    }\n  }, [appState]);\n  return [appState, setAppState];\n};\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/enums.js\nvar enums_top = 'top';\nvar bottom = 'bottom';\nvar right = 'right';\nvar left = 'left';\nvar auto = 'auto';\nvar basePlacements = [enums_top, bottom, right, left];\nvar start = 'start';\nvar end = 'end';\nvar clippingParents = 'clippingParents';\nvar viewport = 'viewport';\nvar popper = 'popper';\nvar reference = 'reference';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nvar enums_placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = 'beforeRead';\nvar read = 'read';\nvar afterRead = 'afterRead'; // pure-logic modifiers\n\nvar beforeMain = 'beforeMain';\nvar enums_main = 'main';\nvar afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = 'beforeWrite';\nvar write = 'write';\nvar afterWrite = 'afterWrite';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, enums_main, afterMain, beforeWrite, write, afterWrite];\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js\nfunction getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js\n\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js\n\n // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_applyStyles = ({\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js\n\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/math.js\nvar math_max = Math.max;\nvar math_min = Math.min;\nvar round = Math.round;\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/userAgent.js\nfunction getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js\n\nfunction isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js\n\n\n\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js\n // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nfunction getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/contains.js\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js\n\nfunction getComputedStyle_getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js\n\n\n\nfunction getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\n\n\n\n\n\n\n\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle_getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle_getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle_getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle_getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle_getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/within.js\n\nfunction within(min, value, max) {\n  return math_max(min, math_min(value, max));\n}\nfunction withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/arrow.js\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? enums_top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction arrow_effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_arrow = ({\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: arrow_effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getVariation.js\nfunction getVariation(placement) {\n  return placement.split('-')[1];\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = enums_top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle_getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === enums_top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === enums_top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, getWindow(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_computeStyles = ({\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js\n // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction eventListeners_effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const eventListeners = ({\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: eventListeners_effect,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js\nvar hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js\nvar getOppositeVariationPlacement_hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return getOppositeVariationPlacement_hash[matched];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js\n\nfunction getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js\n\n\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js\n\n\n\n\nfunction getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js\n\n\n\n\n // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = math_max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = math_max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle_getComputedStyle(body || html).direction === 'rtl') {\n    x += math_max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle_getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js\n\n\n\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js\n\n\n\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nfunction listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js\nfunction rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle_getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = math_max(rect.top, accRect.top);\n    accRect.right = math_min(rect.right, accRect.right);\n    accRect.bottom = math_min(rect.bottom, accRect.bottom);\n    accRect.left = math_max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeOffsets.js\n\n\n\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case enums_top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/detectOverflow.js\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [enums_top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js\n\n\n\n\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? enums_placements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/flip.js\n\n\n\n\n\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [enums_top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : enums_top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_flip = ({\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/hide.js\n\n\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [enums_top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_hide = ({\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/offset.js\n\n // eslint-disable-next-line import/no-unused-modules\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, enums_top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = enums_placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_offset = ({\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js\n\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_popperOffsets = ({\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/getAltAxis.js\nfunction getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? enums_top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? math_min(min, tetherMin) : min, offset, tether ? math_max(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? enums_top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [enums_top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\n/* harmony default export */ const modifiers_preventOverflow = ({\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n});\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/modifiers/index.js\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js\n\n\n\n\nfunction getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js\n\n\n\n\n\n\n\n\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/orderModifiers.js\n // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/debounce.js\nfunction debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/utils/mergeByName.js\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/createPopper.js\n\n\n\n\n\n\n\n\n\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        });\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref) {\n        var name = _ref.name,\n            _ref$options = _ref.options,\n            options = _ref$options === void 0 ? {} : _ref$options,\n            effect = _ref.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nvar createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper.js\n\n\n\n\n\n\n\n\n\n\nvar defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];\nvar popper_createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/popper-lite.js\n\n\n\n\n\nvar popper_lite_defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles];\nvar popper_lite_createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: popper_lite_defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/@popperjs/core/lib/index.js\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n // eslint-disable-next-line import/no-unused-modules\n\n\n;// CONCATENATED MODULE: ./node_modules/bootstrap/dist/js/bootstrap.esm.js\n/*!\n  * Bootstrap v5.3.2 (https://getbootstrap.com/)\n  * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map();\nconst Data = {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map());\n    }\n    const instanceMap = elementMap.get(element);\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n      return;\n    }\n    instanceMap.set(key, instance);\n  },\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null;\n    }\n    return null;\n  },\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return;\n    }\n    const instanceMap = elementMap.get(element);\n    instanceMap.delete(key);\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element);\n    }\n  }\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000;\nconst MILLISECONDS_MULTIPLIER = 1000;\nconst TRANSITION_END = 'transitionend';\n\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */\nconst parseSelector = selector => {\n  if (selector && window.CSS && window.CSS.escape) {\n    // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`);\n  }\n  return selector;\n};\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`;\n  }\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase();\n};\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID);\n  } while (document.getElementById(prefix));\n  return prefix;\n};\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0;\n  }\n\n  // Get transition-duration of the element\n  let {\n    transitionDuration,\n    transitionDelay\n  } = window.getComputedStyle(element);\n  const floatTransitionDuration = Number.parseFloat(transitionDuration);\n  const floatTransitionDelay = Number.parseFloat(transitionDelay);\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0;\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0];\n  transitionDelay = transitionDelay.split(',')[0];\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n};\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END));\n};\nconst bootstrap_esm_isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0];\n  }\n  return typeof object.nodeType !== 'undefined';\n};\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (bootstrap_esm_isElement(object)) {\n    return object.jquery ? object[0] : object;\n  }\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(parseSelector(object));\n  }\n  return null;\n};\nconst isVisible = element => {\n  if (!bootstrap_esm_isElement(element) || element.getClientRects().length === 0) {\n    return false;\n  }\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible';\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])');\n  if (!closedDetails) {\n    return elementIsVisible;\n  }\n  if (closedDetails !== element) {\n    const summary = element.closest('summary');\n    if (summary && summary.parentNode !== closedDetails) {\n      return false;\n    }\n    if (summary === null) {\n      return false;\n    }\n  }\n  return elementIsVisible;\n};\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true;\n  }\n  if (element.classList.contains('disabled')) {\n    return true;\n  }\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled;\n  }\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n};\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null;\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode();\n    return root instanceof ShadowRoot ? root : null;\n  }\n  if (element instanceof ShadowRoot) {\n    return element;\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null;\n  }\n  return findShadowRoot(element.parentNode);\n};\nconst bootstrap_esm_noop = () => {};\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight; // eslint-disable-line no-unused-expressions\n};\n\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return window.jQuery;\n  }\n  return null;\n};\nconst DOMContentLoadedCallbacks = [];\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback();\n        }\n      });\n    }\n    DOMContentLoadedCallbacks.push(callback);\n  } else {\n    callback();\n  }\n};\nconst isRTL = () => document.documentElement.dir === 'rtl';\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery();\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME;\n      const JQUERY_NO_CONFLICT = $.fn[name];\n      $.fn[name] = plugin.jQueryInterface;\n      $.fn[name].Constructor = plugin;\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT;\n        return plugin.jQueryInterface;\n      };\n    }\n  });\n};\nconst execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n  return typeof possibleCallback === 'function' ? possibleCallback(...args) : defaultValue;\n};\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback);\n    return;\n  }\n  const durationPadding = 5;\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n  let called = false;\n  const handler = ({\n    target\n  }) => {\n    if (target !== transitionElement) {\n      return;\n    }\n    called = true;\n    transitionElement.removeEventListener(TRANSITION_END, handler);\n    execute(callback);\n  };\n  transitionElement.addEventListener(TRANSITION_END, handler);\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement);\n    }\n  }, emulatedDuration);\n};\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length;\n  let index = list.indexOf(activeElement);\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];\n  }\n  index += shouldGetNext ? 1 : -1;\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength;\n  }\n  return list[Math.max(0, Math.min(index, listLength - 1))];\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\nconst stripNameRegex = /\\..*/;\nconst stripUidRegex = /::\\d+$/;\nconst eventRegistry = {}; // Events storage\nlet uidEvent = 1;\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n};\nconst nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n}\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element);\n  element.uidEvent = uid;\n  eventRegistry[uid] = eventRegistry[uid] || {};\n  return eventRegistry[uid];\n}\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, {\n      delegateTarget: element\n    });\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn);\n    }\n    return fn.apply(element, [event]);\n  };\n}\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector);\n    for (let {\n      target\n    } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue;\n        }\n        hydrateObj(event, {\n          delegateTarget: target\n        });\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn);\n        }\n        return fn.apply(target, [event]);\n      }\n    }\n  };\n}\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);\n}\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string';\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n  let typeEvent = getTypeEvent(originalTypeEvent);\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent;\n  }\n  return [isDelegated, callable, typeEvent];\n}\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return;\n  }\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n          return fn.call(this, event);\n        }\n      };\n    };\n    callable = wrapFunction(callable);\n  }\n  const events = getElementEvents(element);\n  const handlers = events[typeEvent] || (events[typeEvent] = {});\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff;\n    return;\n  }\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n  const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n  fn.delegationSelector = isDelegated ? handler : null;\n  fn.callable = callable;\n  fn.oneOff = oneOff;\n  fn.uidEvent = uid;\n  handlers[uid] = fn;\n  element.addEventListener(typeEvent, fn, isDelegated);\n}\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector);\n  if (!fn) {\n    return;\n  }\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n  delete events[typeEvent][fn.uidEvent];\n}\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {};\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n    }\n  }\n}\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --\x3e 'click')\n  event = event.replace(stripNameRegex, '');\n  return customEvents[event] || event;\n}\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false);\n  },\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true);\n  },\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n    const inNamespace = typeEvent !== originalTypeEvent;\n    const events = getElementEvents(element);\n    const storeElementEvent = events[typeEvent] || {};\n    const isNamespace = originalTypeEvent.startsWith('.');\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return;\n      }\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n      return;\n    }\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n      }\n    }\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '');\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  },\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null;\n    }\n    const $ = getjQuery();\n    const typeEvent = getTypeEvent(event);\n    const inNamespace = event !== typeEvent;\n    let jQueryEvent = null;\n    let bubbles = true;\n    let nativeDispatch = true;\n    let defaultPrevented = false;\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args);\n      $(element).trigger(jQueryEvent);\n      bubbles = !jQueryEvent.isPropagationStopped();\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n      defaultPrevented = jQueryEvent.isDefaultPrevented();\n    }\n    const evt = hydrateObj(new Event(event, {\n      bubbles,\n      cancelable: true\n    }), args);\n    if (defaultPrevented) {\n      evt.preventDefault();\n    }\n    if (nativeDispatch) {\n      element.dispatchEvent(evt);\n    }\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault();\n    }\n    return evt;\n  }\n};\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value;\n    } catch (_unused) {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value;\n        }\n      });\n    }\n  }\n  return obj;\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true;\n  }\n  if (value === 'false') {\n    return false;\n  }\n  if (value === Number(value).toString()) {\n    return Number(value);\n  }\n  if (value === '' || value === 'null') {\n    return null;\n  }\n  if (typeof value !== 'string') {\n    return value;\n  }\n  try {\n    return JSON.parse(decodeURIComponent(value));\n  } catch (_unused) {\n    return value;\n  }\n}\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n}\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n  },\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n  },\n  getDataAttributes(element) {\n    if (!element) {\n      return {};\n    }\n    const attributes = {};\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'));\n    for (const key of bsKeys) {\n      let pureKey = key.replace(/^bs/, '');\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n      attributes[pureKey] = normalizeData(element.dataset[key]);\n    }\n    return attributes;\n  },\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n  }\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {};\n  }\n  static get DefaultType() {\n    return {};\n  }\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!');\n  }\n  _getConfig(config) {\n    config = this._mergeConfigObj(config);\n    config = this._configAfterMerge(config);\n    this._typeCheckConfig(config);\n    return config;\n  }\n  _configAfterMerge(config) {\n    return config;\n  }\n  _mergeConfigObj(config, element) {\n    const jsonConfig = bootstrap_esm_isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(bootstrap_esm_isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    };\n  }\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property];\n      const valueType = bootstrap_esm_isElement(value) ? 'element' : toType(value);\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n      }\n    }\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst bootstrap_esm_VERSION = '5.3.2';\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super();\n    element = getElement(element);\n    if (!element) {\n      return;\n    }\n    this._element = element;\n    this._config = this._getConfig(config);\n    Data.set(this._element, this.constructor.DATA_KEY, this);\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY);\n    EventHandler.off(this._element, this.constructor.EVENT_KEY);\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null;\n    }\n  }\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated);\n  }\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element);\n    config = this._configAfterMerge(config);\n    this._typeCheckConfig(config);\n    return config;\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY);\n  }\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n  }\n  static get VERSION() {\n    return bootstrap_esm_VERSION;\n  }\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`;\n  }\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`;\n  }\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target');\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href');\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) {\n      return null;\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`;\n    }\n    selector = hrefAttribute && hrefAttribute !== '#' ? parseSelector(hrefAttribute.trim()) : null;\n  }\n  return selector;\n};\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n  },\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector);\n  },\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector));\n  },\n  parents(element, selector) {\n    const parents = [];\n    let ancestor = element.parentNode.closest(selector);\n    while (ancestor) {\n      parents.push(ancestor);\n      ancestor = ancestor.parentNode.closest(selector);\n    }\n    return parents;\n  },\n  prev(element, selector) {\n    let previous = element.previousElementSibling;\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous];\n      }\n      previous = previous.previousElementSibling;\n    }\n    return [];\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling;\n    while (next) {\n      if (next.matches(selector)) {\n        return [next];\n      }\n      next = next.nextElementSibling;\n    }\n    return [];\n  },\n  focusableChildren(element) {\n    const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',');\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el));\n  },\n  getSelectorFromElement(element) {\n    const selector = getSelector(element);\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null;\n    }\n    return null;\n  },\n  getElementFromSelector(element) {\n    const selector = getSelector(element);\n    return selector ? SelectorEngine.findOne(selector) : null;\n  },\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element);\n    return selector ? SelectorEngine.find(selector) : [];\n  }\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst enableDismissTrigger = (component, method = 'hide') => {\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`;\n  const name = component.NAME;\n  EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n    if (isDisabled(this)) {\n      return;\n    }\n    const target = SelectorEngine.getElementFromSelector(this) || this.closest(`.${name}`);\n    const instance = component.getOrCreateInstance(target);\n\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n    instance[method]();\n  });\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$f = 'alert';\nconst DATA_KEY$a = 'bs.alert';\nconst EVENT_KEY$b = `.${DATA_KEY$a}`;\nconst EVENT_CLOSE = `close${EVENT_KEY$b}`;\nconst EVENT_CLOSED = `closed${EVENT_KEY$b}`;\nconst CLASS_NAME_FADE$5 = 'fade';\nconst CLASS_NAME_SHOW$8 = 'show';\n\n/**\n * Class definition\n */\n\nclass Alert extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME$f;\n  }\n\n  // Public\n  close() {\n    const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE);\n    if (closeEvent.defaultPrevented) {\n      return;\n    }\n    this._element.classList.remove(CLASS_NAME_SHOW$8);\n    const isAnimated = this._element.classList.contains(CLASS_NAME_FADE$5);\n    this._queueCallback(() => this._destroyElement(), this._element, isAnimated);\n  }\n\n  // Private\n  _destroyElement() {\n    this._element.remove();\n    EventHandler.trigger(this._element, EVENT_CLOSED);\n    this.dispose();\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Alert.getOrCreateInstance(this);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config](this);\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Alert, 'close');\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Alert);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$e = 'button';\nconst DATA_KEY$9 = 'bs.button';\nconst EVENT_KEY$a = `.${DATA_KEY$9}`;\nconst DATA_API_KEY$6 = '.data-api';\nconst CLASS_NAME_ACTIVE$3 = 'active';\nconst SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle=\"button\"]';\nconst EVENT_CLICK_DATA_API$6 = `click${EVENT_KEY$a}${DATA_API_KEY$6}`;\n\n/**\n * Class definition\n */\n\nclass bootstrap_esm_Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME$e;\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE$3));\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = bootstrap_esm_Button.getOrCreateInstance(this);\n      if (config === 'toggle') {\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$5, event => {\n  event.preventDefault();\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE$5);\n  const data = bootstrap_esm_Button.getOrCreateInstance(button);\n  data.toggle();\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(bootstrap_esm_Button);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$d = 'swipe';\nconst EVENT_KEY$9 = '.bs.swipe';\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY$9}`;\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY$9}`;\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY$9}`;\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY$9}`;\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY$9}`;\nconst POINTER_TYPE_TOUCH = 'touch';\nconst POINTER_TYPE_PEN = 'pen';\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event';\nconst SWIPE_THRESHOLD = 40;\nconst Default$c = {\n  endCallback: null,\n  leftCallback: null,\n  rightCallback: null\n};\nconst DefaultType$c = {\n  endCallback: '(function|null)',\n  leftCallback: '(function|null)',\n  rightCallback: '(function|null)'\n};\n\n/**\n * Class definition\n */\n\nclass Swipe extends Config {\n  constructor(element, config) {\n    super();\n    this._element = element;\n    if (!element || !Swipe.isSupported()) {\n      return;\n    }\n    this._config = this._getConfig(config);\n    this._deltaX = 0;\n    this._supportPointerEvents = Boolean(window.PointerEvent);\n    this._initEvents();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$c;\n  }\n  static get DefaultType() {\n    return DefaultType$c;\n  }\n  static get NAME() {\n    return NAME$d;\n  }\n\n  // Public\n  dispose() {\n    EventHandler.off(this._element, EVENT_KEY$9);\n  }\n\n  // Private\n  _start(event) {\n    if (!this._supportPointerEvents) {\n      this._deltaX = event.touches[0].clientX;\n      return;\n    }\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX;\n    }\n  }\n  _end(event) {\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX - this._deltaX;\n    }\n    this._handleSwipe();\n    execute(this._config.endCallback);\n  }\n  _move(event) {\n    this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;\n  }\n  _handleSwipe() {\n    const absDeltaX = Math.abs(this._deltaX);\n    if (absDeltaX <= SWIPE_THRESHOLD) {\n      return;\n    }\n    const direction = absDeltaX / this._deltaX;\n    this._deltaX = 0;\n    if (!direction) {\n      return;\n    }\n    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);\n  }\n  _initEvents() {\n    if (this._supportPointerEvents) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event));\n      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event));\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT);\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event));\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event));\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event));\n    }\n  }\n  _eventIsPointerPenTouch(event) {\n    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);\n  }\n\n  // Static\n  static isSupported() {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$c = 'carousel';\nconst DATA_KEY$8 = 'bs.carousel';\nconst EVENT_KEY$8 = `.${DATA_KEY$8}`;\nconst DATA_API_KEY$5 = '.data-api';\nconst ARROW_LEFT_KEY$1 = 'ArrowLeft';\nconst ARROW_RIGHT_KEY$1 = 'ArrowRight';\nconst TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\nconst ORDER_NEXT = 'next';\nconst ORDER_PREV = 'prev';\nconst DIRECTION_LEFT = 'left';\nconst DIRECTION_RIGHT = 'right';\nconst EVENT_SLIDE = `slide${EVENT_KEY$8}`;\nconst EVENT_SLID = `slid${EVENT_KEY$8}`;\nconst EVENT_KEYDOWN$1 = `keydown${EVENT_KEY$8}`;\nconst EVENT_MOUSEENTER$1 = `mouseenter${EVENT_KEY$8}`;\nconst EVENT_MOUSELEAVE$1 = `mouseleave${EVENT_KEY$8}`;\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY$8}`;\nconst EVENT_LOAD_DATA_API$3 = `load${EVENT_KEY$8}${DATA_API_KEY$5}`;\nconst EVENT_CLICK_DATA_API$5 = `click${EVENT_KEY$8}${DATA_API_KEY$5}`;\nconst CLASS_NAME_CAROUSEL = 'carousel';\nconst CLASS_NAME_ACTIVE$2 = 'active';\nconst CLASS_NAME_SLIDE = 'slide';\nconst CLASS_NAME_END = 'carousel-item-end';\nconst CLASS_NAME_START = 'carousel-item-start';\nconst CLASS_NAME_NEXT = 'carousel-item-next';\nconst CLASS_NAME_PREV = 'carousel-item-prev';\nconst SELECTOR_ACTIVE = '.active';\nconst SELECTOR_ITEM = '.carousel-item';\nconst SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM;\nconst SELECTOR_ITEM_IMG = '.carousel-item img';\nconst SELECTOR_INDICATORS = '.carousel-indicators';\nconst SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';\nconst SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]';\nconst KEY_TO_DIRECTION = {\n  [ARROW_LEFT_KEY$1]: DIRECTION_RIGHT,\n  [ARROW_RIGHT_KEY$1]: DIRECTION_LEFT\n};\nconst Default$b = {\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  ride: false,\n  touch: true,\n  wrap: true\n};\nconst DefaultType$b = {\n  interval: '(number|boolean)',\n  // TODO:v6 remove boolean support\n  keyboard: 'boolean',\n  pause: '(string|boolean)',\n  ride: '(boolean|string)',\n  touch: 'boolean',\n  wrap: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass Carousel extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._interval = null;\n    this._activeElement = null;\n    this._isSliding = false;\n    this.touchTimeout = null;\n    this._swipeHelper = null;\n    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element);\n    this._addEventListeners();\n    if (this._config.ride === CLASS_NAME_CAROUSEL) {\n      this.cycle();\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default$b;\n  }\n  static get DefaultType() {\n    return DefaultType$b;\n  }\n  static get NAME() {\n    return NAME$c;\n  }\n\n  // Public\n  next() {\n    this._slide(ORDER_NEXT);\n  }\n  nextWhenVisible() {\n    // FIXME TODO use `document.visibilityState`\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next();\n    }\n  }\n  prev() {\n    this._slide(ORDER_PREV);\n  }\n  pause() {\n    if (this._isSliding) {\n      triggerTransitionEnd(this._element);\n    }\n    this._clearInterval();\n  }\n  cycle() {\n    this._clearInterval();\n    this._updateInterval();\n    this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval);\n  }\n  _maybeEnableCycle() {\n    if (!this._config.ride) {\n      return;\n    }\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.cycle());\n      return;\n    }\n    this.cycle();\n  }\n  to(index) {\n    const items = this._getItems();\n    if (index > items.length - 1 || index < 0) {\n      return;\n    }\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.to(index));\n      return;\n    }\n    const activeIndex = this._getItemIndex(this._getActive());\n    if (activeIndex === index) {\n      return;\n    }\n    const order = index > activeIndex ? ORDER_NEXT : ORDER_PREV;\n    this._slide(order, items[index]);\n  }\n  dispose() {\n    if (this._swipeHelper) {\n      this._swipeHelper.dispose();\n    }\n    super.dispose();\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    config.defaultInterval = config.interval;\n    return config;\n  }\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, EVENT_KEYDOWN$1, event => this._keydown(event));\n    }\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, EVENT_MOUSEENTER$1, () => this.pause());\n      EventHandler.on(this._element, EVENT_MOUSELEAVE$1, () => this._maybeEnableCycle());\n    }\n    if (this._config.touch && Swipe.isSupported()) {\n      this._addTouchEventListeners();\n    }\n  }\n  _addTouchEventListeners() {\n    for (const img of SelectorEngine.find(SELECTOR_ITEM_IMG, this._element)) {\n      EventHandler.on(img, EVENT_DRAG_START, event => event.preventDefault());\n    }\n    const endCallBack = () => {\n      if (this._config.pause !== 'hover') {\n        return;\n      }\n\n      // If it's a touch-enabled device, mouseenter/leave are fired as\n      // part of the mouse compatibility events on first tap - the carousel\n      // would stop cycling until user tapped out of it;\n      // here, we listen for touchend, explicitly pause the carousel\n      // (as if it's the second time we tap on it, mouseenter compat event\n      // is NOT fired) and after a timeout (to allow for mouse compatibility\n      // events to fire) we explicitly restart cycling\n\n      this.pause();\n      if (this.touchTimeout) {\n        clearTimeout(this.touchTimeout);\n      }\n      this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n    };\n    const swipeConfig = {\n      leftCallback: () => this._slide(this._directionToOrder(DIRECTION_LEFT)),\n      rightCallback: () => this._slide(this._directionToOrder(DIRECTION_RIGHT)),\n      endCallback: endCallBack\n    };\n    this._swipeHelper = new Swipe(this._element, swipeConfig);\n  }\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return;\n    }\n    const direction = KEY_TO_DIRECTION[event.key];\n    if (direction) {\n      event.preventDefault();\n      this._slide(this._directionToOrder(direction));\n    }\n  }\n  _getItemIndex(element) {\n    return this._getItems().indexOf(element);\n  }\n  _setActiveIndicatorElement(index) {\n    if (!this._indicatorsElement) {\n      return;\n    }\n    const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement);\n    activeIndicator.classList.remove(CLASS_NAME_ACTIVE$2);\n    activeIndicator.removeAttribute('aria-current');\n    const newActiveIndicator = SelectorEngine.findOne(`[data-bs-slide-to=\"${index}\"]`, this._indicatorsElement);\n    if (newActiveIndicator) {\n      newActiveIndicator.classList.add(CLASS_NAME_ACTIVE$2);\n      newActiveIndicator.setAttribute('aria-current', 'true');\n    }\n  }\n  _updateInterval() {\n    const element = this._activeElement || this._getActive();\n    if (!element) {\n      return;\n    }\n    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10);\n    this._config.interval = elementInterval || this._config.defaultInterval;\n  }\n  _slide(order, element = null) {\n    if (this._isSliding) {\n      return;\n    }\n    const activeElement = this._getActive();\n    const isNext = order === ORDER_NEXT;\n    const nextElement = element || getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap);\n    if (nextElement === activeElement) {\n      return;\n    }\n    const nextElementIndex = this._getItemIndex(nextElement);\n    const triggerEvent = eventName => {\n      return EventHandler.trigger(this._element, eventName, {\n        relatedTarget: nextElement,\n        direction: this._orderToDirection(order),\n        from: this._getItemIndex(activeElement),\n        to: nextElementIndex\n      });\n    };\n    const slideEvent = triggerEvent(EVENT_SLIDE);\n    if (slideEvent.defaultPrevented) {\n      return;\n    }\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      // TODO: change tests that use empty divs to avoid this check\n      return;\n    }\n    const isCycling = Boolean(this._interval);\n    this.pause();\n    this._isSliding = true;\n    this._setActiveIndicatorElement(nextElementIndex);\n    this._activeElement = nextElement;\n    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END;\n    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV;\n    nextElement.classList.add(orderClassName);\n    reflow(nextElement);\n    activeElement.classList.add(directionalClassName);\n    nextElement.classList.add(directionalClassName);\n    const completeCallBack = () => {\n      nextElement.classList.remove(directionalClassName, orderClassName);\n      nextElement.classList.add(CLASS_NAME_ACTIVE$2);\n      activeElement.classList.remove(CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);\n      this._isSliding = false;\n      triggerEvent(EVENT_SLID);\n    };\n    this._queueCallback(completeCallBack, activeElement, this._isAnimated());\n    if (isCycling) {\n      this.cycle();\n    }\n  }\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_SLIDE);\n  }\n  _getActive() {\n    return SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);\n  }\n  _getItems() {\n    return SelectorEngine.find(SELECTOR_ITEM, this._element);\n  }\n  _clearInterval() {\n    if (this._interval) {\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n  }\n  _directionToOrder(direction) {\n    if (isRTL()) {\n      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT;\n    }\n    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV;\n  }\n  _orderToDirection(order) {\n    if (isRTL()) {\n      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT;\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Carousel.getOrCreateInstance(this, config);\n      if (typeof config === 'number') {\n        data.to(config);\n        return;\n      }\n      if (typeof config === 'string') {\n        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$5, SELECTOR_DATA_SLIDE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this);\n  if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n    return;\n  }\n  event.preventDefault();\n  const carousel = Carousel.getOrCreateInstance(target);\n  const slideIndex = this.getAttribute('data-bs-slide-to');\n  if (slideIndex) {\n    carousel.to(slideIndex);\n    carousel._maybeEnableCycle();\n    return;\n  }\n  if (Manipulator.getDataAttribute(this, 'slide') === 'next') {\n    carousel.next();\n    carousel._maybeEnableCycle();\n    return;\n  }\n  carousel.prev();\n  carousel._maybeEnableCycle();\n});\nEventHandler.on(window, EVENT_LOAD_DATA_API$3, () => {\n  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE);\n  for (const carousel of carousels) {\n    Carousel.getOrCreateInstance(carousel);\n  }\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Carousel);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$b = 'collapse';\nconst DATA_KEY$7 = 'bs.collapse';\nconst EVENT_KEY$7 = `.${DATA_KEY$7}`;\nconst DATA_API_KEY$4 = '.data-api';\nconst EVENT_SHOW$6 = `show${EVENT_KEY$7}`;\nconst EVENT_SHOWN$6 = `shown${EVENT_KEY$7}`;\nconst EVENT_HIDE$6 = `hide${EVENT_KEY$7}`;\nconst EVENT_HIDDEN$6 = `hidden${EVENT_KEY$7}`;\nconst EVENT_CLICK_DATA_API$4 = `click${EVENT_KEY$7}${DATA_API_KEY$4}`;\nconst CLASS_NAME_SHOW$7 = 'show';\nconst CLASS_NAME_COLLAPSE = 'collapse';\nconst CLASS_NAME_COLLAPSING = 'collapsing';\nconst CLASS_NAME_COLLAPSED = 'collapsed';\nconst CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;\nconst CLASS_NAME_HORIZONTAL = 'collapse-horizontal';\nconst WIDTH = 'width';\nconst HEIGHT = 'height';\nconst SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';\nconst SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle=\"collapse\"]';\nconst Default$a = {\n  parent: null,\n  toggle: true\n};\nconst DefaultType$a = {\n  parent: '(null|element)',\n  toggle: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._isTransitioning = false;\n    this._triggerArray = [];\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);\n    for (const elem of toggleList) {\n      const selector = SelectorEngine.getSelectorFromElement(elem);\n      const filterElement = SelectorEngine.find(selector).filter(foundElement => foundElement === this._element);\n      if (selector !== null && filterElement.length) {\n        this._triggerArray.push(elem);\n      }\n    }\n    this._initializeChildren();\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());\n    }\n    if (this._config.toggle) {\n      this.toggle();\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default$a;\n  }\n  static get DefaultType() {\n    return DefaultType$a;\n  }\n  static get NAME() {\n    return NAME$b;\n  }\n\n  // Public\n  toggle() {\n    if (this._isShown()) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  show() {\n    if (this._isTransitioning || this._isShown()) {\n      return;\n    }\n    let activeChildren = [];\n\n    // find active children\n    if (this._config.parent) {\n      activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES).filter(element => element !== this._element).map(element => Collapse.getOrCreateInstance(element, {\n        toggle: false\n      }));\n    }\n    if (activeChildren.length && activeChildren[0]._isTransitioning) {\n      return;\n    }\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW$6);\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n    for (const activeInstance of activeChildren) {\n      activeInstance.hide();\n    }\n    const dimension = this._getDimension();\n    this._element.classList.remove(CLASS_NAME_COLLAPSE);\n    this._element.classList.add(CLASS_NAME_COLLAPSING);\n    this._element.style[dimension] = 0;\n    this._addAriaAndCollapsedClass(this._triggerArray, true);\n    this._isTransitioning = true;\n    const complete = () => {\n      this._isTransitioning = false;\n      this._element.classList.remove(CLASS_NAME_COLLAPSING);\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);\n      this._element.style[dimension] = '';\n      EventHandler.trigger(this._element, EVENT_SHOWN$6);\n    };\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n    const scrollSize = `scroll${capitalizedDimension}`;\n    this._queueCallback(complete, this._element, true);\n    this._element.style[dimension] = `${this._element[scrollSize]}px`;\n  }\n  hide() {\n    if (this._isTransitioning || !this._isShown()) {\n      return;\n    }\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE$6);\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n    const dimension = this._getDimension();\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n    reflow(this._element);\n    this._element.classList.add(CLASS_NAME_COLLAPSING);\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);\n    for (const trigger of this._triggerArray) {\n      const element = SelectorEngine.getElementFromSelector(trigger);\n      if (element && !this._isShown(element)) {\n        this._addAriaAndCollapsedClass([trigger], false);\n      }\n    }\n    this._isTransitioning = true;\n    const complete = () => {\n      this._isTransitioning = false;\n      this._element.classList.remove(CLASS_NAME_COLLAPSING);\n      this._element.classList.add(CLASS_NAME_COLLAPSE);\n      EventHandler.trigger(this._element, EVENT_HIDDEN$6);\n    };\n    this._element.style[dimension] = '';\n    this._queueCallback(complete, this._element, true);\n  }\n  _isShown(element = this._element) {\n    return element.classList.contains(CLASS_NAME_SHOW$7);\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    config.toggle = Boolean(config.toggle); // Coerce string values\n    config.parent = getElement(config.parent);\n    return config;\n  }\n  _getDimension() {\n    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;\n  }\n  _initializeChildren() {\n    if (!this._config.parent) {\n      return;\n    }\n    const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE$4);\n    for (const element of children) {\n      const selected = SelectorEngine.getElementFromSelector(element);\n      if (selected) {\n        this._addAriaAndCollapsedClass([element], this._isShown(selected));\n      }\n    }\n  }\n  _getFirstLevelChildren(selector) {\n    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);\n    // remove children if greater depth\n    return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element));\n  }\n  _addAriaAndCollapsedClass(triggerArray, isOpen) {\n    if (!triggerArray.length) {\n      return;\n    }\n    for (const element of triggerArray) {\n      element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen);\n      element.setAttribute('aria-expanded', isOpen);\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    const _config = {};\n    if (typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false;\n    }\n    return this.each(function () {\n      const data = Collapse.getOrCreateInstance(this, _config);\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$4, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {\n    event.preventDefault();\n  }\n  for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {\n    Collapse.getOrCreateInstance(element, {\n      toggle: false\n    }).toggle();\n  }\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Collapse);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$a = 'dropdown';\nconst DATA_KEY$6 = 'bs.dropdown';\nconst EVENT_KEY$6 = `.${DATA_KEY$6}`;\nconst DATA_API_KEY$3 = '.data-api';\nconst ESCAPE_KEY$2 = 'Escape';\nconst TAB_KEY$1 = 'Tab';\nconst ARROW_UP_KEY$1 = 'ArrowUp';\nconst ARROW_DOWN_KEY$1 = 'ArrowDown';\nconst RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button\n\nconst EVENT_HIDE$5 = `hide${EVENT_KEY$6}`;\nconst EVENT_HIDDEN$5 = `hidden${EVENT_KEY$6}`;\nconst EVENT_SHOW$5 = `show${EVENT_KEY$6}`;\nconst EVENT_SHOWN$5 = `shown${EVENT_KEY$6}`;\nconst EVENT_CLICK_DATA_API$3 = `click${EVENT_KEY$6}${DATA_API_KEY$3}`;\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY$6}${DATA_API_KEY$3}`;\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY$6}${DATA_API_KEY$3}`;\nconst CLASS_NAME_SHOW$6 = 'show';\nconst CLASS_NAME_DROPUP = 'dropup';\nconst CLASS_NAME_DROPEND = 'dropend';\nconst CLASS_NAME_DROPSTART = 'dropstart';\nconst CLASS_NAME_DROPUP_CENTER = 'dropup-center';\nconst CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center';\nconst SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)';\nconst SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE$3}.${CLASS_NAME_SHOW$6}`;\nconst SELECTOR_MENU = '.dropdown-menu';\nconst SELECTOR_NAVBAR = '.navbar';\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav';\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start';\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end';\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start';\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end';\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start';\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start';\nconst PLACEMENT_TOPCENTER = 'top';\nconst PLACEMENT_BOTTOMCENTER = 'bottom';\nconst Default$9 = {\n  autoClose: true,\n  boundary: 'clippingParents',\n  display: 'dynamic',\n  offset: [0, 2],\n  popperConfig: null,\n  reference: 'toggle'\n};\nconst DefaultType$9 = {\n  autoClose: '(boolean|string)',\n  boundary: '(string|element)',\n  display: 'string',\n  offset: '(array|string|function)',\n  popperConfig: '(null|object|function)',\n  reference: '(string|element|object)'\n};\n\n/**\n * Class definition\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._popper = null;\n    this._parent = this._element.parentNode; // dropdown wrapper\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    this._menu = SelectorEngine.next(this._element, SELECTOR_MENU)[0] || SelectorEngine.prev(this._element, SELECTOR_MENU)[0] || SelectorEngine.findOne(SELECTOR_MENU, this._parent);\n    this._inNavbar = this._detectNavbar();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$9;\n  }\n  static get DefaultType() {\n    return DefaultType$9;\n  }\n  static get NAME() {\n    return NAME$a;\n  }\n\n  // Public\n  toggle() {\n    return this._isShown() ? this.hide() : this.show();\n  }\n  show() {\n    if (isDisabled(this._element) || this._isShown()) {\n      return;\n    }\n    const relatedTarget = {\n      relatedTarget: this._element\n    };\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$5, relatedTarget);\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._createPopper();\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', bootstrap_esm_noop);\n      }\n    }\n    this._element.focus();\n    this._element.setAttribute('aria-expanded', true);\n    this._menu.classList.add(CLASS_NAME_SHOW$6);\n    this._element.classList.add(CLASS_NAME_SHOW$6);\n    EventHandler.trigger(this._element, EVENT_SHOWN$5, relatedTarget);\n  }\n  hide() {\n    if (isDisabled(this._element) || !this._isShown()) {\n      return;\n    }\n    const relatedTarget = {\n      relatedTarget: this._element\n    };\n    this._completeHide(relatedTarget);\n  }\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy();\n    }\n    super.dispose();\n  }\n  update() {\n    this._inNavbar = this._detectNavbar();\n    if (this._popper) {\n      this._popper.update();\n    }\n  }\n\n  // Private\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$5, relatedTarget);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', bootstrap_esm_noop);\n      }\n    }\n    if (this._popper) {\n      this._popper.destroy();\n    }\n    this._menu.classList.remove(CLASS_NAME_SHOW$6);\n    this._element.classList.remove(CLASS_NAME_SHOW$6);\n    this._element.setAttribute('aria-expanded', 'false');\n    Manipulator.removeDataAttribute(this._menu, 'popper');\n    EventHandler.trigger(this._element, EVENT_HIDDEN$5, relatedTarget);\n  }\n  _getConfig(config) {\n    config = super._getConfig(config);\n    if (typeof config.reference === 'object' && !bootstrap_esm_isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME$a.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`);\n    }\n    return config;\n  }\n  _createPopper() {\n    if (typeof lib_namespaceObject === 'undefined') {\n      throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)');\n    }\n    let referenceElement = this._element;\n    if (this._config.reference === 'parent') {\n      referenceElement = this._parent;\n    } else if (bootstrap_esm_isElement(this._config.reference)) {\n      referenceElement = getElement(this._config.reference);\n    } else if (typeof this._config.reference === 'object') {\n      referenceElement = this._config.reference;\n    }\n    const popperConfig = this._getPopperConfig();\n    this._popper = popper_createPopper(referenceElement, this._menu, popperConfig);\n  }\n  _isShown() {\n    return this._menu.classList.contains(CLASS_NAME_SHOW$6);\n  }\n  _getPlacement() {\n    const parentDropdown = this._parent;\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT;\n    }\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT;\n    }\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {\n      return PLACEMENT_TOPCENTER;\n    }\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {\n      return PLACEMENT_BOTTOMCENTER;\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;\n    }\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;\n  }\n  _detectNavbar() {\n    return this._element.closest(SELECTOR_NAVBAR) !== null;\n  }\n  _getOffset() {\n    const {\n      offset\n    } = this._config;\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10));\n    }\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element);\n    }\n    return offset;\n  }\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      }, {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    };\n\n    // Disable Popper if we have a static display or Dropdown is in Navbar\n    if (this._inNavbar || this._config.display === 'static') {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'static'); // TODO: v6 remove\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }];\n    }\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [defaultBsPopperConfig])\n    };\n  }\n  _selectMenuItem({\n    key,\n    target\n  }) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(element => isVisible(element));\n    if (!items.length) {\n      return;\n    }\n\n    // if target isn't included in items (e.g. when expanding the dropdown)\n    // allow cycling to get the last item in case key equals ARROW_UP_KEY\n    getNextActiveElement(items, target, key === ARROW_DOWN_KEY$1, !items.includes(target)).focus();\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Dropdown.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n  static clearMenus(event) {\n    if (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY$1) {\n      return;\n    }\n    const openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN);\n    for (const toggle of openToggles) {\n      const context = Dropdown.getInstance(toggle);\n      if (!context || context._config.autoClose === false) {\n        continue;\n      }\n      const composedPath = event.composedPath();\n      const isMenuTarget = composedPath.includes(context._menu);\n      if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {\n        continue;\n      }\n\n      // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n      if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n        continue;\n      }\n      const relatedTarget = {\n        relatedTarget: context._element\n      };\n      if (event.type === 'click') {\n        relatedTarget.clickEvent = event;\n      }\n      context._completeHide(relatedTarget);\n    }\n  }\n  static dataApiKeydownHandler(event) {\n    // If not an UP | DOWN | ESCAPE key => not a dropdown command\n    // If input/textarea && if key is other than ESCAPE => not a dropdown command\n\n    const isInput = /input|textarea/i.test(event.target.tagName);\n    const isEscapeEvent = event.key === ESCAPE_KEY$2;\n    const isUpOrDownEvent = [ARROW_UP_KEY$1, ARROW_DOWN_KEY$1].includes(event.key);\n    if (!isUpOrDownEvent && !isEscapeEvent) {\n      return;\n    }\n    if (isInput && !isEscapeEvent) {\n      return;\n    }\n    event.preventDefault();\n\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE$3) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.next(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.findOne(SELECTOR_DATA_TOGGLE$3, event.delegateTarget.parentNode);\n    const instance = Dropdown.getOrCreateInstance(getToggleButton);\n    if (isUpOrDownEvent) {\n      event.stopPropagation();\n      instance.show();\n      instance._selectMenuItem(event);\n      return;\n    }\n    if (instance._isShown()) {\n      // else is escape and we check if it is shown\n      event.stopPropagation();\n      instance.hide();\n      getToggleButton.focus();\n    }\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$3, Dropdown.dataApiKeydownHandler);\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);\nEventHandler.on(document, EVENT_CLICK_DATA_API$3, Dropdown.clearMenus);\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);\nEventHandler.on(document, EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$3, function (event) {\n  event.preventDefault();\n  Dropdown.getOrCreateInstance(this).toggle();\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Dropdown);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$9 = 'backdrop';\nconst CLASS_NAME_FADE$4 = 'fade';\nconst CLASS_NAME_SHOW$5 = 'show';\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME$9}`;\nconst Default$8 = {\n  className: 'modal-backdrop',\n  clickCallback: null,\n  isAnimated: false,\n  isVisible: true,\n  // if false, we use the backdrop helper without adding any element to the dom\n  rootElement: 'body' // give the choice to place backdrop under different elements\n};\n\nconst DefaultType$8 = {\n  className: 'string',\n  clickCallback: '(function|null)',\n  isAnimated: 'boolean',\n  isVisible: 'boolean',\n  rootElement: '(element|string)'\n};\n\n/**\n * Class definition\n */\n\nclass Backdrop extends Config {\n  constructor(config) {\n    super();\n    this._config = this._getConfig(config);\n    this._isAppended = false;\n    this._element = null;\n  }\n\n  // Getters\n  static get Default() {\n    return Default$8;\n  }\n  static get DefaultType() {\n    return DefaultType$8;\n  }\n  static get NAME() {\n    return NAME$9;\n  }\n\n  // Public\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback);\n      return;\n    }\n    this._append();\n    const element = this._getElement();\n    if (this._config.isAnimated) {\n      reflow(element);\n    }\n    element.classList.add(CLASS_NAME_SHOW$5);\n    this._emulateAnimation(() => {\n      execute(callback);\n    });\n  }\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback);\n      return;\n    }\n    this._getElement().classList.remove(CLASS_NAME_SHOW$5);\n    this._emulateAnimation(() => {\n      this.dispose();\n      execute(callback);\n    });\n  }\n  dispose() {\n    if (!this._isAppended) {\n      return;\n    }\n    EventHandler.off(this._element, EVENT_MOUSEDOWN);\n    this._element.remove();\n    this._isAppended = false;\n  }\n\n  // Private\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div');\n      backdrop.className = this._config.className;\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE$4);\n      }\n      this._element = backdrop;\n    }\n    return this._element;\n  }\n  _configAfterMerge(config) {\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement);\n    return config;\n  }\n  _append() {\n    if (this._isAppended) {\n      return;\n    }\n    const element = this._getElement();\n    this._config.rootElement.append(element);\n    EventHandler.on(element, EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback);\n    });\n    this._isAppended = true;\n  }\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$8 = 'focustrap';\nconst DATA_KEY$5 = 'bs.focustrap';\nconst EVENT_KEY$5 = `.${DATA_KEY$5}`;\nconst EVENT_FOCUSIN$2 = `focusin${EVENT_KEY$5}`;\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY$5}`;\nconst TAB_KEY = 'Tab';\nconst TAB_NAV_FORWARD = 'forward';\nconst TAB_NAV_BACKWARD = 'backward';\nconst Default$7 = {\n  autofocus: true,\n  trapElement: null // The element to trap focus inside of\n};\n\nconst DefaultType$7 = {\n  autofocus: 'boolean',\n  trapElement: 'element'\n};\n\n/**\n * Class definition\n */\n\nclass FocusTrap extends Config {\n  constructor(config) {\n    super();\n    this._config = this._getConfig(config);\n    this._isActive = false;\n    this._lastTabNavDirection = null;\n  }\n\n  // Getters\n  static get Default() {\n    return Default$7;\n  }\n  static get DefaultType() {\n    return DefaultType$7;\n  }\n  static get NAME() {\n    return NAME$8;\n  }\n\n  // Public\n  activate() {\n    if (this._isActive) {\n      return;\n    }\n    if (this._config.autofocus) {\n      this._config.trapElement.focus();\n    }\n    EventHandler.off(document, EVENT_KEY$5); // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN$2, event => this._handleFocusin(event));\n    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event));\n    this._isActive = true;\n  }\n  deactivate() {\n    if (!this._isActive) {\n      return;\n    }\n    this._isActive = false;\n    EventHandler.off(document, EVENT_KEY$5);\n  }\n\n  // Private\n  _handleFocusin(event) {\n    const {\n      trapElement\n    } = this._config;\n    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n      return;\n    }\n    const elements = SelectorEngine.focusableChildren(trapElement);\n    if (elements.length === 0) {\n      trapElement.focus();\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus();\n    } else {\n      elements[0].focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return;\n    }\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nconst SELECTOR_STICKY_CONTENT = '.sticky-top';\nconst PROPERTY_PADDING = 'padding-right';\nconst PROPERTY_MARGIN = 'margin-right';\n\n/**\n * Class definition\n */\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body;\n  }\n\n  // Public\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth;\n    return Math.abs(window.innerWidth - documentWidth);\n  }\n  hide() {\n    const width = this.getWidth();\n    this._disableOverFlow();\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width);\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width);\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width);\n  }\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow');\n    this._resetElementAttributes(this._element, PROPERTY_PADDING);\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);\n  }\n  isOverflowing() {\n    return this.getWidth() > 0;\n  }\n\n  // Private\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow');\n    this._element.style.overflow = 'hidden';\n  }\n  _setElementAttributes(selector, styleProperty, callback) {\n    const scrollbarWidth = this.getWidth();\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return;\n      }\n      this._saveInitialAttribute(element, styleProperty);\n      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);\n      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`);\n    };\n    this._applyManipulationCallback(selector, manipulationCallBack);\n  }\n  _saveInitialAttribute(element, styleProperty) {\n    const actualValue = element.style.getPropertyValue(styleProperty);\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProperty, actualValue);\n    }\n  }\n  _resetElementAttributes(selector, styleProperty) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProperty);\n      // We only want to remove the property if the value is `null`; the value can also be zero\n      if (value === null) {\n        element.style.removeProperty(styleProperty);\n        return;\n      }\n      Manipulator.removeDataAttribute(element, styleProperty);\n      element.style.setProperty(styleProperty, value);\n    };\n    this._applyManipulationCallback(selector, manipulationCallBack);\n  }\n  _applyManipulationCallback(selector, callBack) {\n    if (bootstrap_esm_isElement(selector)) {\n      callBack(selector);\n      return;\n    }\n    for (const sel of SelectorEngine.find(selector, this._element)) {\n      callBack(sel);\n    }\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$7 = 'modal';\nconst DATA_KEY$4 = 'bs.modal';\nconst EVENT_KEY$4 = `.${DATA_KEY$4}`;\nconst DATA_API_KEY$2 = '.data-api';\nconst ESCAPE_KEY$1 = 'Escape';\nconst EVENT_HIDE$4 = `hide${EVENT_KEY$4}`;\nconst EVENT_HIDE_PREVENTED$1 = `hidePrevented${EVENT_KEY$4}`;\nconst EVENT_HIDDEN$4 = `hidden${EVENT_KEY$4}`;\nconst EVENT_SHOW$4 = `show${EVENT_KEY$4}`;\nconst EVENT_SHOWN$4 = `shown${EVENT_KEY$4}`;\nconst EVENT_RESIZE$1 = `resize${EVENT_KEY$4}`;\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY$4}`;\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY$4}`;\nconst EVENT_KEYDOWN_DISMISS$1 = `keydown.dismiss${EVENT_KEY$4}`;\nconst EVENT_CLICK_DATA_API$2 = `click${EVENT_KEY$4}${DATA_API_KEY$2}`;\nconst CLASS_NAME_OPEN = 'modal-open';\nconst CLASS_NAME_FADE$3 = 'fade';\nconst CLASS_NAME_SHOW$4 = 'show';\nconst CLASS_NAME_STATIC = 'modal-static';\nconst OPEN_SELECTOR$1 = '.modal.show';\nconst SELECTOR_DIALOG = '.modal-dialog';\nconst SELECTOR_MODAL_BODY = '.modal-body';\nconst SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle=\"modal\"]';\nconst Default$6 = {\n  backdrop: true,\n  focus: true,\n  keyboard: true\n};\nconst DefaultType$6 = {\n  backdrop: '(boolean|string)',\n  focus: 'boolean',\n  keyboard: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass bootstrap_esm_Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element);\n    this._backdrop = this._initializeBackDrop();\n    this._focustrap = this._initializeFocusTrap();\n    this._isShown = false;\n    this._isTransitioning = false;\n    this._scrollBar = new ScrollBarHelper();\n    this._addEventListeners();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$6;\n  }\n  static get DefaultType() {\n    return DefaultType$6;\n  }\n  static get NAME() {\n    return NAME$7;\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget);\n  }\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return;\n    }\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$4, {\n      relatedTarget\n    });\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._isShown = true;\n    this._isTransitioning = true;\n    this._scrollBar.hide();\n    document.body.classList.add(CLASS_NAME_OPEN);\n    this._adjustDialog();\n    this._backdrop.show(() => this._showElement(relatedTarget));\n  }\n  hide() {\n    if (!this._isShown || this._isTransitioning) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$4);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    this._isShown = false;\n    this._isTransitioning = true;\n    this._focustrap.deactivate();\n    this._element.classList.remove(CLASS_NAME_SHOW$4);\n    this._queueCallback(() => this._hideModal(), this._element, this._isAnimated());\n  }\n  dispose() {\n    EventHandler.off(window, EVENT_KEY$4);\n    EventHandler.off(this._dialog, EVENT_KEY$4);\n    this._backdrop.dispose();\n    this._focustrap.deactivate();\n    super.dispose();\n  }\n  handleUpdate() {\n    this._adjustDialog();\n  }\n\n  // Private\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop),\n      // 'static' option will be translated to true, and booleans will keep their value,\n      isAnimated: this._isAnimated()\n    });\n  }\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    });\n  }\n  _showElement(relatedTarget) {\n    // try to append dynamic modal\n    if (!document.body.contains(this._element)) {\n      document.body.append(this._element);\n    }\n    this._element.style.display = 'block';\n    this._element.removeAttribute('aria-hidden');\n    this._element.setAttribute('aria-modal', true);\n    this._element.setAttribute('role', 'dialog');\n    this._element.scrollTop = 0;\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);\n    if (modalBody) {\n      modalBody.scrollTop = 0;\n    }\n    reflow(this._element);\n    this._element.classList.add(CLASS_NAME_SHOW$4);\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._focustrap.activate();\n      }\n      this._isTransitioning = false;\n      EventHandler.trigger(this._element, EVENT_SHOWN$4, {\n        relatedTarget\n      });\n    };\n    this._queueCallback(transitionComplete, this._dialog, this._isAnimated());\n  }\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS$1, event => {\n      if (event.key !== ESCAPE_KEY$1) {\n        return;\n      }\n      if (this._config.keyboard) {\n        this.hide();\n        return;\n      }\n      this._triggerBackdropTransition();\n    });\n    EventHandler.on(window, EVENT_RESIZE$1, () => {\n      if (this._isShown && !this._isTransitioning) {\n        this._adjustDialog();\n      }\n    });\n    EventHandler.on(this._element, EVENT_MOUSEDOWN_DISMISS, event => {\n      // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n      EventHandler.one(this._element, EVENT_CLICK_DISMISS, event2 => {\n        if (this._element !== event.target || this._element !== event2.target) {\n          return;\n        }\n        if (this._config.backdrop === 'static') {\n          this._triggerBackdropTransition();\n          return;\n        }\n        if (this._config.backdrop) {\n          this.hide();\n        }\n      });\n    });\n  }\n  _hideModal() {\n    this._element.style.display = 'none';\n    this._element.setAttribute('aria-hidden', true);\n    this._element.removeAttribute('aria-modal');\n    this._element.removeAttribute('role');\n    this._isTransitioning = false;\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN);\n      this._resetAdjustments();\n      this._scrollBar.reset();\n      EventHandler.trigger(this._element, EVENT_HIDDEN$4);\n    });\n  }\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE$3);\n  }\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED$1);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n    const initialOverflowY = this._element.style.overflowY;\n    // return if the following background transition hasn't yet completed\n    if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {\n      return;\n    }\n    if (!isModalOverflowing) {\n      this._element.style.overflowY = 'hidden';\n    }\n    this._element.classList.add(CLASS_NAME_STATIC);\n    this._queueCallback(() => {\n      this._element.classList.remove(CLASS_NAME_STATIC);\n      this._queueCallback(() => {\n        this._element.style.overflowY = initialOverflowY;\n      }, this._dialog);\n    }, this._dialog);\n    this._element.focus();\n  }\n\n  /**\n   * The following methods are used to handle overflowing modals\n   */\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n    const scrollbarWidth = this._scrollBar.getWidth();\n    const isBodyOverflowing = scrollbarWidth > 0;\n    if (isBodyOverflowing && !isModalOverflowing) {\n      const property = isRTL() ? 'paddingLeft' : 'paddingRight';\n      this._element.style[property] = `${scrollbarWidth}px`;\n    }\n    if (!isBodyOverflowing && isModalOverflowing) {\n      const property = isRTL() ? 'paddingRight' : 'paddingLeft';\n      this._element.style[property] = `${scrollbarWidth}px`;\n    }\n  }\n  _resetAdjustments() {\n    this._element.style.paddingLeft = '';\n    this._element.style.paddingRight = '';\n  }\n\n  // Static\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = bootstrap_esm_Modal.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config](relatedTarget);\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$2, SELECTOR_DATA_TOGGLE$2, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this);\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault();\n  }\n  EventHandler.one(target, EVENT_SHOW$4, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return;\n    }\n    EventHandler.one(target, EVENT_HIDDEN$4, () => {\n      if (isVisible(this)) {\n        this.focus();\n      }\n    });\n  });\n\n  // avoid conflict when clicking modal toggler while another one is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR$1);\n  if (alreadyOpen) {\n    bootstrap_esm_Modal.getInstance(alreadyOpen).hide();\n  }\n  const data = bootstrap_esm_Modal.getOrCreateInstance(target);\n  data.toggle(this);\n});\nenableDismissTrigger(bootstrap_esm_Modal);\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(bootstrap_esm_Modal);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap offcanvas.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$6 = 'offcanvas';\nconst DATA_KEY$3 = 'bs.offcanvas';\nconst EVENT_KEY$3 = `.${DATA_KEY$3}`;\nconst DATA_API_KEY$1 = '.data-api';\nconst EVENT_LOAD_DATA_API$2 = `load${EVENT_KEY$3}${DATA_API_KEY$1}`;\nconst ESCAPE_KEY = 'Escape';\nconst CLASS_NAME_SHOW$3 = 'show';\nconst CLASS_NAME_SHOWING$1 = 'showing';\nconst CLASS_NAME_HIDING = 'hiding';\nconst CLASS_NAME_BACKDROP = 'offcanvas-backdrop';\nconst OPEN_SELECTOR = '.offcanvas.show';\nconst EVENT_SHOW$3 = `show${EVENT_KEY$3}`;\nconst EVENT_SHOWN$3 = `shown${EVENT_KEY$3}`;\nconst EVENT_HIDE$3 = `hide${EVENT_KEY$3}`;\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY$3}`;\nconst EVENT_HIDDEN$3 = `hidden${EVENT_KEY$3}`;\nconst EVENT_RESIZE = `resize${EVENT_KEY$3}`;\nconst EVENT_CLICK_DATA_API$1 = `click${EVENT_KEY$3}${DATA_API_KEY$1}`;\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY$3}`;\nconst SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle=\"offcanvas\"]';\nconst Default$5 = {\n  backdrop: true,\n  keyboard: true,\n  scroll: false\n};\nconst DefaultType$5 = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  scroll: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass Offcanvas extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._isShown = false;\n    this._backdrop = this._initializeBackDrop();\n    this._focustrap = this._initializeFocusTrap();\n    this._addEventListeners();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$5;\n  }\n  static get DefaultType() {\n    return DefaultType$5;\n  }\n  static get NAME() {\n    return NAME$6;\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget);\n  }\n  show(relatedTarget) {\n    if (this._isShown) {\n      return;\n    }\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$3, {\n      relatedTarget\n    });\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._isShown = true;\n    this._backdrop.show();\n    if (!this._config.scroll) {\n      new ScrollBarHelper().hide();\n    }\n    this._element.setAttribute('aria-modal', true);\n    this._element.setAttribute('role', 'dialog');\n    this._element.classList.add(CLASS_NAME_SHOWING$1);\n    const completeCallBack = () => {\n      if (!this._config.scroll || this._config.backdrop) {\n        this._focustrap.activate();\n      }\n      this._element.classList.add(CLASS_NAME_SHOW$3);\n      this._element.classList.remove(CLASS_NAME_SHOWING$1);\n      EventHandler.trigger(this._element, EVENT_SHOWN$3, {\n        relatedTarget\n      });\n    };\n    this._queueCallback(completeCallBack, this._element, true);\n  }\n  hide() {\n    if (!this._isShown) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$3);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    this._focustrap.deactivate();\n    this._element.blur();\n    this._isShown = false;\n    this._element.classList.add(CLASS_NAME_HIDING);\n    this._backdrop.hide();\n    const completeCallback = () => {\n      this._element.classList.remove(CLASS_NAME_SHOW$3, CLASS_NAME_HIDING);\n      this._element.removeAttribute('aria-modal');\n      this._element.removeAttribute('role');\n      if (!this._config.scroll) {\n        new ScrollBarHelper().reset();\n      }\n      EventHandler.trigger(this._element, EVENT_HIDDEN$3);\n    };\n    this._queueCallback(completeCallback, this._element, true);\n  }\n  dispose() {\n    this._backdrop.dispose();\n    this._focustrap.deactivate();\n    super.dispose();\n  }\n\n  // Private\n  _initializeBackDrop() {\n    const clickCallback = () => {\n      if (this._config.backdrop === 'static') {\n        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);\n        return;\n      }\n      this.hide();\n    };\n\n    // 'static' option will be translated to true, and booleans will keep their value\n    const isVisible = Boolean(this._config.backdrop);\n    return new Backdrop({\n      className: CLASS_NAME_BACKDROP,\n      isVisible,\n      isAnimated: true,\n      rootElement: this._element.parentNode,\n      clickCallback: isVisible ? clickCallback : null\n    });\n  }\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    });\n  }\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return;\n      }\n      if (this._config.keyboard) {\n        this.hide();\n        return;\n      }\n      EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);\n    });\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Offcanvas.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config](this);\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE$1, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this);\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault();\n  }\n  if (isDisabled(this)) {\n    return;\n  }\n  EventHandler.one(target, EVENT_HIDDEN$3, () => {\n    // focus on trigger when it is closed\n    if (isVisible(this)) {\n      this.focus();\n    }\n  });\n\n  // avoid conflict when clicking a toggler of an offcanvas, while another is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR);\n  if (alreadyOpen && alreadyOpen !== target) {\n    Offcanvas.getInstance(alreadyOpen).hide();\n  }\n  const data = Offcanvas.getOrCreateInstance(target);\n  data.toggle(this);\n});\nEventHandler.on(window, EVENT_LOAD_DATA_API$2, () => {\n  for (const selector of SelectorEngine.find(OPEN_SELECTOR)) {\n    Offcanvas.getOrCreateInstance(selector).show();\n  }\n});\nEventHandler.on(window, EVENT_RESIZE, () => {\n  for (const element of SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]')) {\n    if (getComputedStyle(element).position !== 'fixed') {\n      Offcanvas.getOrCreateInstance(element).hide();\n    }\n  }\n});\nenableDismissTrigger(Offcanvas);\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Offcanvas);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// js-docs-start allow-list\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i;\nconst DefaultAllowlist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n};\n// js-docs-end allow-list\n\nconst uriAttributes = new Set(['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href']);\n\n/**\n * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation\n * contexts.\n *\n * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38\n */\n// eslint-disable-next-line unicorn/better-regex\nconst SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i;\nconst allowedAttribute = (attribute, allowedAttributeList) => {\n  const attributeName = attribute.nodeName.toLowerCase();\n  if (allowedAttributeList.includes(attributeName)) {\n    if (uriAttributes.has(attributeName)) {\n      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue));\n    }\n    return true;\n  }\n\n  // Check if a regular expression validates the attribute.\n  return allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp).some(regex => regex.test(attributeName));\n};\nfunction sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {\n  if (!unsafeHtml.length) {\n    return unsafeHtml;\n  }\n  if (sanitizeFunction && typeof sanitizeFunction === 'function') {\n    return sanitizeFunction(unsafeHtml);\n  }\n  const domParser = new window.DOMParser();\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');\n  const elements = [].concat(...createdDocument.body.querySelectorAll('*'));\n  for (const element of elements) {\n    const elementName = element.nodeName.toLowerCase();\n    if (!Object.keys(allowList).includes(elementName)) {\n      element.remove();\n      continue;\n    }\n    const attributeList = [].concat(...element.attributes);\n    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || []);\n    for (const attribute of attributeList) {\n      if (!allowedAttribute(attribute, allowedAttributes)) {\n        element.removeAttribute(attribute.nodeName);\n      }\n    }\n  }\n  return createdDocument.body.innerHTML;\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$5 = 'TemplateFactory';\nconst Default$4 = {\n  allowList: DefaultAllowlist,\n  content: {},\n  // { selector : text ,  selector2 : text2 , }\n  extraClass: '',\n  html: false,\n  sanitize: true,\n  sanitizeFn: null,\n  template: '<div></div>'\n};\nconst DefaultType$4 = {\n  allowList: 'object',\n  content: 'object',\n  extraClass: '(string|function)',\n  html: 'boolean',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  template: 'string'\n};\nconst DefaultContentType = {\n  entry: '(string|element|function|null)',\n  selector: '(string|element)'\n};\n\n/**\n * Class definition\n */\n\nclass TemplateFactory extends Config {\n  constructor(config) {\n    super();\n    this._config = this._getConfig(config);\n  }\n\n  // Getters\n  static get Default() {\n    return Default$4;\n  }\n  static get DefaultType() {\n    return DefaultType$4;\n  }\n  static get NAME() {\n    return NAME$5;\n  }\n\n  // Public\n  getContent() {\n    return Object.values(this._config.content).map(config => this._resolvePossibleFunction(config)).filter(Boolean);\n  }\n  hasContent() {\n    return this.getContent().length > 0;\n  }\n  changeContent(content) {\n    this._checkContent(content);\n    this._config.content = {\n      ...this._config.content,\n      ...content\n    };\n    return this;\n  }\n  toHtml() {\n    const templateWrapper = document.createElement('div');\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template);\n    for (const [selector, text] of Object.entries(this._config.content)) {\n      this._setContent(templateWrapper, text, selector);\n    }\n    const template = templateWrapper.children[0];\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass);\n    if (extraClass) {\n      template.classList.add(...extraClass.split(' '));\n    }\n    return template;\n  }\n\n  // Private\n  _typeCheckConfig(config) {\n    super._typeCheckConfig(config);\n    this._checkContent(config.content);\n  }\n  _checkContent(arg) {\n    for (const [selector, content] of Object.entries(arg)) {\n      super._typeCheckConfig({\n        selector,\n        entry: content\n      }, DefaultContentType);\n    }\n  }\n  _setContent(template, content, selector) {\n    const templateElement = SelectorEngine.findOne(selector, template);\n    if (!templateElement) {\n      return;\n    }\n    content = this._resolvePossibleFunction(content);\n    if (!content) {\n      templateElement.remove();\n      return;\n    }\n    if (bootstrap_esm_isElement(content)) {\n      this._putElementInTemplate(getElement(content), templateElement);\n      return;\n    }\n    if (this._config.html) {\n      templateElement.innerHTML = this._maybeSanitize(content);\n      return;\n    }\n    templateElement.textContent = content;\n  }\n  _maybeSanitize(arg) {\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg;\n  }\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [this]);\n  }\n  _putElementInTemplate(element, templateElement) {\n    if (this._config.html) {\n      templateElement.innerHTML = '';\n      templateElement.append(element);\n      return;\n    }\n    templateElement.textContent = element.textContent;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$4 = 'tooltip';\nconst DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn']);\nconst CLASS_NAME_FADE$2 = 'fade';\nconst CLASS_NAME_MODAL = 'modal';\nconst CLASS_NAME_SHOW$2 = 'show';\nconst SELECTOR_TOOLTIP_INNER = '.tooltip-inner';\nconst SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`;\nconst EVENT_MODAL_HIDE = 'hide.bs.modal';\nconst TRIGGER_HOVER = 'hover';\nconst TRIGGER_FOCUS = 'focus';\nconst TRIGGER_CLICK = 'click';\nconst TRIGGER_MANUAL = 'manual';\nconst EVENT_HIDE$2 = 'hide';\nconst EVENT_HIDDEN$2 = 'hidden';\nconst EVENT_SHOW$2 = 'show';\nconst EVENT_SHOWN$2 = 'shown';\nconst EVENT_INSERTED = 'inserted';\nconst EVENT_CLICK$1 = 'click';\nconst EVENT_FOCUSIN$1 = 'focusin';\nconst EVENT_FOCUSOUT$1 = 'focusout';\nconst EVENT_MOUSEENTER = 'mouseenter';\nconst EVENT_MOUSELEAVE = 'mouseleave';\nconst AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: isRTL() ? 'left' : 'right',\n  BOTTOM: 'bottom',\n  LEFT: isRTL() ? 'right' : 'left'\n};\nconst Default$3 = {\n  allowList: DefaultAllowlist,\n  animation: true,\n  boundary: 'clippingParents',\n  container: false,\n  customClass: '',\n  delay: 0,\n  fallbackPlacements: ['top', 'right', 'bottom', 'left'],\n  html: false,\n  offset: [0, 6],\n  placement: 'top',\n  popperConfig: null,\n  sanitize: true,\n  sanitizeFn: null,\n  selector: false,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n  title: '',\n  trigger: 'hover focus'\n};\nconst DefaultType$3 = {\n  allowList: 'object',\n  animation: 'boolean',\n  boundary: '(string|element)',\n  container: '(string|element|boolean)',\n  customClass: '(string|function)',\n  delay: '(number|object)',\n  fallbackPlacements: 'array',\n  html: 'boolean',\n  offset: '(array|string|function)',\n  placement: '(string|function)',\n  popperConfig: '(null|object|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  selector: '(string|boolean)',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string'\n};\n\n/**\n * Class definition\n */\n\nclass Tooltip extends BaseComponent {\n  constructor(element, config) {\n    if (typeof lib_namespaceObject === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org)');\n    }\n    super(element, config);\n\n    // Private\n    this._isEnabled = true;\n    this._timeout = 0;\n    this._isHovered = null;\n    this._activeTrigger = {};\n    this._popper = null;\n    this._templateFactory = null;\n    this._newContent = null;\n\n    // Protected\n    this.tip = null;\n    this._setListeners();\n    if (!this._config.selector) {\n      this._fixTitle();\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default$3;\n  }\n  static get DefaultType() {\n    return DefaultType$3;\n  }\n  static get NAME() {\n    return NAME$4;\n  }\n\n  // Public\n  enable() {\n    this._isEnabled = true;\n  }\n  disable() {\n    this._isEnabled = false;\n  }\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled;\n  }\n  toggle() {\n    if (!this._isEnabled) {\n      return;\n    }\n    this._activeTrigger.click = !this._activeTrigger.click;\n    if (this._isShown()) {\n      this._leave();\n      return;\n    }\n    this._enter();\n  }\n  dispose() {\n    clearTimeout(this._timeout);\n    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);\n    if (this._element.getAttribute('data-bs-original-title')) {\n      this._element.setAttribute('title', this._element.getAttribute('data-bs-original-title'));\n    }\n    this._disposePopper();\n    super.dispose();\n  }\n  show() {\n    if (this._element.style.display === 'none') {\n      throw new Error('Please use show on visible elements');\n    }\n    if (!(this._isWithContent() && this._isEnabled)) {\n      return;\n    }\n    const showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW$2));\n    const shadowRoot = findShadowRoot(this._element);\n    const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element);\n    if (showEvent.defaultPrevented || !isInTheDom) {\n      return;\n    }\n\n    // TODO: v6 remove this or make it optional\n    this._disposePopper();\n    const tip = this._getTipElement();\n    this._element.setAttribute('aria-describedby', tip.getAttribute('id'));\n    const {\n      container\n    } = this._config;\n    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n      container.append(tip);\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED));\n    }\n    this._popper = this._createPopper(tip);\n    tip.classList.add(CLASS_NAME_SHOW$2);\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', bootstrap_esm_noop);\n      }\n    }\n    const complete = () => {\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN$2));\n      if (this._isHovered === false) {\n        this._leave();\n      }\n      this._isHovered = false;\n    };\n    this._queueCallback(complete, this.tip, this._isAnimated());\n  }\n  hide() {\n    if (!this._isShown()) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE$2));\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    const tip = this._getTipElement();\n    tip.classList.remove(CLASS_NAME_SHOW$2);\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', bootstrap_esm_noop);\n      }\n    }\n    this._activeTrigger[TRIGGER_CLICK] = false;\n    this._activeTrigger[TRIGGER_FOCUS] = false;\n    this._activeTrigger[TRIGGER_HOVER] = false;\n    this._isHovered = null; // it is a trick to support manual triggering\n\n    const complete = () => {\n      if (this._isWithActiveTrigger()) {\n        return;\n      }\n      if (!this._isHovered) {\n        this._disposePopper();\n      }\n      this._element.removeAttribute('aria-describedby');\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN$2));\n    };\n    this._queueCallback(complete, this.tip, this._isAnimated());\n  }\n  update() {\n    if (this._popper) {\n      this._popper.update();\n    }\n  }\n\n  // Protected\n  _isWithContent() {\n    return Boolean(this._getTitle());\n  }\n  _getTipElement() {\n    if (!this.tip) {\n      this.tip = this._createTipElement(this._newContent || this._getContentForTemplate());\n    }\n    return this.tip;\n  }\n  _createTipElement(content) {\n    const tip = this._getTemplateFactory(content).toHtml();\n\n    // TODO: remove this check in v6\n    if (!tip) {\n      return null;\n    }\n    tip.classList.remove(CLASS_NAME_FADE$2, CLASS_NAME_SHOW$2);\n    // TODO: v6 the following can be achieved with CSS only\n    tip.classList.add(`bs-${this.constructor.NAME}-auto`);\n    const tipId = getUID(this.constructor.NAME).toString();\n    tip.setAttribute('id', tipId);\n    if (this._isAnimated()) {\n      tip.classList.add(CLASS_NAME_FADE$2);\n    }\n    return tip;\n  }\n  setContent(content) {\n    this._newContent = content;\n    if (this._isShown()) {\n      this._disposePopper();\n      this.show();\n    }\n  }\n  _getTemplateFactory(content) {\n    if (this._templateFactory) {\n      this._templateFactory.changeContent(content);\n    } else {\n      this._templateFactory = new TemplateFactory({\n        ...this._config,\n        // the `content` var has to be after `this._config`\n        // to override config.content in case of popover\n        content,\n        extraClass: this._resolvePossibleFunction(this._config.customClass)\n      });\n    }\n    return this._templateFactory;\n  }\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TOOLTIP_INNER]: this._getTitle()\n    };\n  }\n  _getTitle() {\n    return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute('data-bs-original-title');\n  }\n\n  // Private\n  _initializeOnDelegatedTarget(event) {\n    return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());\n  }\n  _isAnimated() {\n    return this._config.animation || this.tip && this.tip.classList.contains(CLASS_NAME_FADE$2);\n  }\n  _isShown() {\n    return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW$2);\n  }\n  _createPopper(tip) {\n    const placement = execute(this._config.placement, [this, tip, this._element]);\n    const attachment = AttachmentMap[placement.toUpperCase()];\n    return popper_createPopper(this._element, tip, this._getPopperConfig(attachment));\n  }\n  _getOffset() {\n    const {\n      offset\n    } = this._config;\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10));\n    }\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element);\n    }\n    return offset;\n  }\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [this._element]);\n  }\n  _getPopperConfig(attachment) {\n    const defaultBsPopperConfig = {\n      placement: attachment,\n      modifiers: [{\n        name: 'flip',\n        options: {\n          fallbackPlacements: this._config.fallbackPlacements\n        }\n      }, {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }, {\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      }, {\n        name: 'arrow',\n        options: {\n          element: `.${this.constructor.NAME}-arrow`\n        }\n      }, {\n        name: 'preSetPlacement',\n        enabled: true,\n        phase: 'beforeMain',\n        fn: data => {\n          // Pre-set Popper's placement attribute in order to read the arrow sizes properly.\n          // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement\n          this._getTipElement().setAttribute('data-popper-placement', data.state.placement);\n        }\n      }]\n    };\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [defaultBsPopperConfig])\n    };\n  }\n  _setListeners() {\n    const triggers = this._config.trigger.split(' ');\n    for (const trigger of triggers) {\n      if (trigger === 'click') {\n        EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK$1), this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event);\n          context.toggle();\n        });\n      } else if (trigger !== TRIGGER_MANUAL) {\n        const eventIn = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSEENTER) : this.constructor.eventName(EVENT_FOCUSIN$1);\n        const eventOut = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSELEAVE) : this.constructor.eventName(EVENT_FOCUSOUT$1);\n        EventHandler.on(this._element, eventIn, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event);\n          context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;\n          context._enter();\n        });\n        EventHandler.on(this._element, eventOut, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event);\n          context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = context._element.contains(event.relatedTarget);\n          context._leave();\n        });\n      }\n    }\n    this._hideModalHandler = () => {\n      if (this._element) {\n        this.hide();\n      }\n    };\n    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);\n  }\n  _fixTitle() {\n    const title = this._element.getAttribute('title');\n    if (!title) {\n      return;\n    }\n    if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) {\n      this._element.setAttribute('aria-label', title);\n    }\n    this._element.setAttribute('data-bs-original-title', title); // DO NOT USE IT. Is only for backwards compatibility\n    this._element.removeAttribute('title');\n  }\n  _enter() {\n    if (this._isShown() || this._isHovered) {\n      this._isHovered = true;\n      return;\n    }\n    this._isHovered = true;\n    this._setTimeout(() => {\n      if (this._isHovered) {\n        this.show();\n      }\n    }, this._config.delay.show);\n  }\n  _leave() {\n    if (this._isWithActiveTrigger()) {\n      return;\n    }\n    this._isHovered = false;\n    this._setTimeout(() => {\n      if (!this._isHovered) {\n        this.hide();\n      }\n    }, this._config.delay.hide);\n  }\n  _setTimeout(handler, timeout) {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(handler, timeout);\n  }\n  _isWithActiveTrigger() {\n    return Object.values(this._activeTrigger).includes(true);\n  }\n  _getConfig(config) {\n    const dataAttributes = Manipulator.getDataAttributes(this._element);\n    for (const dataAttribute of Object.keys(dataAttributes)) {\n      if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {\n        delete dataAttributes[dataAttribute];\n      }\n    }\n    config = {\n      ...dataAttributes,\n      ...(typeof config === 'object' && config ? config : {})\n    };\n    config = this._mergeConfigObj(config);\n    config = this._configAfterMerge(config);\n    this._typeCheckConfig(config);\n    return config;\n  }\n  _configAfterMerge(config) {\n    config.container = config.container === false ? document.body : getElement(config.container);\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      };\n    }\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString();\n    }\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString();\n    }\n    return config;\n  }\n  _getDelegateConfig() {\n    const config = {};\n    for (const [key, value] of Object.entries(this._config)) {\n      if (this.constructor.Default[key] !== value) {\n        config[key] = value;\n      }\n    }\n    config.selector = false;\n    config.trigger = 'manual';\n\n    // In the future can be replaced with:\n    // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])\n    // `Object.fromEntries(keysWithDifferentValues)`\n    return config;\n  }\n  _disposePopper() {\n    if (this._popper) {\n      this._popper.destroy();\n      this._popper = null;\n    }\n    if (this.tip) {\n      this.tip.remove();\n      this.tip = null;\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tooltip.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tooltip);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$3 = 'popover';\nconst SELECTOR_TITLE = '.popover-header';\nconst SELECTOR_CONTENT = '.popover-body';\nconst Default$2 = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div>' + '</div>',\n  trigger: 'click'\n};\nconst DefaultType$2 = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n};\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default$2;\n  }\n  static get DefaultType() {\n    return DefaultType$2;\n  }\n  static get NAME() {\n    return NAME$3;\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent();\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    };\n  }\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content);\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$2 = 'scrollspy';\nconst DATA_KEY$2 = 'bs.scrollspy';\nconst EVENT_KEY$2 = `.${DATA_KEY$2}`;\nconst DATA_API_KEY = '.data-api';\nconst EVENT_ACTIVATE = `activate${EVENT_KEY$2}`;\nconst EVENT_CLICK = `click${EVENT_KEY$2}`;\nconst EVENT_LOAD_DATA_API$1 = `load${EVENT_KEY$2}${DATA_API_KEY}`;\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nconst CLASS_NAME_ACTIVE$1 = 'active';\nconst SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]';\nconst SELECTOR_TARGET_LINKS = '[href]';\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nconst SELECTOR_NAV_LINKS = '.nav-link';\nconst SELECTOR_NAV_ITEMS = '.nav-item';\nconst SELECTOR_LIST_ITEMS = '.list-group-item';\nconst SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`;\nconst SELECTOR_DROPDOWN = '.dropdown';\nconst SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';\nconst Default$1 = {\n  offset: null,\n  // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: '0px 0px -25%',\n  smoothScroll: false,\n  target: null,\n  threshold: [0.1, 0.5, 1]\n};\nconst DefaultType$1 = {\n  offset: '(number|null)',\n  // TODO v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: 'string',\n  smoothScroll: 'boolean',\n  target: 'element',\n  threshold: 'array'\n};\n\n/**\n * Class definition\n */\n\nclass ScrollSpy extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n\n    // this._element is the observablesContainer and config.target the menu links wrapper\n    this._targetLinks = new Map();\n    this._observableSections = new Map();\n    this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element;\n    this._activeTarget = null;\n    this._observer = null;\n    this._previousScrollData = {\n      visibleEntryTop: 0,\n      parentScrollTop: 0\n    };\n    this.refresh(); // initialize\n  }\n\n  // Getters\n  static get Default() {\n    return Default$1;\n  }\n  static get DefaultType() {\n    return DefaultType$1;\n  }\n  static get NAME() {\n    return NAME$2;\n  }\n\n  // Public\n  refresh() {\n    this._initializeTargetsAndObservables();\n    this._maybeEnableSmoothScroll();\n    if (this._observer) {\n      this._observer.disconnect();\n    } else {\n      this._observer = this._getNewObserver();\n    }\n    for (const section of this._observableSections.values()) {\n      this._observer.observe(section);\n    }\n  }\n  dispose() {\n    this._observer.disconnect();\n    super.dispose();\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n    config.target = getElement(config.target) || document.body;\n\n    // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n    config.rootMargin = config.offset ? `${config.offset}px 0px -30%` : config.rootMargin;\n    if (typeof config.threshold === 'string') {\n      config.threshold = config.threshold.split(',').map(value => Number.parseFloat(value));\n    }\n    return config;\n  }\n  _maybeEnableSmoothScroll() {\n    if (!this._config.smoothScroll) {\n      return;\n    }\n\n    // unregister any previous listeners\n    EventHandler.off(this._config.target, EVENT_CLICK);\n    EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, event => {\n      const observableSection = this._observableSections.get(event.target.hash);\n      if (observableSection) {\n        event.preventDefault();\n        const root = this._rootElement || window;\n        const height = observableSection.offsetTop - this._element.offsetTop;\n        if (root.scrollTo) {\n          root.scrollTo({\n            top: height,\n            behavior: 'smooth'\n          });\n          return;\n        }\n\n        // Chrome 60 doesn't support `scrollTo`\n        root.scrollTop = height;\n      }\n    });\n  }\n  _getNewObserver() {\n    const options = {\n      root: this._rootElement,\n      threshold: this._config.threshold,\n      rootMargin: this._config.rootMargin\n    };\n    return new IntersectionObserver(entries => this._observerCallback(entries), options);\n  }\n\n  // The logic of selection\n  _observerCallback(entries) {\n    const targetElement = entry => this._targetLinks.get(`#${entry.target.id}`);\n    const activate = entry => {\n      this._previousScrollData.visibleEntryTop = entry.target.offsetTop;\n      this._process(targetElement(entry));\n    };\n    const parentScrollTop = (this._rootElement || document.documentElement).scrollTop;\n    const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop;\n    this._previousScrollData.parentScrollTop = parentScrollTop;\n    for (const entry of entries) {\n      if (!entry.isIntersecting) {\n        this._activeTarget = null;\n        this._clearActiveClass(targetElement(entry));\n        continue;\n      }\n      const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop;\n      // if we are scrolling down, pick the bigger offsetTop\n      if (userScrollsDown && entryIsLowerThanPrevious) {\n        activate(entry);\n        // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n        if (!parentScrollTop) {\n          return;\n        }\n        continue;\n      }\n\n      // if we are scrolling up, pick the smallest offsetTop\n      if (!userScrollsDown && !entryIsLowerThanPrevious) {\n        activate(entry);\n      }\n    }\n  }\n  _initializeTargetsAndObservables() {\n    this._targetLinks = new Map();\n    this._observableSections = new Map();\n    const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target);\n    for (const anchor of targetLinks) {\n      // ensure that the anchor has an id and is not disabled\n      if (!anchor.hash || isDisabled(anchor)) {\n        continue;\n      }\n      const observableSection = SelectorEngine.findOne(decodeURI(anchor.hash), this._element);\n\n      // ensure that the observableSection exists & is visible\n      if (isVisible(observableSection)) {\n        this._targetLinks.set(decodeURI(anchor.hash), anchor);\n        this._observableSections.set(anchor.hash, observableSection);\n      }\n    }\n  }\n  _process(target) {\n    if (this._activeTarget === target) {\n      return;\n    }\n    this._clearActiveClass(this._config.target);\n    this._activeTarget = target;\n    target.classList.add(CLASS_NAME_ACTIVE$1);\n    this._activateParents(target);\n    EventHandler.trigger(this._element, EVENT_ACTIVATE, {\n      relatedTarget: target\n    });\n  }\n  _activateParents(target) {\n    // Activate dropdown parents\n    if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE$1, target.closest(SELECTOR_DROPDOWN)).classList.add(CLASS_NAME_ACTIVE$1);\n      return;\n    }\n    for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {\n        item.classList.add(CLASS_NAME_ACTIVE$1);\n      }\n    }\n  }\n  _clearActiveClass(parent) {\n    parent.classList.remove(CLASS_NAME_ACTIVE$1);\n    const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE$1}`, parent);\n    for (const node of activeNodes) {\n      node.classList.remove(CLASS_NAME_ACTIVE$1);\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = ScrollSpy.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API$1, () => {\n  for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {\n    ScrollSpy.getOrCreateInstance(spy);\n  }\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(ScrollSpy);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$1 = 'tab';\nconst DATA_KEY$1 = 'bs.tab';\nconst EVENT_KEY$1 = `.${DATA_KEY$1}`;\nconst EVENT_HIDE$1 = `hide${EVENT_KEY$1}`;\nconst EVENT_HIDDEN$1 = `hidden${EVENT_KEY$1}`;\nconst EVENT_SHOW$1 = `show${EVENT_KEY$1}`;\nconst EVENT_SHOWN$1 = `shown${EVENT_KEY$1}`;\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY$1}`;\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY$1}`;\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY$1}`;\nconst ARROW_LEFT_KEY = 'ArrowLeft';\nconst ARROW_RIGHT_KEY = 'ArrowRight';\nconst ARROW_UP_KEY = 'ArrowUp';\nconst ARROW_DOWN_KEY = 'ArrowDown';\nconst HOME_KEY = 'Home';\nconst END_KEY = 'End';\nconst CLASS_NAME_ACTIVE = 'active';\nconst CLASS_NAME_FADE$1 = 'fade';\nconst CLASS_NAME_SHOW$1 = 'show';\nconst CLASS_DROPDOWN = 'dropdown';\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nconst SELECTOR_DROPDOWN_MENU = '.dropdown-menu';\nconst NOT_SELECTOR_DROPDOWN_TOGGLE = `:not(${SELECTOR_DROPDOWN_TOGGLE})`;\nconst SELECTOR_TAB_PANEL = '.list-group, .nav, [role=\"tablist\"]';\nconst SELECTOR_OUTER = '.nav-item, .list-group-item';\nconst SELECTOR_INNER = `.nav-link${NOT_SELECTOR_DROPDOWN_TOGGLE}, .list-group-item${NOT_SELECTOR_DROPDOWN_TOGGLE}, [role=\"tab\"]${NOT_SELECTOR_DROPDOWN_TOGGLE}`;\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]'; // TODO: could only be `tab` in v6\nconst SELECTOR_INNER_ELEM = `${SELECTOR_INNER}, ${SELECTOR_DATA_TOGGLE}`;\nconst SELECTOR_DATA_TOGGLE_ACTIVE = `.${CLASS_NAME_ACTIVE}[data-bs-toggle=\"tab\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"pill\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"list\"]`;\n\n/**\n * Class definition\n */\n\nclass Tab extends BaseComponent {\n  constructor(element) {\n    super(element);\n    this._parent = this._element.closest(SELECTOR_TAB_PANEL);\n    if (!this._parent) {\n      return;\n      // TODO: should throw exception in v6\n      // throw new TypeError(`${element.outerHTML} has not a valid parent ${SELECTOR_INNER_ELEM}`)\n    }\n\n    // Set up initial aria attributes\n    this._setInitialAttributes(this._parent, this._getChildren());\n    EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event));\n  }\n\n  // Getters\n  static get NAME() {\n    return NAME$1;\n  }\n\n  // Public\n  show() {\n    // Shows this elem and deactivate the active sibling if exists\n    const innerElem = this._element;\n    if (this._elemIsActive(innerElem)) {\n      return;\n    }\n\n    // Search for active tab on same parent to deactivate it\n    const active = this._getActiveElem();\n    const hideEvent = active ? EventHandler.trigger(active, EVENT_HIDE$1, {\n      relatedTarget: innerElem\n    }) : null;\n    const showEvent = EventHandler.trigger(innerElem, EVENT_SHOW$1, {\n      relatedTarget: active\n    });\n    if (showEvent.defaultPrevented || hideEvent && hideEvent.defaultPrevented) {\n      return;\n    }\n    this._deactivate(active, innerElem);\n    this._activate(innerElem, active);\n  }\n\n  // Private\n  _activate(element, relatedElem) {\n    if (!element) {\n      return;\n    }\n    element.classList.add(CLASS_NAME_ACTIVE);\n    this._activate(SelectorEngine.getElementFromSelector(element)); // Search and activate/show the proper section\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.add(CLASS_NAME_SHOW$1);\n        return;\n      }\n      element.removeAttribute('tabindex');\n      element.setAttribute('aria-selected', true);\n      this._toggleDropDown(element, true);\n      EventHandler.trigger(element, EVENT_SHOWN$1, {\n        relatedTarget: relatedElem\n      });\n    };\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));\n  }\n  _deactivate(element, relatedElem) {\n    if (!element) {\n      return;\n    }\n    element.classList.remove(CLASS_NAME_ACTIVE);\n    element.blur();\n    this._deactivate(SelectorEngine.getElementFromSelector(element)); // Search and deactivate the shown section too\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.remove(CLASS_NAME_SHOW$1);\n        return;\n      }\n      element.setAttribute('aria-selected', false);\n      element.setAttribute('tabindex', '-1');\n      this._toggleDropDown(element, false);\n      EventHandler.trigger(element, EVENT_HIDDEN$1, {\n        relatedTarget: relatedElem\n      });\n    };\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));\n  }\n  _keydown(event) {\n    if (![ARROW_LEFT_KEY, ARROW_RIGHT_KEY, ARROW_UP_KEY, ARROW_DOWN_KEY, HOME_KEY, END_KEY].includes(event.key)) {\n      return;\n    }\n    event.stopPropagation(); // stopPropagation/preventDefault both added to support up/down keys without scrolling the page\n    event.preventDefault();\n    const children = this._getChildren().filter(element => !isDisabled(element));\n    let nextActiveElement;\n    if ([HOME_KEY, END_KEY].includes(event.key)) {\n      nextActiveElement = children[event.key === HOME_KEY ? 0 : children.length - 1];\n    } else {\n      const isNext = [ARROW_RIGHT_KEY, ARROW_DOWN_KEY].includes(event.key);\n      nextActiveElement = getNextActiveElement(children, event.target, isNext, true);\n    }\n    if (nextActiveElement) {\n      nextActiveElement.focus({\n        preventScroll: true\n      });\n      Tab.getOrCreateInstance(nextActiveElement).show();\n    }\n  }\n  _getChildren() {\n    // collection of inner elements\n    return SelectorEngine.find(SELECTOR_INNER_ELEM, this._parent);\n  }\n  _getActiveElem() {\n    return this._getChildren().find(child => this._elemIsActive(child)) || null;\n  }\n  _setInitialAttributes(parent, children) {\n    this._setAttributeIfNotExists(parent, 'role', 'tablist');\n    for (const child of children) {\n      this._setInitialAttributesOnChild(child);\n    }\n  }\n  _setInitialAttributesOnChild(child) {\n    child = this._getInnerElement(child);\n    const isActive = this._elemIsActive(child);\n    const outerElem = this._getOuterElement(child);\n    child.setAttribute('aria-selected', isActive);\n    if (outerElem !== child) {\n      this._setAttributeIfNotExists(outerElem, 'role', 'presentation');\n    }\n    if (!isActive) {\n      child.setAttribute('tabindex', '-1');\n    }\n    this._setAttributeIfNotExists(child, 'role', 'tab');\n\n    // set attributes to the related panel too\n    this._setInitialAttributesOnTargetPanel(child);\n  }\n  _setInitialAttributesOnTargetPanel(child) {\n    const target = SelectorEngine.getElementFromSelector(child);\n    if (!target) {\n      return;\n    }\n    this._setAttributeIfNotExists(target, 'role', 'tabpanel');\n    if (child.id) {\n      this._setAttributeIfNotExists(target, 'aria-labelledby', `${child.id}`);\n    }\n  }\n  _toggleDropDown(element, open) {\n    const outerElem = this._getOuterElement(element);\n    if (!outerElem.classList.contains(CLASS_DROPDOWN)) {\n      return;\n    }\n    const toggle = (selector, className) => {\n      const element = SelectorEngine.findOne(selector, outerElem);\n      if (element) {\n        element.classList.toggle(className, open);\n      }\n    };\n    toggle(SELECTOR_DROPDOWN_TOGGLE, CLASS_NAME_ACTIVE);\n    toggle(SELECTOR_DROPDOWN_MENU, CLASS_NAME_SHOW$1);\n    outerElem.setAttribute('aria-expanded', open);\n  }\n  _setAttributeIfNotExists(element, attribute, value) {\n    if (!element.hasAttribute(attribute)) {\n      element.setAttribute(attribute, value);\n    }\n  }\n  _elemIsActive(elem) {\n    return elem.classList.contains(CLASS_NAME_ACTIVE);\n  }\n\n  // Try to get the inner element (usually the .nav-link)\n  _getInnerElement(elem) {\n    return elem.matches(SELECTOR_INNER_ELEM) ? elem : SelectorEngine.findOne(SELECTOR_INNER_ELEM, elem);\n  }\n\n  // Try to get the outer element (usually the .nav-item)\n  _getOuterElement(elem) {\n    return elem.closest(SELECTOR_OUTER) || elem;\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tab.getOrCreateInstance(this);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault();\n  }\n  if (isDisabled(this)) {\n    return;\n  }\n  Tab.getOrCreateInstance(this).show();\n});\n\n/**\n * Initialize on focus\n */\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const element of SelectorEngine.find(SELECTOR_DATA_TOGGLE_ACTIVE)) {\n    Tab.getOrCreateInstance(element);\n  }\n});\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tab);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME = 'toast';\nconst DATA_KEY = 'bs.toast';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`;\nconst EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`;\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`;\nconst EVENT_FOCUSOUT = `focusout${EVENT_KEY}`;\nconst EVENT_HIDE = `hide${EVENT_KEY}`;\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`;\nconst EVENT_SHOW = `show${EVENT_KEY}`;\nconst EVENT_SHOWN = `shown${EVENT_KEY}`;\nconst CLASS_NAME_FADE = 'fade';\nconst CLASS_NAME_HIDE = 'hide'; // @deprecated - kept here only for backwards compatibility\nconst CLASS_NAME_SHOW = 'show';\nconst CLASS_NAME_SHOWING = 'showing';\nconst DefaultType = {\n  animation: 'boolean',\n  autohide: 'boolean',\n  delay: 'number'\n};\nconst Default = {\n  animation: true,\n  autohide: true,\n  delay: 5000\n};\n\n/**\n * Class definition\n */\n\nclass Toast extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._timeout = null;\n    this._hasMouseInteraction = false;\n    this._hasKeyboardInteraction = false;\n    this._setListeners();\n  }\n\n  // Getters\n  static get Default() {\n    return Default;\n  }\n  static get DefaultType() {\n    return DefaultType;\n  }\n  static get NAME() {\n    return NAME;\n  }\n\n  // Public\n  show() {\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW);\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._clearTimeout();\n    if (this._config.animation) {\n      this._element.classList.add(CLASS_NAME_FADE);\n    }\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_SHOWING);\n      EventHandler.trigger(this._element, EVENT_SHOWN);\n      this._maybeScheduleHide();\n    };\n    this._element.classList.remove(CLASS_NAME_HIDE); // @deprecated\n    reflow(this._element);\n    this._element.classList.add(CLASS_NAME_SHOW, CLASS_NAME_SHOWING);\n    this._queueCallback(complete, this._element, this._config.animation);\n  }\n  hide() {\n    if (!this.isShown()) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    const complete = () => {\n      this._element.classList.add(CLASS_NAME_HIDE); // @deprecated\n      this._element.classList.remove(CLASS_NAME_SHOWING, CLASS_NAME_SHOW);\n      EventHandler.trigger(this._element, EVENT_HIDDEN);\n    };\n    this._element.classList.add(CLASS_NAME_SHOWING);\n    this._queueCallback(complete, this._element, this._config.animation);\n  }\n  dispose() {\n    this._clearTimeout();\n    if (this.isShown()) {\n      this._element.classList.remove(CLASS_NAME_SHOW);\n    }\n    super.dispose();\n  }\n  isShown() {\n    return this._element.classList.contains(CLASS_NAME_SHOW);\n  }\n\n  // Private\n\n  _maybeScheduleHide() {\n    if (!this._config.autohide) {\n      return;\n    }\n    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {\n      return;\n    }\n    this._timeout = setTimeout(() => {\n      this.hide();\n    }, this._config.delay);\n  }\n  _onInteraction(event, isInteracting) {\n    switch (event.type) {\n      case 'mouseover':\n      case 'mouseout':\n        {\n          this._hasMouseInteraction = isInteracting;\n          break;\n        }\n      case 'focusin':\n      case 'focusout':\n        {\n          this._hasKeyboardInteraction = isInteracting;\n          break;\n        }\n    }\n    if (isInteracting) {\n      this._clearTimeout();\n      return;\n    }\n    const nextElement = event.relatedTarget;\n    if (this._element === nextElement || this._element.contains(nextElement)) {\n      return;\n    }\n    this._maybeScheduleHide();\n  }\n  _setListeners() {\n    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true));\n    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false));\n    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true));\n    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false));\n  }\n  _clearTimeout() {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Toast.getOrCreateInstance(this, config);\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n        data[config](this);\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Toast);\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Toast);\n\n\n//# sourceMappingURL=bootstrap.esm.js.map\n\n;// CONCATENATED MODULE: ./frontend/index.js\n\n\n\n\nvar root = (0,client/* createRoot */.s)(document.getElementById('root'));\nroot.render( /*#__PURE__*/react.createElement(react.StrictMode, null, /*#__PURE__*/react.createElement(frontend_App, null)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///446\n")},68:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.authBody{display:flex;flex-direction:column;justify-content:center;align-items:center}div.usernameRow{width:100%;display:flex;flex-direction:row;margin-bottom:1%}label.usernameLabel{margin-left:auto;margin-right:1%}input.usernameInput{margin-left:1%;margin-right:auto}div.passwordRow{width:100%;display:flex;flex-direction:row;margin-bottom:1%}label.passwordLabel{margin-left:auto;margin-right:1%}input.passwordInput{margin-left:1%;margin-right:auto}div.submitRow{width:100%;display:flex;flex-direction:row;margin-bottom:1%}button.login{margin-left:auto;margin-right:1%}button.register{margin-left:1%;margin-right:auto}`, "",{"version":3,"sources":["webpack://./frontend/styles/auth.scss"],"names":[],"mappings":"AACA,aACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CAIJ,gBACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA,CAGJ,oBACI,gBAAA,CACA,eAAA,CAGJ,oBACI,cAAA,CACA,iBAAA,CAGJ,gBACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA,CAGJ,oBACI,gBAAA,CACA,eAAA,CAGJ,oBACI,cAAA,CACA,iBAAA,CAEJ,cACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA,CAGJ,aACI,gBAAA,CACA,eAAA,CAGJ,gBACI,cAAA,CACA,iBAAA","sourcesContent":["\\r\\ndiv.authBody {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    // width: fit-content;\\r\\n};\\r\\n\\r\\ndiv.usernameRow {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    margin-bottom: 1%;\\r\\n};\\r\\n\\r\\nlabel.usernameLabel {\\r\\n    margin-left: auto;\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\ninput.usernameInput {\\r\\n    margin-left: 1%;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\ndiv.passwordRow {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    margin-bottom: 1%;\\r\\n};\\r\\n\\r\\nlabel.passwordLabel {\\r\\n    margin-left: auto;\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\ninput.passwordInput{\\r\\n    margin-left: 1%;\\r\\n    margin-right: auto;}\\r\\n\\r\\ndiv.submitRow {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    margin-bottom: 1%;\\r\\n}\\r\\n\\r\\nbutton.login {\\r\\n    margin-left: auto;\\r\\n    margin-right: 1%;\\r\\n}\\r\\n\\r\\nbutton.register {\\r\\n    margin-left: 1%;\\r\\n    margin-right: auto;\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQzZHO0FBQ2pCO0FBQzVGLDhCQUE4QixtRkFBMkIsQ0FBQyw0RkFBcUM7QUFDL0Y7QUFDQSx1REFBdUQsYUFBYSxzQkFBc0IsdUJBQXVCLG1CQUFtQixnQkFBZ0IsV0FBVyxhQUFhLG1CQUFtQixpQkFBaUIsb0JBQW9CLGlCQUFpQixnQkFBZ0Isb0JBQW9CLGVBQWUsa0JBQWtCLGdCQUFnQixXQUFXLGFBQWEsbUJBQW1CLGlCQUFpQixvQkFBb0IsaUJBQWlCLGdCQUFnQixvQkFBb0IsZUFBZSxrQkFBa0IsY0FBYyxXQUFXLGFBQWEsbUJBQW1CLGlCQUFpQixhQUFhLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLGVBQWUsa0JBQWtCLE9BQU8sNmRBQTZkLHNCQUFzQiwrQkFBK0IsZ0NBQWdDLDRCQUE0Qiw4QkFBOEIsTUFBTSx5QkFBeUIsb0JBQW9CLHNCQUFzQiw0QkFBNEIsMEJBQTBCLE1BQU0sNkJBQTZCLDBCQUEwQix5QkFBeUIsS0FBSyw2QkFBNkIsd0JBQXdCLDJCQUEyQixLQUFLLHlCQUF5QixvQkFBb0Isc0JBQXNCLDRCQUE0QiwwQkFBMEIsTUFBTSw2QkFBNkIsMEJBQTBCLHlCQUF5QixLQUFLLDRCQUE0Qix3QkFBd0IsNEJBQTRCLHVCQUF1QixvQkFBb0Isc0JBQXNCLDRCQUE0QiwwQkFBMEIsS0FBSyxzQkFBc0IsMEJBQTBCLHlCQUF5QixLQUFLLHlCQUF5Qix3QkFBd0IsMkJBQTJCLEtBQUssbUJBQW1CO0FBQzdvRTtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvYXV0aC5zY3NzPzE4ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGRpdi5hdXRoQm9keXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfWRpdi51c2VybmFtZVJvd3t3aWR0aDoxMDAlO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7bWFyZ2luLWJvdHRvbToxJX1sYWJlbC51c2VybmFtZUxhYmVse21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OjElfWlucHV0LnVzZXJuYW1lSW5wdXR7bWFyZ2luLWxlZnQ6MSU7bWFyZ2luLXJpZ2h0OmF1dG99ZGl2LnBhc3N3b3JkUm93e3dpZHRoOjEwMCU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdzttYXJnaW4tYm90dG9tOjElfWxhYmVsLnBhc3N3b3JkTGFiZWx7bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6MSV9aW5wdXQucGFzc3dvcmRJbnB1dHttYXJnaW4tbGVmdDoxJTttYXJnaW4tcmlnaHQ6YXV0b31kaXYuc3VibWl0Um93e3dpZHRoOjEwMCU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdzttYXJnaW4tYm90dG9tOjElfWJ1dHRvbi5sb2dpbnttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDoxJX1idXR0b24ucmVnaXN0ZXJ7bWFyZ2luLWxlZnQ6MSU7bWFyZ2luLXJpZ2h0OmF1dG99YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9mcm9udGVuZC9zdHlsZXMvYXV0aC5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUNBLGFBQ0ksWUFBQSxDQUNBLHFCQUFBLENBQ0Esc0JBQUEsQ0FDQSxrQkFBQSxDQUlKLGdCQUNJLFVBQUEsQ0FDQSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSxnQkFBQSxDQUdKLG9CQUNJLGdCQUFBLENBQ0EsZUFBQSxDQUdKLG9CQUNJLGNBQUEsQ0FDQSxpQkFBQSxDQUdKLGdCQUNJLFVBQUEsQ0FDQSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSxnQkFBQSxDQUdKLG9CQUNJLGdCQUFBLENBQ0EsZUFBQSxDQUdKLG9CQUNJLGNBQUEsQ0FDQSxpQkFBQSxDQUVKLGNBQ0ksVUFBQSxDQUNBLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLGdCQUFBLENBR0osYUFDSSxnQkFBQSxDQUNBLGVBQUEsQ0FHSixnQkFDSSxjQUFBLENBQ0EsaUJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxyXFxuZGl2LmF1dGhCb2R5IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIC8vIHdpZHRoOiBmaXQtY29udGVudDtcXHJcXG59O1xcclxcblxcclxcbmRpdi51c2VybmFtZVJvdyB7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcXHJcXG59O1xcclxcblxcclxcbmxhYmVsLnVzZXJuYW1lTGFiZWwge1xcclxcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiAxJTtcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXQudXNlcm5hbWVJbnB1dCB7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAxJTtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYucGFzc3dvcmRSb3cge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XFxyXFxufTtcXHJcXG5cXHJcXG5sYWJlbC5wYXNzd29yZExhYmVsIHtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxyXFxuICAgIG1hcmdpbi1yaWdodDogMSU7XFxyXFxufVxcclxcblxcclxcbmlucHV0LnBhc3N3b3JkSW5wdXR7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAxJTtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO31cXHJcXG5cXHJcXG5kaXYuc3VibWl0Um93IHtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDElO1xcclxcbn1cXHJcXG5cXHJcXG5idXR0b24ubG9naW4ge1xcclxcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiAxJTtcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uLnJlZ2lzdGVyIHtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDElO1xcclxcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///68\n')},730:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.basePage{width:100vw;height:100vh;background-color:#d9d9d9;overflow-y:scroll}@media screen and (min-width: 900px){div.basePage{background-color:#fff;height:95vh;padding-top:5vh;overflow-y:auto}}div.baseBody{height:calc(100vh - 10px);width:auto;padding:5px}@media only screen and (min-width: 900px){div.baseBody{height:500px;position:relative;width:900px;border:solid #000 1px;border-radius:5px;margin:auto;background-color:#d9d9d9}}`, "",{"version":3,"sources":["webpack://./frontend/styles/base.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAIA,aACI,WAAA,CACA,YAAA,CACA,wBCFI,CDGJ,iBAAA,CACA,qCALJ,aAMQ,qBCNC,CDOD,WAAA,CACA,eAAA,CACA,eAAA,CAAA,CAIR,aACI,yBAAA,CACA,UAAA,CACA,WCJK,CDKL,0CAJJ,aAKQ,YAAA,CACA,iBAAA,CACA,WAAA,CACA,qBAAA,CACA,iBAAA,CACA,WAAA,CACA,wBCvBA,CAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n@use \'sass:map\';\\r\\n\\r\\ndiv.basePage {\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n    background-color: vars.$page0;\\r\\n    overflow-y: scroll;\\r\\n    @media screen and (min-width: map.get(vars.$breakpoints, \'des\')) {\\r\\n        background-color: vars.$pagen1;\\r\\n        height: 95vh;\\r\\n        padding-top: 5vh;\\r\\n        overflow-y: auto;\\r\\n    }\\r\\n}\\r\\n\\r\\ndiv.baseBody {\\r\\n    height: calc(100vh - 2*vars.$spacer);\\r\\n    width: auto;\\r\\n    padding: vars.$spacer;\\r\\n    @media only screen and (min-width: map.get(vars.$breakpoints, \'des\')) {\\r\\n        height: 500px;\\r\\n        position: relative;\\r\\n        width: 900px;\\r\\n        border: solid black 1px;\\r\\n        border-radius: 5px;\\r\\n        margin: auto;\\r\\n        background-color: vars.$page0;\\r\\n    }\\r\\n}\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsdURBQXVELFlBQVksYUFBYSx5QkFBeUIsa0JBQWtCLHFDQUFxQyxhQUFhLHNCQUFzQixZQUFZLGdCQUFnQixpQkFBaUIsYUFBYSwwQkFBMEIsV0FBVyxZQUFZLDBDQUEwQyxhQUFhLGFBQWEsa0JBQWtCLFlBQVksc0JBQXNCLGtCQUFrQixZQUFZLDBCQUEwQixPQUFPLDBZQUEwWSxvQkFBb0Isc0JBQXNCLHFCQUFxQixzQkFBc0Isc0NBQXNDLDJCQUEyQiwwRUFBMEUsMkNBQTJDLHlCQUF5Qiw2QkFBNkIsNkJBQTZCLFNBQVMsS0FBSyxzQkFBc0IsNkNBQTZDLG9CQUFvQiw4QkFBOEIsK0VBQStFLDBCQUEwQiwrQkFBK0IseUJBQXlCLG9DQUFvQywrQkFBK0IseUJBQXlCLDBDQUEwQyxTQUFTLEtBQUssbUNBQW1DLHFCQUFxQixxQkFBcUIsb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLGlCQUFpQiw2QkFBNkIscUVBQXFFLG1DQUFtQyx5RUFBeUUsK0JBQStCO0FBQ2hpRTtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvYmFzZS5zY3NzPzVkYzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGRpdi5iYXNlUGFnZXt3aWR0aDoxMDB2dztoZWlnaHQ6MTAwdmg7YmFja2dyb3VuZC1jb2xvcjojZDlkOWQ5O292ZXJmbG93LXk6c2Nyb2xsfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDkwMHB4KXtkaXYuYmFzZVBhZ2V7YmFja2dyb3VuZC1jb2xvcjojZmZmO2hlaWdodDo5NXZoO3BhZGRpbmctdG9wOjV2aDtvdmVyZmxvdy15OmF1dG99fWRpdi5iYXNlQm9keXtoZWlnaHQ6Y2FsYygxMDB2aCAtIDEwcHgpO3dpZHRoOmF1dG87cGFkZGluZzo1cHh9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5MDBweCl7ZGl2LmJhc2VCb2R5e2hlaWdodDo1MDBweDtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDo5MDBweDtib3JkZXI6c29saWQgIzAwMCAxcHg7Ym9yZGVyLXJhZGl1czo1cHg7bWFyZ2luOmF1dG87YmFja2dyb3VuZC1jb2xvcjojZDlkOWQ5fX1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy9iYXNlLnNjc3NcIixcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy92YXJzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBSUEsYUFDSSxXQUFBLENBQ0EsWUFBQSxDQUNBLHdCQ0ZJLENER0osaUJBQUEsQ0FDQSxxQ0FMSixhQU1RLHFCQ05DLENET0QsV0FBQSxDQUNBLGVBQUEsQ0FDQSxlQUFBLENBQUEsQ0FJUixhQUNJLHlCQUFBLENBQ0EsVUFBQSxDQUNBLFdDSkssQ0RLTCwwQ0FKSixhQUtRLFlBQUEsQ0FDQSxpQkFBQSxDQUNBLFdBQUEsQ0FDQSxxQkFBQSxDQUNBLGlCQUFBLENBQ0EsV0FBQSxDQUNBLHdCQ3ZCQSxDQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcclxcbkB1c2UgJ3ZhcnMnO1xcclxcbkB1c2UgJ3Nhc3M6bWFwJztcXHJcXG5cXHJcXG5kaXYuYmFzZVBhZ2Uge1xcclxcbiAgICB3aWR0aDogMTAwdnc7XFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcnMuJHBhZ2UwO1xcclxcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XFxyXFxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IG1hcC5nZXQodmFycy4kYnJlYWtwb2ludHMsICdkZXMnKSkge1xcclxcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFycy4kcGFnZW4xO1xcclxcbiAgICAgICAgaGVpZ2h0OiA5NXZoO1xcclxcbiAgICAgICAgcGFkZGluZy10b3A6IDV2aDtcXHJcXG4gICAgICAgIG92ZXJmbG93LXk6IGF1dG87XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXFxyXFxuZGl2LmJhc2VCb2R5IHtcXHJcXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMip2YXJzLiRzcGFjZXIpO1xcclxcbiAgICB3aWR0aDogYXV0bztcXHJcXG4gICAgcGFkZGluZzogdmFycy4kc3BhY2VyO1xcclxcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IG1hcC5nZXQodmFycy4kYnJlYWtwb2ludHMsICdkZXMnKSkge1xcclxcbiAgICAgICAgaGVpZ2h0OiA1MDBweDtcXHJcXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gICAgICAgIHdpZHRoOiA5MDBweDtcXHJcXG4gICAgICAgIGJvcmRlcjogc29saWQgYmxhY2sgMXB4O1xcclxcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xcclxcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFycy4kcGFnZTA7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuXCIsXCJcXHJcXG4vLyBjb2xvcnNcXHJcXG4keW91OiBibHVlO1xcclxcbiRwbGF5ZXI6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2VuMTogI2ZmZmZmZjtcXHJcXG4kcGFnZTA6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2UxOiAjZDBkMGQwO1xcclxcbiRwYWdlMjogIzk1OTU5NTtcXHJcXG4kYWxlcnQ6ICNlYzBkMGQ7XFxyXFxuJGRhcms6IGJsYWNrO1xcclxcblxcclxcbiRidXR0b25Cb3JkZXI6IGJsYWNrO1xcclxcblxcclxcbiRjb2xvcnM6ICgncGFnZTEnOiAkcGFnZTEsICdwYWdlMic6ICRwYWdlMiwgJ2FsZXJ0JzogJGFsZXJ0KTtcXHJcXG5cXHJcXG4vLyBsZW5ndGhzXFxyXFxuJHNwYWNlcjogNXB4O1xcclxcblxcclxcbi8vIHdpZHRoc1xcclxcbiRicmVha3BvaW50czogKCcnOiAwcHgsICdob3InOiA1MDBweCwgJ2Rlcyc6IDkwMHB4KTtcXHJcXG5cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///730\n')},620:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.boardContainer{position:absolute;width:100%;height:100%;left:0;top:0;background-color:gray;z-index:0}`, "",{"version":3,"sources":["webpack://./frontend/styles/board.scss"],"names":[],"mappings":"AACA,mBACC,iBAAA,CACA,UAAA,CACA,WAAA,CACA,MAAA,CACA,KAAA,CACA,qBAAA,CACA,SAAA","sourcesContent":["\\r\\ndiv.boardContainer {\\r\\n\\tposition: absolute;\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\tbackground-color: grey;\\r\\n\\tz-index: 0;\\r\\n}\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsNkRBQTZELGtCQUFrQixXQUFXLFlBQVksT0FBTyxNQUFNLHNCQUFzQixVQUFVLE9BQU8sa05BQWtOLHlCQUF5QixrQkFBa0IsbUJBQW1CLGNBQWMsYUFBYSw2QkFBNkIsaUJBQWlCLEtBQUssdUJBQXVCO0FBQy9nQjtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvYm9hcmQuc2Nzcz8yYzc5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBkaXYuYm9hcmRDb250YWluZXJ7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjA7YmFja2dyb3VuZC1jb2xvcjpncmF5O3otaW5kZXg6MH1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy9ib2FyZC5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUNBLG1CQUNDLGlCQUFBLENBQ0EsVUFBQSxDQUNBLFdBQUEsQ0FDQSxNQUFBLENBQ0EsS0FBQSxDQUNBLHFCQUFBLENBQ0EsU0FBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJcXHJcXG5kaXYuYm9hcmRDb250YWluZXIge1xcclxcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG5cXHR3aWR0aDogMTAwJTtcXHJcXG5cXHRoZWlnaHQ6IDEwMCU7XFxyXFxuXFx0bGVmdDogMDtcXHJcXG5cXHR0b3A6IDA7XFxyXFxuXFx0YmFja2dyb3VuZC1jb2xvcjogZ3JleTtcXHJcXG5cXHR6LWluZGV4OiAwO1xcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///620\n')},346:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `button.btn{padding:2px;margin:0;background-color:rgba(0,0,0,0);border:none;height:fit-content;width:fit-content}button.btnI{border:none}button.btnT{border-radius:5px;border:solid #000 1px;background-color:#959595;margin:1px}button.btnC{width:20px;height:20px;border-radius:50%;border:solid #000 1px;background-color:#959595;position:relative}button.btnC.checked::before{position:absolute;border-radius:50%;top:20%;left:20%;width:60%;height:60%;background-color:#ff0;box-shadow:0 0 4px 4px #ff0;content:""}`, "",{"version":3,"sources":["webpack://./frontend/styles/button.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAGA,WACI,WAAA,CACA,QAAA,CACA,8BAAA,CACA,WAAA,CACA,kBAAA,CACA,iBAAA,CAGJ,YACI,WAAA,CAGJ,YACI,iBAAA,CACA,qBAAA,CACA,wBCZI,CDaJ,UAAA,CAGJ,YACI,UAAA,CACA,WAAA,CACA,iBAAA,CACA,qBAAA,CACA,wBCrBI,CDsBJ,iBAAA,CAGJ,4BACI,iBAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,qBAAA,CACA,2BAAA,CACA,UAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\nbutton.btn {\\r\\n    padding: 2px;\\r\\n    margin: 0;\\r\\n    background-color: transparent;\\r\\n    border: none;\\r\\n    height: fit-content;\\r\\n    width: fit-content;\\r\\n}\\r\\n\\r\\nbutton.btnI {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\nbutton.btnT {\\r\\n    border-radius: 5px;\\r\\n    border: solid vars.$buttonBorder 1px;\\r\\n    background-color: vars.$page2;\\r\\n    margin: 1px;\\r\\n}\\r\\n\\r\\nbutton.btnC {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    border-radius: 50%;\\r\\n    border: solid vars.$buttonBorder 1px;\\r\\n    background-color: vars.$page2;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\nbutton.btnC.checked::before {\\r\\n    position: absolute;\\r\\n    border-radius: 50%;\\r\\n    top: 20%;\\r\\n    left: 20%;\\r\\n    width: 60%;\\r\\n    height: 60%;\\r\\n    background-color: yellow;\\r\\n    box-shadow: 0 0 4px 4px yellow;\\r\\n    content: \'\';\\r\\n}","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQ2LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EscURBQXFELFlBQVksU0FBUywrQkFBK0IsWUFBWSxtQkFBbUIsa0JBQWtCLFlBQVksWUFBWSxZQUFZLGtCQUFrQixzQkFBc0IseUJBQXlCLFdBQVcsWUFBWSxXQUFXLFlBQVksa0JBQWtCLHNCQUFzQix5QkFBeUIsa0JBQWtCLDRCQUE0QixrQkFBa0Isa0JBQWtCLFFBQVEsU0FBUyxVQUFVLFdBQVcsc0JBQXNCLDRCQUE0QixXQUFXLE9BQU8sbWRBQW1kLG9CQUFvQixxQkFBcUIsa0JBQWtCLHNDQUFzQyxxQkFBcUIsNEJBQTRCLDJCQUEyQixLQUFLLHFCQUFxQixxQkFBcUIsS0FBSyxxQkFBcUIsMkJBQTJCLDZDQUE2QyxzQ0FBc0Msb0JBQW9CLEtBQUsscUJBQXFCLG9CQUFvQixxQkFBcUIsMkJBQTJCLDZDQUE2QyxzQ0FBc0MsMkJBQTJCLEtBQUsscUNBQXFDLDJCQUEyQiwyQkFBMkIsaUJBQWlCLGtCQUFrQixtQkFBbUIsb0JBQW9CLGlDQUFpQyx1Q0FBdUMsb0JBQW9CLEtBQUssK0JBQStCLHFCQUFxQixxQkFBcUIsb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLGlCQUFpQiw2QkFBNkIscUVBQXFFLG1DQUFtQyx5RUFBeUUsK0JBQStCO0FBQ251RTtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvYnV0dG9uLnNjc3M/MDc0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgYnV0dG9uLmJ0bntwYWRkaW5nOjJweDttYXJnaW46MDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMCk7Ym9yZGVyOm5vbmU7aGVpZ2h0OmZpdC1jb250ZW50O3dpZHRoOmZpdC1jb250ZW50fWJ1dHRvbi5idG5Je2JvcmRlcjpub25lfWJ1dHRvbi5idG5Ue2JvcmRlci1yYWRpdXM6NXB4O2JvcmRlcjpzb2xpZCAjMDAwIDFweDtiYWNrZ3JvdW5kLWNvbG9yOiM5NTk1OTU7bWFyZ2luOjFweH1idXR0b24uYnRuQ3t3aWR0aDoyMHB4O2hlaWdodDoyMHB4O2JvcmRlci1yYWRpdXM6NTAlO2JvcmRlcjpzb2xpZCAjMDAwIDFweDtiYWNrZ3JvdW5kLWNvbG9yOiM5NTk1OTU7cG9zaXRpb246cmVsYXRpdmV9YnV0dG9uLmJ0bkMuY2hlY2tlZDo6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO2JvcmRlci1yYWRpdXM6NTAlO3RvcDoyMCU7bGVmdDoyMCU7d2lkdGg6NjAlO2hlaWdodDo2MCU7YmFja2dyb3VuZC1jb2xvcjojZmYwO2JveC1zaGFkb3c6MCAwIDRweCA0cHggI2ZmMDtjb250ZW50OlwiXCJ9YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9mcm9udGVuZC9zdHlsZXMvYnV0dG9uLnNjc3NcIixcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy92YXJzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBR0EsV0FDSSxXQUFBLENBQ0EsUUFBQSxDQUNBLDhCQUFBLENBQ0EsV0FBQSxDQUNBLGtCQUFBLENBQ0EsaUJBQUEsQ0FHSixZQUNJLFdBQUEsQ0FHSixZQUNJLGlCQUFBLENBQ0EscUJBQUEsQ0FDQSx3QkNaSSxDRGFKLFVBQUEsQ0FHSixZQUNJLFVBQUEsQ0FDQSxXQUFBLENBQ0EsaUJBQUEsQ0FDQSxxQkFBQSxDQUNBLHdCQ3JCSSxDRHNCSixpQkFBQSxDQUdKLDRCQUNJLGlCQUFBLENBQ0EsaUJBQUEsQ0FDQSxPQUFBLENBQ0EsUUFBQSxDQUNBLFNBQUEsQ0FDQSxVQUFBLENBQ0EscUJBQUEsQ0FDQSwyQkFBQSxDQUNBLFVBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxyXFxuQHVzZSAndmFycyc7XFxyXFxuXFxyXFxuYnV0dG9uLmJ0biB7XFxyXFxuICAgIHBhZGRpbmc6IDJweDtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xcclxcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbi5idG5JIHtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG5idXR0b24uYnRuVCB7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgYm9yZGVyOiBzb2xpZCB2YXJzLiRidXR0b25Cb3JkZXIgMXB4O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXJzLiRwYWdlMjtcXHJcXG4gICAgbWFyZ2luOiAxcHg7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbi5idG5DIHtcXHJcXG4gICAgd2lkdGg6IDIwcHg7XFxyXFxuICAgIGhlaWdodDogMjBweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xcclxcbiAgICBib3JkZXI6IHNvbGlkIHZhcnMuJGJ1dHRvbkJvcmRlciAxcHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcnMuJHBhZ2UyO1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbi5idG5DLmNoZWNrZWQ6OmJlZm9yZSB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xcclxcbiAgICB0b3A6IDIwJTtcXHJcXG4gICAgbGVmdDogMjAlO1xcclxcbiAgICB3aWR0aDogNjAlO1xcclxcbiAgICBoZWlnaHQ6IDYwJTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xcclxcbiAgICBib3gtc2hhZG93OiAwIDAgNHB4IDRweCB5ZWxsb3c7XFxyXFxuICAgIGNvbnRlbnQ6ICcnO1xcclxcbn1cIixcIlxcclxcbi8vIGNvbG9yc1xcclxcbiR5b3U6IGJsdWU7XFxyXFxuJHBsYXllcjogI2Q5ZDlkOTtcXHJcXG4kcGFnZW4xOiAjZmZmZmZmO1xcclxcbiRwYWdlMDogI2Q5ZDlkOTtcXHJcXG4kcGFnZTE6ICNkMGQwZDA7XFxyXFxuJHBhZ2UyOiAjOTU5NTk1O1xcclxcbiRhbGVydDogI2VjMGQwZDtcXHJcXG4kZGFyazogYmxhY2s7XFxyXFxuXFxyXFxuJGJ1dHRvbkJvcmRlcjogYmxhY2s7XFxyXFxuXFxyXFxuJGNvbG9yczogKCdwYWdlMSc6ICRwYWdlMSwgJ3BhZ2UyJzogJHBhZ2UyLCAnYWxlcnQnOiAkYWxlcnQpO1xcclxcblxcclxcbi8vIGxlbmd0aHNcXHJcXG4kc3BhY2VyOiA1cHg7XFxyXFxuXFxyXFxuLy8gd2lkdGhzXFxyXFxuJGJyZWFrcG9pbnRzOiAoJyc6IDBweCwgJ2hvcic6IDUwMHB4LCAnZGVzJzogOTAwcHgpO1xcclxcblxcclxcblxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///346\n')},18:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.chatBorder{background-color:#fff;height:100%;border:solid 2px #000;display:flex;flex-direction:column}div.chatMessages{flex-shrink:1;overflow-y:scroll;margin-bottom:auto;display:flex;flex-direction:column}div.chatMessageWrapper{display:flex;flex-direction:column;align-items:baseline}div.chatMessageWrapper.message{align-self:baseline}div.chatMessageWrapper.reply{align-self:end}div.chatMessageBubble{margin:5px;padding:3px;width:fit-content;border-radius:5px;box-shadow:1px 1px 3px #000}div.chatMessageWrapper.message div.chatMessageBubble{border:solid 1px #d0d0d0;background-color:#d9d9d9;margin-right:20px}div.chatMessageWrapper.reply div.chatMessageBubble{border:solid 1px #000;margin-left:20px;background-color:blue}div.chatSendMessageRow{border-top:solid #000 1px;padding:5px;display:flex;justify-content:space-between}`, "",{"version":3,"sources":["webpack://./frontend/styles/chat.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAGA,eACI,qBAAA,CACA,WAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CAGJ,iBACI,aAAA,CACA,iBAAA,CACA,kBAAA,CACA,YAAA,CACA,qBAAA,CAGJ,uBACI,YAAA,CACA,qBAAA,CACA,oBAAA,CAGJ,+BACI,mBAAA,CAGJ,6BACI,cAAA,CAGJ,sBACI,UClBK,CDmBL,WAAA,CACA,iBAAA,CACA,iBAAA,CACA,2BAAA,CAIJ,qDACI,wBAAA,CACA,wBCzCK,CD0CL,iBAAA,CAGJ,mDACI,qBAAA,CACA,gBAAA,CACA,qBCjDE,CDoDN,uBACI,yBAAA,CACA,WCxCK,CDyCL,YAAA,CACA,6BAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\ndiv.chatBorder {\\r\\n    background-color: vars.$pagen1;\\r\\n    height: 100%;\\r\\n    border: solid 2px vars.$buttonBorder;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\ndiv.chatMessages {\\r\\n    flex-shrink: 1;\\r\\n    overflow-y: scroll;\\r\\n    margin-bottom: auto;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\ndiv.chatMessageWrapper {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: baseline;\\r\\n}\\r\\n\\r\\ndiv.chatMessageWrapper.message {\\r\\n    align-self: baseline;\\r\\n}\\r\\n\\r\\ndiv.chatMessageWrapper.reply {\\r\\n    align-self: end;\\r\\n}\\r\\n\\r\\ndiv.chatMessageBubble {\\r\\n    margin: vars.$spacer;\\r\\n    padding: 3px;\\r\\n    width: fit-content;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: 1px 1px 3px black;\\r\\n}\\r\\n\\r\\n\\r\\ndiv.chatMessageWrapper.message div.chatMessageBubble {\\r\\n    border: solid 1px vars.$page1;\\r\\n    background-color: vars.$player;\\r\\n    margin-right: 4*vars.$spacer;\\r\\n}\\r\\n\\r\\ndiv.chatMessageWrapper.reply div.chatMessageBubble {\\r\\n    border: solid 1px vars.$dark;\\r\\n    margin-left: 4*vars.$spacer;\\r\\n    background-color: vars.$you;\\r\\n}\\r\\n\\r\\ndiv.chatSendMessageRow{\\r\\n    border-top: solid vars.$dark 1px;\\r\\n    padding: vars.$spacer;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQzZHO0FBQ2pCO0FBQzVGLDhCQUE4QixtRkFBMkIsQ0FBQyw0RkFBcUM7QUFDL0Y7QUFDQSx5REFBeUQsc0JBQXNCLFlBQVksc0JBQXNCLGFBQWEsc0JBQXNCLGlCQUFpQixjQUFjLGtCQUFrQixtQkFBbUIsYUFBYSxzQkFBc0IsdUJBQXVCLGFBQWEsc0JBQXNCLHFCQUFxQiwrQkFBK0Isb0JBQW9CLDZCQUE2QixlQUFlLHNCQUFzQixXQUFXLFlBQVksa0JBQWtCLGtCQUFrQiw0QkFBNEIscURBQXFELHlCQUF5Qix5QkFBeUIsa0JBQWtCLG1EQUFtRCxzQkFBc0IsaUJBQWlCLHNCQUFzQix1QkFBdUIsMEJBQTBCLFlBQVksYUFBYSw4QkFBOEIsT0FBTyxnaUJBQWdpQix3QkFBd0IsdUNBQXVDLHFCQUFxQiw2Q0FBNkMsc0JBQXNCLCtCQUErQixLQUFLLDBCQUEwQix1QkFBdUIsMkJBQTJCLDRCQUE0QixzQkFBc0IsK0JBQStCLEtBQUssZ0NBQWdDLHNCQUFzQiwrQkFBK0IsOEJBQThCLEtBQUssd0NBQXdDLDZCQUE2QixLQUFLLHNDQUFzQyx3QkFBd0IsS0FBSywrQkFBK0IsNkJBQTZCLHFCQUFxQiwyQkFBMkIsMkJBQTJCLHNDQUFzQyxLQUFLLGtFQUFrRSxzQ0FBc0MsdUNBQXVDLHFDQUFxQyxLQUFLLDREQUE0RCxxQ0FBcUMsb0NBQW9DLG9DQUFvQyxLQUFLLCtCQUErQix5Q0FBeUMsOEJBQThCLHNCQUFzQix1Q0FBdUMsS0FBSyxtQ0FBbUMscUJBQXFCLHFCQUFxQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0IsaUJBQWlCLDZCQUE2QixxRUFBcUUsbUNBQW1DLHlFQUF5RSwrQkFBK0I7QUFDNWtHO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL2Zyb250ZW5kL3N0eWxlcy9jaGF0LnNjc3M/Njk0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgZGl2LmNoYXRCb3JkZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmO2hlaWdodDoxMDAlO2JvcmRlcjpzb2xpZCAycHggIzAwMDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1ufWRpdi5jaGF0TWVzc2FnZXN7ZmxleC1zaHJpbms6MTtvdmVyZmxvdy15OnNjcm9sbDttYXJnaW4tYm90dG9tOmF1dG87ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn1kaXYuY2hhdE1lc3NhZ2VXcmFwcGVye2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6YmFzZWxpbmV9ZGl2LmNoYXRNZXNzYWdlV3JhcHBlci5tZXNzYWdle2FsaWduLXNlbGY6YmFzZWxpbmV9ZGl2LmNoYXRNZXNzYWdlV3JhcHBlci5yZXBseXthbGlnbi1zZWxmOmVuZH1kaXYuY2hhdE1lc3NhZ2VCdWJibGV7bWFyZ2luOjVweDtwYWRkaW5nOjNweDt3aWR0aDpmaXQtY29udGVudDtib3JkZXItcmFkaXVzOjVweDtib3gtc2hhZG93OjFweCAxcHggM3B4ICMwMDB9ZGl2LmNoYXRNZXNzYWdlV3JhcHBlci5tZXNzYWdlIGRpdi5jaGF0TWVzc2FnZUJ1YmJsZXtib3JkZXI6c29saWQgMXB4ICNkMGQwZDA7YmFja2dyb3VuZC1jb2xvcjojZDlkOWQ5O21hcmdpbi1yaWdodDoyMHB4fWRpdi5jaGF0TWVzc2FnZVdyYXBwZXIucmVwbHkgZGl2LmNoYXRNZXNzYWdlQnViYmxle2JvcmRlcjpzb2xpZCAxcHggIzAwMDttYXJnaW4tbGVmdDoyMHB4O2JhY2tncm91bmQtY29sb3I6Ymx1ZX1kaXYuY2hhdFNlbmRNZXNzYWdlUm93e2JvcmRlci10b3A6c29saWQgIzAwMCAxcHg7cGFkZGluZzo1cHg7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL2NoYXQuc2Nzc1wiLFwid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL3ZhcnMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQSxlQUNJLHFCQUFBLENBQ0EsV0FBQSxDQUNBLHFCQUFBLENBQ0EsWUFBQSxDQUNBLHFCQUFBLENBR0osaUJBQ0ksYUFBQSxDQUNBLGlCQUFBLENBQ0Esa0JBQUEsQ0FDQSxZQUFBLENBQ0EscUJBQUEsQ0FHSix1QkFDSSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxvQkFBQSxDQUdKLCtCQUNJLG1CQUFBLENBR0osNkJBQ0ksY0FBQSxDQUdKLHNCQUNJLFVDbEJLLENEbUJMLFdBQUEsQ0FDQSxpQkFBQSxDQUNBLGlCQUFBLENBQ0EsMkJBQUEsQ0FJSixxREFDSSx3QkFBQSxDQUNBLHdCQ3pDSyxDRDBDTCxpQkFBQSxDQUdKLG1EQUNJLHFCQUFBLENBQ0EsZ0JBQUEsQ0FDQSxxQkNqREUsQ0RvRE4sdUJBQ0kseUJBQUEsQ0FDQSxXQ3hDSyxDRHlDTCxZQUFBLENBQ0EsNkJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxyXFxuQHVzZSAndmFycyc7XFxyXFxuXFxyXFxuZGl2LmNoYXRCb3JkZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXJzLiRwYWdlbjE7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgYm9yZGVyOiBzb2xpZCAycHggdmFycy4kYnV0dG9uQm9yZGVyO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuY2hhdE1lc3NhZ2VzIHtcXHJcXG4gICAgZmxleC1zaHJpbms6IDE7XFxyXFxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogYXV0bztcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LmNoYXRNZXNzYWdlV3JhcHBlciB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LmNoYXRNZXNzYWdlV3JhcHBlci5tZXNzYWdlIHtcXHJcXG4gICAgYWxpZ24tc2VsZjogYmFzZWxpbmU7XFxyXFxufVxcclxcblxcclxcbmRpdi5jaGF0TWVzc2FnZVdyYXBwZXIucmVwbHkge1xcclxcbiAgICBhbGlnbi1zZWxmOiBlbmQ7XFxyXFxufVxcclxcblxcclxcbmRpdi5jaGF0TWVzc2FnZUJ1YmJsZSB7XFxyXFxuICAgIG1hcmdpbjogdmFycy4kc3BhY2VyO1xcclxcbiAgICBwYWRkaW5nOiAzcHg7XFxyXFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCBibGFjaztcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuZGl2LmNoYXRNZXNzYWdlV3JhcHBlci5tZXNzYWdlIGRpdi5jaGF0TWVzc2FnZUJ1YmJsZSB7XFxyXFxuICAgIGJvcmRlcjogc29saWQgMXB4IHZhcnMuJHBhZ2UxO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXJzLiRwbGF5ZXI7XFxyXFxuICAgIG1hcmdpbi1yaWdodDogNCp2YXJzLiRzcGFjZXI7XFxyXFxufVxcclxcblxcclxcbmRpdi5jaGF0TWVzc2FnZVdyYXBwZXIucmVwbHkgZGl2LmNoYXRNZXNzYWdlQnViYmxlIHtcXHJcXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggdmFycy4kZGFyaztcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDQqdmFycy4kc3BhY2VyO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXJzLiR5b3U7XFxyXFxufVxcclxcblxcclxcbmRpdi5jaGF0U2VuZE1lc3NhZ2VSb3d7XFxyXFxuICAgIGJvcmRlci10b3A6IHNvbGlkIHZhcnMuJGRhcmsgMXB4O1xcclxcbiAgICBwYWRkaW5nOiB2YXJzLiRzcGFjZXI7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG59XFxyXFxuXCIsXCJcXHJcXG4vLyBjb2xvcnNcXHJcXG4keW91OiBibHVlO1xcclxcbiRwbGF5ZXI6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2VuMTogI2ZmZmZmZjtcXHJcXG4kcGFnZTA6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2UxOiAjZDBkMGQwO1xcclxcbiRwYWdlMjogIzk1OTU5NTtcXHJcXG4kYWxlcnQ6ICNlYzBkMGQ7XFxyXFxuJGRhcms6IGJsYWNrO1xcclxcblxcclxcbiRidXR0b25Cb3JkZXI6IGJsYWNrO1xcclxcblxcclxcbiRjb2xvcnM6ICgncGFnZTEnOiAkcGFnZTEsICdwYWdlMic6ICRwYWdlMiwgJ2FsZXJ0JzogJGFsZXJ0KTtcXHJcXG5cXHJcXG4vLyBsZW5ndGhzXFxyXFxuJHNwYWNlcjogNXB4O1xcclxcblxcclxcbi8vIHdpZHRoc1xcclxcbiRicmVha3BvaW50czogKCcnOiAwcHgsICdob3InOiA1MDBweCwgJ2Rlcyc6IDkwMHB4KTtcXHJcXG5cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n')},870:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.chooseGameButtonsRow{display:flex}div.chooseGameRow{display:flex;justify-content:start;align-items:center;margin-bottom:5px}div.chooseGameHost{margin-inline-end:5px}div.chooseGamePlayers{display:flex;align-items:center;margin-inline-end:5px}div.chooseGamePlayersPill{width:fit-content;padding:2px;background-color:#d0d0d0;border-radius:5px;border:solid #000 1px}div.chooseGameStatus{margin-inline-end:5px}div.chooseAddRow{margin-bottom:5px}`, "",{"version":3,"sources":["webpack://./frontend/styles/choose.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAGA,yBACI,YAAA,CAGJ,kBACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,iBAAA,CAGJ,mBACI,qBAAA,CAGJ,sBACI,YAAA,CACA,kBAAA,CACA,qBAAA,CAGJ,0BACI,iBAAA,CACA,WAAA,CACA,wBCrBI,CDsBJ,iBAAA,CACA,qBAAA,CAGJ,qBACI,qBAAA,CAGJ,iBACI,iBAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\ndiv.chooseGameButtonsRow {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\ndiv.chooseGameRow {\\r\\n    display: flex;\\r\\n    justify-content: start;\\r\\n    align-items: center;\\r\\n    margin-bottom: 5px;\\r\\n};\\r\\n\\r\\ndiv.chooseGameHost {\\r\\n    margin-inline-end: 5px;\\r\\n};\\r\\n\\r\\ndiv.chooseGamePlayers{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-inline-end: 5px;\\r\\n};\\r\\n\\r\\ndiv.chooseGamePlayersPill {\\r\\n    width: fit-content;\\r\\n    padding: 2px;\\r\\n    background-color: vars.$page1;\\r\\n    border-radius: 5px;\\r\\n    border: solid vars.$buttonBorder 1px;\\r\\n}\\r\\n\\r\\ndiv.chooseGameStatus{\\r\\n    margin-inline-end: 5px;\\r\\n};\\r\\n\\r\\ndiv.chooseAddRow {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsbUVBQW1FLGFBQWEsa0JBQWtCLGFBQWEsc0JBQXNCLG1CQUFtQixrQkFBa0IsbUJBQW1CLHNCQUFzQixzQkFBc0IsYUFBYSxtQkFBbUIsc0JBQXNCLDBCQUEwQixrQkFBa0IsWUFBWSx5QkFBeUIsa0JBQWtCLHNCQUFzQixxQkFBcUIsc0JBQXNCLGlCQUFpQixrQkFBa0IsT0FBTyw2WEFBNlgsa0NBQWtDLHNCQUFzQixLQUFLLDJCQUEyQixzQkFBc0IsK0JBQStCLDRCQUE0QiwyQkFBMkIsTUFBTSw0QkFBNEIsK0JBQStCLE1BQU0sOEJBQThCLHNCQUFzQiw0QkFBNEIsK0JBQStCLE1BQU0sbUNBQW1DLDJCQUEyQixxQkFBcUIsc0NBQXNDLDJCQUEyQiw2Q0FBNkMsS0FBSyw2QkFBNkIsK0JBQStCLE1BQU0sMEJBQTBCLDJCQUEyQixLQUFLLG1DQUFtQyxxQkFBcUIscUJBQXFCLG9CQUFvQixvQkFBb0Isb0JBQW9CLG9CQUFvQixpQkFBaUIsNkJBQTZCLHFFQUFxRSxtQ0FBbUMseUVBQXlFLCtCQUErQjtBQUN2OEQ7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZ2FlbXBpcmVzLy4vZnJvbnRlbmQvc3R5bGVzL2Nob29zZS5zY3NzPzI1MjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGRpdi5jaG9vc2VHYW1lQnV0dG9uc1Jvd3tkaXNwbGF5OmZsZXh9ZGl2LmNob29zZUdhbWVSb3d7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzdGFydDthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luLWJvdHRvbTo1cHh9ZGl2LmNob29zZUdhbWVIb3N0e21hcmdpbi1pbmxpbmUtZW5kOjVweH1kaXYuY2hvb3NlR2FtZVBsYXllcnN7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjttYXJnaW4taW5saW5lLWVuZDo1cHh9ZGl2LmNob29zZUdhbWVQbGF5ZXJzUGlsbHt3aWR0aDpmaXQtY29udGVudDtwYWRkaW5nOjJweDtiYWNrZ3JvdW5kLWNvbG9yOiNkMGQwZDA7Ym9yZGVyLXJhZGl1czo1cHg7Ym9yZGVyOnNvbGlkICMwMDAgMXB4fWRpdi5jaG9vc2VHYW1lU3RhdHVze21hcmdpbi1pbmxpbmUtZW5kOjVweH1kaXYuY2hvb3NlQWRkUm93e21hcmdpbi1ib3R0b206NXB4fWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL2Nob29zZS5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9mcm9udGVuZC9zdHlsZXMvdmFycy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUdBLHlCQUNJLFlBQUEsQ0FHSixrQkFDSSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxrQkFBQSxDQUNBLGlCQUFBLENBR0osbUJBQ0kscUJBQUEsQ0FHSixzQkFDSSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSxxQkFBQSxDQUdKLDBCQUNJLGlCQUFBLENBQ0EsV0FBQSxDQUNBLHdCQ3JCSSxDRHNCSixpQkFBQSxDQUNBLHFCQUFBLENBR0oscUJBQ0kscUJBQUEsQ0FHSixpQkFDSSxpQkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJcXHJcXG5AdXNlICd2YXJzJztcXHJcXG5cXHJcXG5kaXYuY2hvb3NlR2FtZUJ1dHRvbnNSb3cge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuY2hvb3NlR2FtZVJvdyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcXHJcXG59O1xcclxcblxcclxcbmRpdi5jaG9vc2VHYW1lSG9zdCB7XFxyXFxuICAgIG1hcmdpbi1pbmxpbmUtZW5kOiA1cHg7XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuY2hvb3NlR2FtZVBsYXllcnN7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi1pbmxpbmUtZW5kOiA1cHg7XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuY2hvb3NlR2FtZVBsYXllcnNQaWxsIHtcXHJcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcclxcbiAgICBwYWRkaW5nOiAycHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcnMuJHBhZ2UxO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGJvcmRlcjogc29saWQgdmFycy4kYnV0dG9uQm9yZGVyIDFweDtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LmNob29zZUdhbWVTdGF0dXN7XFxyXFxuICAgIG1hcmdpbi1pbmxpbmUtZW5kOiA1cHg7XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuY2hvb3NlQWRkUm93IHtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcclxcbn1cXHJcXG5cIixcIlxcclxcbi8vIGNvbG9yc1xcclxcbiR5b3U6IGJsdWU7XFxyXFxuJHBsYXllcjogI2Q5ZDlkOTtcXHJcXG4kcGFnZW4xOiAjZmZmZmZmO1xcclxcbiRwYWdlMDogI2Q5ZDlkOTtcXHJcXG4kcGFnZTE6ICNkMGQwZDA7XFxyXFxuJHBhZ2UyOiAjOTU5NTk1O1xcclxcbiRhbGVydDogI2VjMGQwZDtcXHJcXG4kZGFyazogYmxhY2s7XFxyXFxuXFxyXFxuJGJ1dHRvbkJvcmRlcjogYmxhY2s7XFxyXFxuXFxyXFxuJGNvbG9yczogKCdwYWdlMSc6ICRwYWdlMSwgJ3BhZ2UyJzogJHBhZ2UyLCAnYWxlcnQnOiAkYWxlcnQpO1xcclxcblxcclxcbi8vIGxlbmd0aHNcXHJcXG4kc3BhY2VyOiA1cHg7XFxyXFxuXFxyXFxuLy8gd2lkdGhzXFxyXFxuJGJyZWFrcG9pbnRzOiAoJyc6IDBweCwgJ2hvcic6IDUwMHB4LCAnZGVzJzogOTAwcHgpO1xcclxcblxcclxcblxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///870\n')},783:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `g.mapArea{box-shadow:#ff0 0 0 10px 10px}g.mapArea:hover::before{position:relative;top:-10px;content:attr("name")}`, "",{"version":3,"sources":["webpack://./frontend/styles/gameeditor.scss"],"names":[],"mappings":"AAEA,UACI,6BAAA,CAGJ,wBACI,iBAAA,CACA,SAAA,CACA,oBAAA","sourcesContent":["@use \'vars\';\\r\\n\\r\\ng.mapArea {\\r\\n    box-shadow: yellow 0 0 10px 10px;\\r\\n}\\r\\n\\r\\ng.mapArea:hover::before {\\r\\n    position: relative;\\r\\n    top: -10px;\\r\\n    content: attr(\'name\');\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzgzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0Esb0RBQW9ELDhCQUE4Qix3QkFBd0Isa0JBQWtCLFVBQVUscUJBQXFCLE9BQU8sbUxBQW1MLG1CQUFtQix5Q0FBeUMsS0FBSyxpQ0FBaUMsMkJBQTJCLG1CQUFtQiw4QkFBOEIsS0FBSyxtQkFBbUI7QUFDM2hCO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL2Zyb250ZW5kL3N0eWxlcy9nYW1lZWRpdG9yLnNjc3M/YmMyMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgZy5tYXBBcmVhe2JveC1zaGFkb3c6I2ZmMCAwIDAgMTBweCAxMHB4fWcubWFwQXJlYTpob3Zlcjo6YmVmb3Jle3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotMTBweDtjb250ZW50OmF0dHIoXCJuYW1lXCIpfWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL2dhbWVlZGl0b3Iuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQSxVQUNJLDZCQUFBLENBR0osd0JBQ0ksaUJBQUEsQ0FDQSxTQUFBLENBQ0Esb0JBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQHVzZSAndmFycyc7XFxyXFxuXFxyXFxuZy5tYXBBcmVhIHtcXHJcXG4gICAgYm94LXNoYWRvdzogeWVsbG93IDAgMCAxMHB4IDEwcHg7XFxyXFxufVxcclxcblxcclxcbmcubWFwQXJlYTpob3Zlcjo6YmVmb3JlIHtcXHJcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgICB0b3A6IC0xMHB4O1xcclxcbiAgICBjb250ZW50OiBhdHRyKCduYW1lJyk7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///783\n')},932:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.headerTitle{margin:0;padding:0;font-size:1.4rem}div.headerSide{margin:0;padding:0}`, "",{"version":3,"sources":["webpack://./frontend/styles/header.scss"],"names":[],"mappings":"AAEA,gBACI,QAAA,CACA,SAAA,CACA,gBAAA,CAGJ,eACI,QAAA,CACA,SAAA","sourcesContent":["\\r\\n\\r\\ndiv.headerTitle{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    font-size: 1.4rem;\\r\\n};\\r\\n\\r\\ndiv.headerSide {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n};"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTMyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsMERBQTBELFNBQVMsVUFBVSxpQkFBaUIsZUFBZSxTQUFTLFVBQVUsT0FBTyxtTUFBbU0sa0JBQWtCLG1CQUFtQiwwQkFBMEIsTUFBTSx3QkFBd0Isa0JBQWtCLG1CQUFtQixNQUFNLG1CQUFtQjtBQUNyZTtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvaGVhZGVyLnNjc3M/NjA2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgZGl2LmhlYWRlclRpdGxle21hcmdpbjowO3BhZGRpbmc6MDtmb250LXNpemU6MS40cmVtfWRpdi5oZWFkZXJTaWRle21hcmdpbjowO3BhZGRpbmc6MH1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy9oZWFkZXIuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQSxnQkFDSSxRQUFBLENBQ0EsU0FBQSxDQUNBLGdCQUFBLENBR0osZUFDSSxRQUFBLENBQ0EsU0FBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJcXHJcXG5cXHJcXG5kaXYuaGVhZGVyVGl0bGV7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgZm9udC1zaXplOiAxLjRyZW07XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuaGVhZGVyU2lkZSB7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG59O1wiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///932\n')},33:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `input.inpN{width:17px;text-align:end;padding:0;margin:0}input.inpN::-webkit-outer-spin-button,input.inpN::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}strong{font-weight:600}.flexColumn{height:100%;display:flex;flex-direction:column;justify-content:space-between;align-items:center}.flexRow{width:100%;display:flex;flex-direction:row;justify-content:space-between;align-items:center}.bg-page1{background-color:#d0d0d0}.cc-page1{color:#d0d0d0}.bg-page2{background-color:#959595}.cc-page2{color:#959595}.bg-alert{background-color:#ec0d0d}.cc-alert{color:#ec0d0d}@media screen and (min-width: 0px){.w--auto{width:auto}.w--0pc{width:0%}.w--0vw{width:0vw}.h--0pc{height:0%}.h--0vh{height:0vh}.mb--0pc{margin-bottom:0%}.mr--0pc{margin-right:0%}.text--right{text-align:right}.w--1pc{width:1%}.w--1vw{width:1vw}.h--1pc{height:1%}.h--1vh{height:1vh}.mb--1pc{margin-bottom:1%}.mr--1pc{margin-right:1%}.text--right{text-align:right}.w--2pc{width:2%}.w--2vw{width:2vw}.h--2pc{height:2%}.h--2vh{height:2vh}.mb--2pc{margin-bottom:2%}.mr--2pc{margin-right:2%}.text--right{text-align:right}.w--3pc{width:3%}.w--3vw{width:3vw}.h--3pc{height:3%}.h--3vh{height:3vh}.mb--3pc{margin-bottom:3%}.mr--3pc{margin-right:3%}.text--right{text-align:right}.w--4pc{width:4%}.w--4vw{width:4vw}.h--4pc{height:4%}.h--4vh{height:4vh}.mb--4pc{margin-bottom:4%}.mr--4pc{margin-right:4%}.text--right{text-align:right}.w--5pc{width:5%}.w--5vw{width:5vw}.h--5pc{height:5%}.h--5vh{height:5vh}.mb--5pc{margin-bottom:5%}.mr--5pc{margin-right:5%}.text--right{text-align:right}.w--6pc{width:6%}.w--6vw{width:6vw}.h--6pc{height:6%}.h--6vh{height:6vh}.mb--6pc{margin-bottom:6%}.mr--6pc{margin-right:6%}.text--right{text-align:right}.w--7pc{width:7%}.w--7vw{width:7vw}.h--7pc{height:7%}.h--7vh{height:7vh}.mb--7pc{margin-bottom:7%}.mr--7pc{margin-right:7%}.text--right{text-align:right}.w--8pc{width:8%}.w--8vw{width:8vw}.h--8pc{height:8%}.h--8vh{height:8vh}.mb--8pc{margin-bottom:8%}.mr--8pc{margin-right:8%}.text--right{text-align:right}.w--9pc{width:9%}.w--9vw{width:9vw}.h--9pc{height:9%}.h--9vh{height:9vh}.mb--9pc{margin-bottom:9%}.mr--9pc{margin-right:9%}.text--right{text-align:right}.w--10pc{width:10%}.w--10vw{width:10vw}.h--10pc{height:10%}.h--10vh{height:10vh}.mb--10pc{margin-bottom:10%}.mr--10pc{margin-right:10%}.text--right{text-align:right}.w--11pc{width:11%}.w--11vw{width:11vw}.h--11pc{height:11%}.h--11vh{height:11vh}.mb--11pc{margin-bottom:11%}.mr--11pc{margin-right:11%}.text--right{text-align:right}.w--12pc{width:12%}.w--12vw{width:12vw}.h--12pc{height:12%}.h--12vh{height:12vh}.mb--12pc{margin-bottom:12%}.mr--12pc{margin-right:12%}.text--right{text-align:right}.w--13pc{width:13%}.w--13vw{width:13vw}.h--13pc{height:13%}.h--13vh{height:13vh}.mb--13pc{margin-bottom:13%}.mr--13pc{margin-right:13%}.text--right{text-align:right}.w--14pc{width:14%}.w--14vw{width:14vw}.h--14pc{height:14%}.h--14vh{height:14vh}.mb--14pc{margin-bottom:14%}.mr--14pc{margin-right:14%}.text--right{text-align:right}.w--15pc{width:15%}.w--15vw{width:15vw}.h--15pc{height:15%}.h--15vh{height:15vh}.mb--15pc{margin-bottom:15%}.mr--15pc{margin-right:15%}.text--right{text-align:right}.w--16pc{width:16%}.w--16vw{width:16vw}.h--16pc{height:16%}.h--16vh{height:16vh}.mb--16pc{margin-bottom:16%}.mr--16pc{margin-right:16%}.text--right{text-align:right}.w--17pc{width:17%}.w--17vw{width:17vw}.h--17pc{height:17%}.h--17vh{height:17vh}.mb--17pc{margin-bottom:17%}.mr--17pc{margin-right:17%}.text--right{text-align:right}.w--18pc{width:18%}.w--18vw{width:18vw}.h--18pc{height:18%}.h--18vh{height:18vh}.mb--18pc{margin-bottom:18%}.mr--18pc{margin-right:18%}.text--right{text-align:right}.w--19pc{width:19%}.w--19vw{width:19vw}.h--19pc{height:19%}.h--19vh{height:19vh}.mb--19pc{margin-bottom:19%}.mr--19pc{margin-right:19%}.text--right{text-align:right}.w--20pc{width:20%}.w--20vw{width:20vw}.h--20pc{height:20%}.h--20vh{height:20vh}.mb--20pc{margin-bottom:20%}.mr--20pc{margin-right:20%}.text--right{text-align:right}.w--21pc{width:21%}.w--21vw{width:21vw}.h--21pc{height:21%}.h--21vh{height:21vh}.mb--21pc{margin-bottom:21%}.mr--21pc{margin-right:21%}.text--right{text-align:right}.w--22pc{width:22%}.w--22vw{width:22vw}.h--22pc{height:22%}.h--22vh{height:22vh}.mb--22pc{margin-bottom:22%}.mr--22pc{margin-right:22%}.text--right{text-align:right}.w--23pc{width:23%}.w--23vw{width:23vw}.h--23pc{height:23%}.h--23vh{height:23vh}.mb--23pc{margin-bottom:23%}.mr--23pc{margin-right:23%}.text--right{text-align:right}.w--24pc{width:24%}.w--24vw{width:24vw}.h--24pc{height:24%}.h--24vh{height:24vh}.mb--24pc{margin-bottom:24%}.mr--24pc{margin-right:24%}.text--right{text-align:right}.w--25pc{width:25%}.w--25vw{width:25vw}.h--25pc{height:25%}.h--25vh{height:25vh}.mb--25pc{margin-bottom:25%}.mr--25pc{margin-right:25%}.text--right{text-align:right}.w--26pc{width:26%}.w--26vw{width:26vw}.h--26pc{height:26%}.h--26vh{height:26vh}.mb--26pc{margin-bottom:26%}.mr--26pc{margin-right:26%}.text--right{text-align:right}.w--27pc{width:27%}.w--27vw{width:27vw}.h--27pc{height:27%}.h--27vh{height:27vh}.mb--27pc{margin-bottom:27%}.mr--27pc{margin-right:27%}.text--right{text-align:right}.w--28pc{width:28%}.w--28vw{width:28vw}.h--28pc{height:28%}.h--28vh{height:28vh}.mb--28pc{margin-bottom:28%}.mr--28pc{margin-right:28%}.text--right{text-align:right}.w--29pc{width:29%}.w--29vw{width:29vw}.h--29pc{height:29%}.h--29vh{height:29vh}.mb--29pc{margin-bottom:29%}.mr--29pc{margin-right:29%}.text--right{text-align:right}.w--30pc{width:30%}.w--30vw{width:30vw}.h--30pc{height:30%}.h--30vh{height:30vh}.mb--30pc{margin-bottom:30%}.mr--30pc{margin-right:30%}.text--right{text-align:right}.w--31pc{width:31%}.w--31vw{width:31vw}.h--31pc{height:31%}.h--31vh{height:31vh}.mb--31pc{margin-bottom:31%}.mr--31pc{margin-right:31%}.text--right{text-align:right}.w--32pc{width:32%}.w--32vw{width:32vw}.h--32pc{height:32%}.h--32vh{height:32vh}.mb--32pc{margin-bottom:32%}.mr--32pc{margin-right:32%}.text--right{text-align:right}.w--33pc{width:33%}.w--33vw{width:33vw}.h--33pc{height:33%}.h--33vh{height:33vh}.mb--33pc{margin-bottom:33%}.mr--33pc{margin-right:33%}.text--right{text-align:right}.w--34pc{width:34%}.w--34vw{width:34vw}.h--34pc{height:34%}.h--34vh{height:34vh}.mb--34pc{margin-bottom:34%}.mr--34pc{margin-right:34%}.text--right{text-align:right}.w--35pc{width:35%}.w--35vw{width:35vw}.h--35pc{height:35%}.h--35vh{height:35vh}.mb--35pc{margin-bottom:35%}.mr--35pc{margin-right:35%}.text--right{text-align:right}.w--36pc{width:36%}.w--36vw{width:36vw}.h--36pc{height:36%}.h--36vh{height:36vh}.mb--36pc{margin-bottom:36%}.mr--36pc{margin-right:36%}.text--right{text-align:right}.w--37pc{width:37%}.w--37vw{width:37vw}.h--37pc{height:37%}.h--37vh{height:37vh}.mb--37pc{margin-bottom:37%}.mr--37pc{margin-right:37%}.text--right{text-align:right}.w--38pc{width:38%}.w--38vw{width:38vw}.h--38pc{height:38%}.h--38vh{height:38vh}.mb--38pc{margin-bottom:38%}.mr--38pc{margin-right:38%}.text--right{text-align:right}.w--39pc{width:39%}.w--39vw{width:39vw}.h--39pc{height:39%}.h--39vh{height:39vh}.mb--39pc{margin-bottom:39%}.mr--39pc{margin-right:39%}.text--right{text-align:right}.w--40pc{width:40%}.w--40vw{width:40vw}.h--40pc{height:40%}.h--40vh{height:40vh}.mb--40pc{margin-bottom:40%}.mr--40pc{margin-right:40%}.text--right{text-align:right}.w--41pc{width:41%}.w--41vw{width:41vw}.h--41pc{height:41%}.h--41vh{height:41vh}.mb--41pc{margin-bottom:41%}.mr--41pc{margin-right:41%}.text--right{text-align:right}.w--42pc{width:42%}.w--42vw{width:42vw}.h--42pc{height:42%}.h--42vh{height:42vh}.mb--42pc{margin-bottom:42%}.mr--42pc{margin-right:42%}.text--right{text-align:right}.w--43pc{width:43%}.w--43vw{width:43vw}.h--43pc{height:43%}.h--43vh{height:43vh}.mb--43pc{margin-bottom:43%}.mr--43pc{margin-right:43%}.text--right{text-align:right}.w--44pc{width:44%}.w--44vw{width:44vw}.h--44pc{height:44%}.h--44vh{height:44vh}.mb--44pc{margin-bottom:44%}.mr--44pc{margin-right:44%}.text--right{text-align:right}.w--45pc{width:45%}.w--45vw{width:45vw}.h--45pc{height:45%}.h--45vh{height:45vh}.mb--45pc{margin-bottom:45%}.mr--45pc{margin-right:45%}.text--right{text-align:right}.w--46pc{width:46%}.w--46vw{width:46vw}.h--46pc{height:46%}.h--46vh{height:46vh}.mb--46pc{margin-bottom:46%}.mr--46pc{margin-right:46%}.text--right{text-align:right}.w--47pc{width:47%}.w--47vw{width:47vw}.h--47pc{height:47%}.h--47vh{height:47vh}.mb--47pc{margin-bottom:47%}.mr--47pc{margin-right:47%}.text--right{text-align:right}.w--48pc{width:48%}.w--48vw{width:48vw}.h--48pc{height:48%}.h--48vh{height:48vh}.mb--48pc{margin-bottom:48%}.mr--48pc{margin-right:48%}.text--right{text-align:right}.w--49pc{width:49%}.w--49vw{width:49vw}.h--49pc{height:49%}.h--49vh{height:49vh}.mb--49pc{margin-bottom:49%}.mr--49pc{margin-right:49%}.text--right{text-align:right}.w--50pc{width:50%}.w--50vw{width:50vw}.h--50pc{height:50%}.h--50vh{height:50vh}.mb--50pc{margin-bottom:50%}.mr--50pc{margin-right:50%}.text--right{text-align:right}.w--51pc{width:51%}.w--51vw{width:51vw}.h--51pc{height:51%}.h--51vh{height:51vh}.mb--51pc{margin-bottom:51%}.mr--51pc{margin-right:51%}.text--right{text-align:right}.w--52pc{width:52%}.w--52vw{width:52vw}.h--52pc{height:52%}.h--52vh{height:52vh}.mb--52pc{margin-bottom:52%}.mr--52pc{margin-right:52%}.text--right{text-align:right}.w--53pc{width:53%}.w--53vw{width:53vw}.h--53pc{height:53%}.h--53vh{height:53vh}.mb--53pc{margin-bottom:53%}.mr--53pc{margin-right:53%}.text--right{text-align:right}.w--54pc{width:54%}.w--54vw{width:54vw}.h--54pc{height:54%}.h--54vh{height:54vh}.mb--54pc{margin-bottom:54%}.mr--54pc{margin-right:54%}.text--right{text-align:right}.w--55pc{width:55%}.w--55vw{width:55vw}.h--55pc{height:55%}.h--55vh{height:55vh}.mb--55pc{margin-bottom:55%}.mr--55pc{margin-right:55%}.text--right{text-align:right}.w--56pc{width:56%}.w--56vw{width:56vw}.h--56pc{height:56%}.h--56vh{height:56vh}.mb--56pc{margin-bottom:56%}.mr--56pc{margin-right:56%}.text--right{text-align:right}.w--57pc{width:57%}.w--57vw{width:57vw}.h--57pc{height:57%}.h--57vh{height:57vh}.mb--57pc{margin-bottom:57%}.mr--57pc{margin-right:57%}.text--right{text-align:right}.w--58pc{width:58%}.w--58vw{width:58vw}.h--58pc{height:58%}.h--58vh{height:58vh}.mb--58pc{margin-bottom:58%}.mr--58pc{margin-right:58%}.text--right{text-align:right}.w--59pc{width:59%}.w--59vw{width:59vw}.h--59pc{height:59%}.h--59vh{height:59vh}.mb--59pc{margin-bottom:59%}.mr--59pc{margin-right:59%}.text--right{text-align:right}.w--60pc{width:60%}.w--60vw{width:60vw}.h--60pc{height:60%}.h--60vh{height:60vh}.mb--60pc{margin-bottom:60%}.mr--60pc{margin-right:60%}.text--right{text-align:right}.w--61pc{width:61%}.w--61vw{width:61vw}.h--61pc{height:61%}.h--61vh{height:61vh}.mb--61pc{margin-bottom:61%}.mr--61pc{margin-right:61%}.text--right{text-align:right}.w--62pc{width:62%}.w--62vw{width:62vw}.h--62pc{height:62%}.h--62vh{height:62vh}.mb--62pc{margin-bottom:62%}.mr--62pc{margin-right:62%}.text--right{text-align:right}.w--63pc{width:63%}.w--63vw{width:63vw}.h--63pc{height:63%}.h--63vh{height:63vh}.mb--63pc{margin-bottom:63%}.mr--63pc{margin-right:63%}.text--right{text-align:right}.w--64pc{width:64%}.w--64vw{width:64vw}.h--64pc{height:64%}.h--64vh{height:64vh}.mb--64pc{margin-bottom:64%}.mr--64pc{margin-right:64%}.text--right{text-align:right}.w--65pc{width:65%}.w--65vw{width:65vw}.h--65pc{height:65%}.h--65vh{height:65vh}.mb--65pc{margin-bottom:65%}.mr--65pc{margin-right:65%}.text--right{text-align:right}.w--66pc{width:66%}.w--66vw{width:66vw}.h--66pc{height:66%}.h--66vh{height:66vh}.mb--66pc{margin-bottom:66%}.mr--66pc{margin-right:66%}.text--right{text-align:right}.w--67pc{width:67%}.w--67vw{width:67vw}.h--67pc{height:67%}.h--67vh{height:67vh}.mb--67pc{margin-bottom:67%}.mr--67pc{margin-right:67%}.text--right{text-align:right}.w--68pc{width:68%}.w--68vw{width:68vw}.h--68pc{height:68%}.h--68vh{height:68vh}.mb--68pc{margin-bottom:68%}.mr--68pc{margin-right:68%}.text--right{text-align:right}.w--69pc{width:69%}.w--69vw{width:69vw}.h--69pc{height:69%}.h--69vh{height:69vh}.mb--69pc{margin-bottom:69%}.mr--69pc{margin-right:69%}.text--right{text-align:right}.w--70pc{width:70%}.w--70vw{width:70vw}.h--70pc{height:70%}.h--70vh{height:70vh}.mb--70pc{margin-bottom:70%}.mr--70pc{margin-right:70%}.text--right{text-align:right}.w--71pc{width:71%}.w--71vw{width:71vw}.h--71pc{height:71%}.h--71vh{height:71vh}.mb--71pc{margin-bottom:71%}.mr--71pc{margin-right:71%}.text--right{text-align:right}.w--72pc{width:72%}.w--72vw{width:72vw}.h--72pc{height:72%}.h--72vh{height:72vh}.mb--72pc{margin-bottom:72%}.mr--72pc{margin-right:72%}.text--right{text-align:right}.w--73pc{width:73%}.w--73vw{width:73vw}.h--73pc{height:73%}.h--73vh{height:73vh}.mb--73pc{margin-bottom:73%}.mr--73pc{margin-right:73%}.text--right{text-align:right}.w--74pc{width:74%}.w--74vw{width:74vw}.h--74pc{height:74%}.h--74vh{height:74vh}.mb--74pc{margin-bottom:74%}.mr--74pc{margin-right:74%}.text--right{text-align:right}.w--75pc{width:75%}.w--75vw{width:75vw}.h--75pc{height:75%}.h--75vh{height:75vh}.mb--75pc{margin-bottom:75%}.mr--75pc{margin-right:75%}.text--right{text-align:right}.w--76pc{width:76%}.w--76vw{width:76vw}.h--76pc{height:76%}.h--76vh{height:76vh}.mb--76pc{margin-bottom:76%}.mr--76pc{margin-right:76%}.text--right{text-align:right}.w--77pc{width:77%}.w--77vw{width:77vw}.h--77pc{height:77%}.h--77vh{height:77vh}.mb--77pc{margin-bottom:77%}.mr--77pc{margin-right:77%}.text--right{text-align:right}.w--78pc{width:78%}.w--78vw{width:78vw}.h--78pc{height:78%}.h--78vh{height:78vh}.mb--78pc{margin-bottom:78%}.mr--78pc{margin-right:78%}.text--right{text-align:right}.w--79pc{width:79%}.w--79vw{width:79vw}.h--79pc{height:79%}.h--79vh{height:79vh}.mb--79pc{margin-bottom:79%}.mr--79pc{margin-right:79%}.text--right{text-align:right}.w--80pc{width:80%}.w--80vw{width:80vw}.h--80pc{height:80%}.h--80vh{height:80vh}.mb--80pc{margin-bottom:80%}.mr--80pc{margin-right:80%}.text--right{text-align:right}.w--81pc{width:81%}.w--81vw{width:81vw}.h--81pc{height:81%}.h--81vh{height:81vh}.mb--81pc{margin-bottom:81%}.mr--81pc{margin-right:81%}.text--right{text-align:right}.w--82pc{width:82%}.w--82vw{width:82vw}.h--82pc{height:82%}.h--82vh{height:82vh}.mb--82pc{margin-bottom:82%}.mr--82pc{margin-right:82%}.text--right{text-align:right}.w--83pc{width:83%}.w--83vw{width:83vw}.h--83pc{height:83%}.h--83vh{height:83vh}.mb--83pc{margin-bottom:83%}.mr--83pc{margin-right:83%}.text--right{text-align:right}.w--84pc{width:84%}.w--84vw{width:84vw}.h--84pc{height:84%}.h--84vh{height:84vh}.mb--84pc{margin-bottom:84%}.mr--84pc{margin-right:84%}.text--right{text-align:right}.w--85pc{width:85%}.w--85vw{width:85vw}.h--85pc{height:85%}.h--85vh{height:85vh}.mb--85pc{margin-bottom:85%}.mr--85pc{margin-right:85%}.text--right{text-align:right}.w--86pc{width:86%}.w--86vw{width:86vw}.h--86pc{height:86%}.h--86vh{height:86vh}.mb--86pc{margin-bottom:86%}.mr--86pc{margin-right:86%}.text--right{text-align:right}.w--87pc{width:87%}.w--87vw{width:87vw}.h--87pc{height:87%}.h--87vh{height:87vh}.mb--87pc{margin-bottom:87%}.mr--87pc{margin-right:87%}.text--right{text-align:right}.w--88pc{width:88%}.w--88vw{width:88vw}.h--88pc{height:88%}.h--88vh{height:88vh}.mb--88pc{margin-bottom:88%}.mr--88pc{margin-right:88%}.text--right{text-align:right}.w--89pc{width:89%}.w--89vw{width:89vw}.h--89pc{height:89%}.h--89vh{height:89vh}.mb--89pc{margin-bottom:89%}.mr--89pc{margin-right:89%}.text--right{text-align:right}.w--90pc{width:90%}.w--90vw{width:90vw}.h--90pc{height:90%}.h--90vh{height:90vh}.mb--90pc{margin-bottom:90%}.mr--90pc{margin-right:90%}.text--right{text-align:right}.w--91pc{width:91%}.w--91vw{width:91vw}.h--91pc{height:91%}.h--91vh{height:91vh}.mb--91pc{margin-bottom:91%}.mr--91pc{margin-right:91%}.text--right{text-align:right}.w--92pc{width:92%}.w--92vw{width:92vw}.h--92pc{height:92%}.h--92vh{height:92vh}.mb--92pc{margin-bottom:92%}.mr--92pc{margin-right:92%}.text--right{text-align:right}.w--93pc{width:93%}.w--93vw{width:93vw}.h--93pc{height:93%}.h--93vh{height:93vh}.mb--93pc{margin-bottom:93%}.mr--93pc{margin-right:93%}.text--right{text-align:right}.w--94pc{width:94%}.w--94vw{width:94vw}.h--94pc{height:94%}.h--94vh{height:94vh}.mb--94pc{margin-bottom:94%}.mr--94pc{margin-right:94%}.text--right{text-align:right}.w--95pc{width:95%}.w--95vw{width:95vw}.h--95pc{height:95%}.h--95vh{height:95vh}.mb--95pc{margin-bottom:95%}.mr--95pc{margin-right:95%}.text--right{text-align:right}.w--96pc{width:96%}.w--96vw{width:96vw}.h--96pc{height:96%}.h--96vh{height:96vh}.mb--96pc{margin-bottom:96%}.mr--96pc{margin-right:96%}.text--right{text-align:right}.w--97pc{width:97%}.w--97vw{width:97vw}.h--97pc{height:97%}.h--97vh{height:97vh}.mb--97pc{margin-bottom:97%}.mr--97pc{margin-right:97%}.text--right{text-align:right}.w--98pc{width:98%}.w--98vw{width:98vw}.h--98pc{height:98%}.h--98vh{height:98vh}.mb--98pc{margin-bottom:98%}.mr--98pc{margin-right:98%}.text--right{text-align:right}.w--99pc{width:99%}.w--99vw{width:99vw}.h--99pc{height:99%}.h--99vh{height:99vh}.mb--99pc{margin-bottom:99%}.mr--99pc{margin-right:99%}.text--right{text-align:right}.w--100pc{width:100%}.w--100vw{width:100vw}.h--100pc{height:100%}.h--100vh{height:100vh}.mb--100pc{margin-bottom:100%}.mr--100pc{margin-right:100%}.text--right{text-align:right}}@media screen and (min-width: 500px){.w-hor-auto{width:auto}.w-hor-0pc{width:0%}.w-hor-0vw{width:0vw}.h-hor-0pc{height:0%}.h-hor-0vh{height:0vh}.mb-hor-0pc{margin-bottom:0%}.mr-hor-0pc{margin-right:0%}.text-hor-right{text-align:right}.w-hor-1pc{width:1%}.w-hor-1vw{width:1vw}.h-hor-1pc{height:1%}.h-hor-1vh{height:1vh}.mb-hor-1pc{margin-bottom:1%}.mr-hor-1pc{margin-right:1%}.text-hor-right{text-align:right}.w-hor-2pc{width:2%}.w-hor-2vw{width:2vw}.h-hor-2pc{height:2%}.h-hor-2vh{height:2vh}.mb-hor-2pc{margin-bottom:2%}.mr-hor-2pc{margin-right:2%}.text-hor-right{text-align:right}.w-hor-3pc{width:3%}.w-hor-3vw{width:3vw}.h-hor-3pc{height:3%}.h-hor-3vh{height:3vh}.mb-hor-3pc{margin-bottom:3%}.mr-hor-3pc{margin-right:3%}.text-hor-right{text-align:right}.w-hor-4pc{width:4%}.w-hor-4vw{width:4vw}.h-hor-4pc{height:4%}.h-hor-4vh{height:4vh}.mb-hor-4pc{margin-bottom:4%}.mr-hor-4pc{margin-right:4%}.text-hor-right{text-align:right}.w-hor-5pc{width:5%}.w-hor-5vw{width:5vw}.h-hor-5pc{height:5%}.h-hor-5vh{height:5vh}.mb-hor-5pc{margin-bottom:5%}.mr-hor-5pc{margin-right:5%}.text-hor-right{text-align:right}.w-hor-6pc{width:6%}.w-hor-6vw{width:6vw}.h-hor-6pc{height:6%}.h-hor-6vh{height:6vh}.mb-hor-6pc{margin-bottom:6%}.mr-hor-6pc{margin-right:6%}.text-hor-right{text-align:right}.w-hor-7pc{width:7%}.w-hor-7vw{width:7vw}.h-hor-7pc{height:7%}.h-hor-7vh{height:7vh}.mb-hor-7pc{margin-bottom:7%}.mr-hor-7pc{margin-right:7%}.text-hor-right{text-align:right}.w-hor-8pc{width:8%}.w-hor-8vw{width:8vw}.h-hor-8pc{height:8%}.h-hor-8vh{height:8vh}.mb-hor-8pc{margin-bottom:8%}.mr-hor-8pc{margin-right:8%}.text-hor-right{text-align:right}.w-hor-9pc{width:9%}.w-hor-9vw{width:9vw}.h-hor-9pc{height:9%}.h-hor-9vh{height:9vh}.mb-hor-9pc{margin-bottom:9%}.mr-hor-9pc{margin-right:9%}.text-hor-right{text-align:right}.w-hor-10pc{width:10%}.w-hor-10vw{width:10vw}.h-hor-10pc{height:10%}.h-hor-10vh{height:10vh}.mb-hor-10pc{margin-bottom:10%}.mr-hor-10pc{margin-right:10%}.text-hor-right{text-align:right}.w-hor-11pc{width:11%}.w-hor-11vw{width:11vw}.h-hor-11pc{height:11%}.h-hor-11vh{height:11vh}.mb-hor-11pc{margin-bottom:11%}.mr-hor-11pc{margin-right:11%}.text-hor-right{text-align:right}.w-hor-12pc{width:12%}.w-hor-12vw{width:12vw}.h-hor-12pc{height:12%}.h-hor-12vh{height:12vh}.mb-hor-12pc{margin-bottom:12%}.mr-hor-12pc{margin-right:12%}.text-hor-right{text-align:right}.w-hor-13pc{width:13%}.w-hor-13vw{width:13vw}.h-hor-13pc{height:13%}.h-hor-13vh{height:13vh}.mb-hor-13pc{margin-bottom:13%}.mr-hor-13pc{margin-right:13%}.text-hor-right{text-align:right}.w-hor-14pc{width:14%}.w-hor-14vw{width:14vw}.h-hor-14pc{height:14%}.h-hor-14vh{height:14vh}.mb-hor-14pc{margin-bottom:14%}.mr-hor-14pc{margin-right:14%}.text-hor-right{text-align:right}.w-hor-15pc{width:15%}.w-hor-15vw{width:15vw}.h-hor-15pc{height:15%}.h-hor-15vh{height:15vh}.mb-hor-15pc{margin-bottom:15%}.mr-hor-15pc{margin-right:15%}.text-hor-right{text-align:right}.w-hor-16pc{width:16%}.w-hor-16vw{width:16vw}.h-hor-16pc{height:16%}.h-hor-16vh{height:16vh}.mb-hor-16pc{margin-bottom:16%}.mr-hor-16pc{margin-right:16%}.text-hor-right{text-align:right}.w-hor-17pc{width:17%}.w-hor-17vw{width:17vw}.h-hor-17pc{height:17%}.h-hor-17vh{height:17vh}.mb-hor-17pc{margin-bottom:17%}.mr-hor-17pc{margin-right:17%}.text-hor-right{text-align:right}.w-hor-18pc{width:18%}.w-hor-18vw{width:18vw}.h-hor-18pc{height:18%}.h-hor-18vh{height:18vh}.mb-hor-18pc{margin-bottom:18%}.mr-hor-18pc{margin-right:18%}.text-hor-right{text-align:right}.w-hor-19pc{width:19%}.w-hor-19vw{width:19vw}.h-hor-19pc{height:19%}.h-hor-19vh{height:19vh}.mb-hor-19pc{margin-bottom:19%}.mr-hor-19pc{margin-right:19%}.text-hor-right{text-align:right}.w-hor-20pc{width:20%}.w-hor-20vw{width:20vw}.h-hor-20pc{height:20%}.h-hor-20vh{height:20vh}.mb-hor-20pc{margin-bottom:20%}.mr-hor-20pc{margin-right:20%}.text-hor-right{text-align:right}.w-hor-21pc{width:21%}.w-hor-21vw{width:21vw}.h-hor-21pc{height:21%}.h-hor-21vh{height:21vh}.mb-hor-21pc{margin-bottom:21%}.mr-hor-21pc{margin-right:21%}.text-hor-right{text-align:right}.w-hor-22pc{width:22%}.w-hor-22vw{width:22vw}.h-hor-22pc{height:22%}.h-hor-22vh{height:22vh}.mb-hor-22pc{margin-bottom:22%}.mr-hor-22pc{margin-right:22%}.text-hor-right{text-align:right}.w-hor-23pc{width:23%}.w-hor-23vw{width:23vw}.h-hor-23pc{height:23%}.h-hor-23vh{height:23vh}.mb-hor-23pc{margin-bottom:23%}.mr-hor-23pc{margin-right:23%}.text-hor-right{text-align:right}.w-hor-24pc{width:24%}.w-hor-24vw{width:24vw}.h-hor-24pc{height:24%}.h-hor-24vh{height:24vh}.mb-hor-24pc{margin-bottom:24%}.mr-hor-24pc{margin-right:24%}.text-hor-right{text-align:right}.w-hor-25pc{width:25%}.w-hor-25vw{width:25vw}.h-hor-25pc{height:25%}.h-hor-25vh{height:25vh}.mb-hor-25pc{margin-bottom:25%}.mr-hor-25pc{margin-right:25%}.text-hor-right{text-align:right}.w-hor-26pc{width:26%}.w-hor-26vw{width:26vw}.h-hor-26pc{height:26%}.h-hor-26vh{height:26vh}.mb-hor-26pc{margin-bottom:26%}.mr-hor-26pc{margin-right:26%}.text-hor-right{text-align:right}.w-hor-27pc{width:27%}.w-hor-27vw{width:27vw}.h-hor-27pc{height:27%}.h-hor-27vh{height:27vh}.mb-hor-27pc{margin-bottom:27%}.mr-hor-27pc{margin-right:27%}.text-hor-right{text-align:right}.w-hor-28pc{width:28%}.w-hor-28vw{width:28vw}.h-hor-28pc{height:28%}.h-hor-28vh{height:28vh}.mb-hor-28pc{margin-bottom:28%}.mr-hor-28pc{margin-right:28%}.text-hor-right{text-align:right}.w-hor-29pc{width:29%}.w-hor-29vw{width:29vw}.h-hor-29pc{height:29%}.h-hor-29vh{height:29vh}.mb-hor-29pc{margin-bottom:29%}.mr-hor-29pc{margin-right:29%}.text-hor-right{text-align:right}.w-hor-30pc{width:30%}.w-hor-30vw{width:30vw}.h-hor-30pc{height:30%}.h-hor-30vh{height:30vh}.mb-hor-30pc{margin-bottom:30%}.mr-hor-30pc{margin-right:30%}.text-hor-right{text-align:right}.w-hor-31pc{width:31%}.w-hor-31vw{width:31vw}.h-hor-31pc{height:31%}.h-hor-31vh{height:31vh}.mb-hor-31pc{margin-bottom:31%}.mr-hor-31pc{margin-right:31%}.text-hor-right{text-align:right}.w-hor-32pc{width:32%}.w-hor-32vw{width:32vw}.h-hor-32pc{height:32%}.h-hor-32vh{height:32vh}.mb-hor-32pc{margin-bottom:32%}.mr-hor-32pc{margin-right:32%}.text-hor-right{text-align:right}.w-hor-33pc{width:33%}.w-hor-33vw{width:33vw}.h-hor-33pc{height:33%}.h-hor-33vh{height:33vh}.mb-hor-33pc{margin-bottom:33%}.mr-hor-33pc{margin-right:33%}.text-hor-right{text-align:right}.w-hor-34pc{width:34%}.w-hor-34vw{width:34vw}.h-hor-34pc{height:34%}.h-hor-34vh{height:34vh}.mb-hor-34pc{margin-bottom:34%}.mr-hor-34pc{margin-right:34%}.text-hor-right{text-align:right}.w-hor-35pc{width:35%}.w-hor-35vw{width:35vw}.h-hor-35pc{height:35%}.h-hor-35vh{height:35vh}.mb-hor-35pc{margin-bottom:35%}.mr-hor-35pc{margin-right:35%}.text-hor-right{text-align:right}.w-hor-36pc{width:36%}.w-hor-36vw{width:36vw}.h-hor-36pc{height:36%}.h-hor-36vh{height:36vh}.mb-hor-36pc{margin-bottom:36%}.mr-hor-36pc{margin-right:36%}.text-hor-right{text-align:right}.w-hor-37pc{width:37%}.w-hor-37vw{width:37vw}.h-hor-37pc{height:37%}.h-hor-37vh{height:37vh}.mb-hor-37pc{margin-bottom:37%}.mr-hor-37pc{margin-right:37%}.text-hor-right{text-align:right}.w-hor-38pc{width:38%}.w-hor-38vw{width:38vw}.h-hor-38pc{height:38%}.h-hor-38vh{height:38vh}.mb-hor-38pc{margin-bottom:38%}.mr-hor-38pc{margin-right:38%}.text-hor-right{text-align:right}.w-hor-39pc{width:39%}.w-hor-39vw{width:39vw}.h-hor-39pc{height:39%}.h-hor-39vh{height:39vh}.mb-hor-39pc{margin-bottom:39%}.mr-hor-39pc{margin-right:39%}.text-hor-right{text-align:right}.w-hor-40pc{width:40%}.w-hor-40vw{width:40vw}.h-hor-40pc{height:40%}.h-hor-40vh{height:40vh}.mb-hor-40pc{margin-bottom:40%}.mr-hor-40pc{margin-right:40%}.text-hor-right{text-align:right}.w-hor-41pc{width:41%}.w-hor-41vw{width:41vw}.h-hor-41pc{height:41%}.h-hor-41vh{height:41vh}.mb-hor-41pc{margin-bottom:41%}.mr-hor-41pc{margin-right:41%}.text-hor-right{text-align:right}.w-hor-42pc{width:42%}.w-hor-42vw{width:42vw}.h-hor-42pc{height:42%}.h-hor-42vh{height:42vh}.mb-hor-42pc{margin-bottom:42%}.mr-hor-42pc{margin-right:42%}.text-hor-right{text-align:right}.w-hor-43pc{width:43%}.w-hor-43vw{width:43vw}.h-hor-43pc{height:43%}.h-hor-43vh{height:43vh}.mb-hor-43pc{margin-bottom:43%}.mr-hor-43pc{margin-right:43%}.text-hor-right{text-align:right}.w-hor-44pc{width:44%}.w-hor-44vw{width:44vw}.h-hor-44pc{height:44%}.h-hor-44vh{height:44vh}.mb-hor-44pc{margin-bottom:44%}.mr-hor-44pc{margin-right:44%}.text-hor-right{text-align:right}.w-hor-45pc{width:45%}.w-hor-45vw{width:45vw}.h-hor-45pc{height:45%}.h-hor-45vh{height:45vh}.mb-hor-45pc{margin-bottom:45%}.mr-hor-45pc{margin-right:45%}.text-hor-right{text-align:right}.w-hor-46pc{width:46%}.w-hor-46vw{width:46vw}.h-hor-46pc{height:46%}.h-hor-46vh{height:46vh}.mb-hor-46pc{margin-bottom:46%}.mr-hor-46pc{margin-right:46%}.text-hor-right{text-align:right}.w-hor-47pc{width:47%}.w-hor-47vw{width:47vw}.h-hor-47pc{height:47%}.h-hor-47vh{height:47vh}.mb-hor-47pc{margin-bottom:47%}.mr-hor-47pc{margin-right:47%}.text-hor-right{text-align:right}.w-hor-48pc{width:48%}.w-hor-48vw{width:48vw}.h-hor-48pc{height:48%}.h-hor-48vh{height:48vh}.mb-hor-48pc{margin-bottom:48%}.mr-hor-48pc{margin-right:48%}.text-hor-right{text-align:right}.w-hor-49pc{width:49%}.w-hor-49vw{width:49vw}.h-hor-49pc{height:49%}.h-hor-49vh{height:49vh}.mb-hor-49pc{margin-bottom:49%}.mr-hor-49pc{margin-right:49%}.text-hor-right{text-align:right}.w-hor-50pc{width:50%}.w-hor-50vw{width:50vw}.h-hor-50pc{height:50%}.h-hor-50vh{height:50vh}.mb-hor-50pc{margin-bottom:50%}.mr-hor-50pc{margin-right:50%}.text-hor-right{text-align:right}.w-hor-51pc{width:51%}.w-hor-51vw{width:51vw}.h-hor-51pc{height:51%}.h-hor-51vh{height:51vh}.mb-hor-51pc{margin-bottom:51%}.mr-hor-51pc{margin-right:51%}.text-hor-right{text-align:right}.w-hor-52pc{width:52%}.w-hor-52vw{width:52vw}.h-hor-52pc{height:52%}.h-hor-52vh{height:52vh}.mb-hor-52pc{margin-bottom:52%}.mr-hor-52pc{margin-right:52%}.text-hor-right{text-align:right}.w-hor-53pc{width:53%}.w-hor-53vw{width:53vw}.h-hor-53pc{height:53%}.h-hor-53vh{height:53vh}.mb-hor-53pc{margin-bottom:53%}.mr-hor-53pc{margin-right:53%}.text-hor-right{text-align:right}.w-hor-54pc{width:54%}.w-hor-54vw{width:54vw}.h-hor-54pc{height:54%}.h-hor-54vh{height:54vh}.mb-hor-54pc{margin-bottom:54%}.mr-hor-54pc{margin-right:54%}.text-hor-right{text-align:right}.w-hor-55pc{width:55%}.w-hor-55vw{width:55vw}.h-hor-55pc{height:55%}.h-hor-55vh{height:55vh}.mb-hor-55pc{margin-bottom:55%}.mr-hor-55pc{margin-right:55%}.text-hor-right{text-align:right}.w-hor-56pc{width:56%}.w-hor-56vw{width:56vw}.h-hor-56pc{height:56%}.h-hor-56vh{height:56vh}.mb-hor-56pc{margin-bottom:56%}.mr-hor-56pc{margin-right:56%}.text-hor-right{text-align:right}.w-hor-57pc{width:57%}.w-hor-57vw{width:57vw}.h-hor-57pc{height:57%}.h-hor-57vh{height:57vh}.mb-hor-57pc{margin-bottom:57%}.mr-hor-57pc{margin-right:57%}.text-hor-right{text-align:right}.w-hor-58pc{width:58%}.w-hor-58vw{width:58vw}.h-hor-58pc{height:58%}.h-hor-58vh{height:58vh}.mb-hor-58pc{margin-bottom:58%}.mr-hor-58pc{margin-right:58%}.text-hor-right{text-align:right}.w-hor-59pc{width:59%}.w-hor-59vw{width:59vw}.h-hor-59pc{height:59%}.h-hor-59vh{height:59vh}.mb-hor-59pc{margin-bottom:59%}.mr-hor-59pc{margin-right:59%}.text-hor-right{text-align:right}.w-hor-60pc{width:60%}.w-hor-60vw{width:60vw}.h-hor-60pc{height:60%}.h-hor-60vh{height:60vh}.mb-hor-60pc{margin-bottom:60%}.mr-hor-60pc{margin-right:60%}.text-hor-right{text-align:right}.w-hor-61pc{width:61%}.w-hor-61vw{width:61vw}.h-hor-61pc{height:61%}.h-hor-61vh{height:61vh}.mb-hor-61pc{margin-bottom:61%}.mr-hor-61pc{margin-right:61%}.text-hor-right{text-align:right}.w-hor-62pc{width:62%}.w-hor-62vw{width:62vw}.h-hor-62pc{height:62%}.h-hor-62vh{height:62vh}.mb-hor-62pc{margin-bottom:62%}.mr-hor-62pc{margin-right:62%}.text-hor-right{text-align:right}.w-hor-63pc{width:63%}.w-hor-63vw{width:63vw}.h-hor-63pc{height:63%}.h-hor-63vh{height:63vh}.mb-hor-63pc{margin-bottom:63%}.mr-hor-63pc{margin-right:63%}.text-hor-right{text-align:right}.w-hor-64pc{width:64%}.w-hor-64vw{width:64vw}.h-hor-64pc{height:64%}.h-hor-64vh{height:64vh}.mb-hor-64pc{margin-bottom:64%}.mr-hor-64pc{margin-right:64%}.text-hor-right{text-align:right}.w-hor-65pc{width:65%}.w-hor-65vw{width:65vw}.h-hor-65pc{height:65%}.h-hor-65vh{height:65vh}.mb-hor-65pc{margin-bottom:65%}.mr-hor-65pc{margin-right:65%}.text-hor-right{text-align:right}.w-hor-66pc{width:66%}.w-hor-66vw{width:66vw}.h-hor-66pc{height:66%}.h-hor-66vh{height:66vh}.mb-hor-66pc{margin-bottom:66%}.mr-hor-66pc{margin-right:66%}.text-hor-right{text-align:right}.w-hor-67pc{width:67%}.w-hor-67vw{width:67vw}.h-hor-67pc{height:67%}.h-hor-67vh{height:67vh}.mb-hor-67pc{margin-bottom:67%}.mr-hor-67pc{margin-right:67%}.text-hor-right{text-align:right}.w-hor-68pc{width:68%}.w-hor-68vw{width:68vw}.h-hor-68pc{height:68%}.h-hor-68vh{height:68vh}.mb-hor-68pc{margin-bottom:68%}.mr-hor-68pc{margin-right:68%}.text-hor-right{text-align:right}.w-hor-69pc{width:69%}.w-hor-69vw{width:69vw}.h-hor-69pc{height:69%}.h-hor-69vh{height:69vh}.mb-hor-69pc{margin-bottom:69%}.mr-hor-69pc{margin-right:69%}.text-hor-right{text-align:right}.w-hor-70pc{width:70%}.w-hor-70vw{width:70vw}.h-hor-70pc{height:70%}.h-hor-70vh{height:70vh}.mb-hor-70pc{margin-bottom:70%}.mr-hor-70pc{margin-right:70%}.text-hor-right{text-align:right}.w-hor-71pc{width:71%}.w-hor-71vw{width:71vw}.h-hor-71pc{height:71%}.h-hor-71vh{height:71vh}.mb-hor-71pc{margin-bottom:71%}.mr-hor-71pc{margin-right:71%}.text-hor-right{text-align:right}.w-hor-72pc{width:72%}.w-hor-72vw{width:72vw}.h-hor-72pc{height:72%}.h-hor-72vh{height:72vh}.mb-hor-72pc{margin-bottom:72%}.mr-hor-72pc{margin-right:72%}.text-hor-right{text-align:right}.w-hor-73pc{width:73%}.w-hor-73vw{width:73vw}.h-hor-73pc{height:73%}.h-hor-73vh{height:73vh}.mb-hor-73pc{margin-bottom:73%}.mr-hor-73pc{margin-right:73%}.text-hor-right{text-align:right}.w-hor-74pc{width:74%}.w-hor-74vw{width:74vw}.h-hor-74pc{height:74%}.h-hor-74vh{height:74vh}.mb-hor-74pc{margin-bottom:74%}.mr-hor-74pc{margin-right:74%}.text-hor-right{text-align:right}.w-hor-75pc{width:75%}.w-hor-75vw{width:75vw}.h-hor-75pc{height:75%}.h-hor-75vh{height:75vh}.mb-hor-75pc{margin-bottom:75%}.mr-hor-75pc{margin-right:75%}.text-hor-right{text-align:right}.w-hor-76pc{width:76%}.w-hor-76vw{width:76vw}.h-hor-76pc{height:76%}.h-hor-76vh{height:76vh}.mb-hor-76pc{margin-bottom:76%}.mr-hor-76pc{margin-right:76%}.text-hor-right{text-align:right}.w-hor-77pc{width:77%}.w-hor-77vw{width:77vw}.h-hor-77pc{height:77%}.h-hor-77vh{height:77vh}.mb-hor-77pc{margin-bottom:77%}.mr-hor-77pc{margin-right:77%}.text-hor-right{text-align:right}.w-hor-78pc{width:78%}.w-hor-78vw{width:78vw}.h-hor-78pc{height:78%}.h-hor-78vh{height:78vh}.mb-hor-78pc{margin-bottom:78%}.mr-hor-78pc{margin-right:78%}.text-hor-right{text-align:right}.w-hor-79pc{width:79%}.w-hor-79vw{width:79vw}.h-hor-79pc{height:79%}.h-hor-79vh{height:79vh}.mb-hor-79pc{margin-bottom:79%}.mr-hor-79pc{margin-right:79%}.text-hor-right{text-align:right}.w-hor-80pc{width:80%}.w-hor-80vw{width:80vw}.h-hor-80pc{height:80%}.h-hor-80vh{height:80vh}.mb-hor-80pc{margin-bottom:80%}.mr-hor-80pc{margin-right:80%}.text-hor-right{text-align:right}.w-hor-81pc{width:81%}.w-hor-81vw{width:81vw}.h-hor-81pc{height:81%}.h-hor-81vh{height:81vh}.mb-hor-81pc{margin-bottom:81%}.mr-hor-81pc{margin-right:81%}.text-hor-right{text-align:right}.w-hor-82pc{width:82%}.w-hor-82vw{width:82vw}.h-hor-82pc{height:82%}.h-hor-82vh{height:82vh}.mb-hor-82pc{margin-bottom:82%}.mr-hor-82pc{margin-right:82%}.text-hor-right{text-align:right}.w-hor-83pc{width:83%}.w-hor-83vw{width:83vw}.h-hor-83pc{height:83%}.h-hor-83vh{height:83vh}.mb-hor-83pc{margin-bottom:83%}.mr-hor-83pc{margin-right:83%}.text-hor-right{text-align:right}.w-hor-84pc{width:84%}.w-hor-84vw{width:84vw}.h-hor-84pc{height:84%}.h-hor-84vh{height:84vh}.mb-hor-84pc{margin-bottom:84%}.mr-hor-84pc{margin-right:84%}.text-hor-right{text-align:right}.w-hor-85pc{width:85%}.w-hor-85vw{width:85vw}.h-hor-85pc{height:85%}.h-hor-85vh{height:85vh}.mb-hor-85pc{margin-bottom:85%}.mr-hor-85pc{margin-right:85%}.text-hor-right{text-align:right}.w-hor-86pc{width:86%}.w-hor-86vw{width:86vw}.h-hor-86pc{height:86%}.h-hor-86vh{height:86vh}.mb-hor-86pc{margin-bottom:86%}.mr-hor-86pc{margin-right:86%}.text-hor-right{text-align:right}.w-hor-87pc{width:87%}.w-hor-87vw{width:87vw}.h-hor-87pc{height:87%}.h-hor-87vh{height:87vh}.mb-hor-87pc{margin-bottom:87%}.mr-hor-87pc{margin-right:87%}.text-hor-right{text-align:right}.w-hor-88pc{width:88%}.w-hor-88vw{width:88vw}.h-hor-88pc{height:88%}.h-hor-88vh{height:88vh}.mb-hor-88pc{margin-bottom:88%}.mr-hor-88pc{margin-right:88%}.text-hor-right{text-align:right}.w-hor-89pc{width:89%}.w-hor-89vw{width:89vw}.h-hor-89pc{height:89%}.h-hor-89vh{height:89vh}.mb-hor-89pc{margin-bottom:89%}.mr-hor-89pc{margin-right:89%}.text-hor-right{text-align:right}.w-hor-90pc{width:90%}.w-hor-90vw{width:90vw}.h-hor-90pc{height:90%}.h-hor-90vh{height:90vh}.mb-hor-90pc{margin-bottom:90%}.mr-hor-90pc{margin-right:90%}.text-hor-right{text-align:right}.w-hor-91pc{width:91%}.w-hor-91vw{width:91vw}.h-hor-91pc{height:91%}.h-hor-91vh{height:91vh}.mb-hor-91pc{margin-bottom:91%}.mr-hor-91pc{margin-right:91%}.text-hor-right{text-align:right}.w-hor-92pc{width:92%}.w-hor-92vw{width:92vw}.h-hor-92pc{height:92%}.h-hor-92vh{height:92vh}.mb-hor-92pc{margin-bottom:92%}.mr-hor-92pc{margin-right:92%}.text-hor-right{text-align:right}.w-hor-93pc{width:93%}.w-hor-93vw{width:93vw}.h-hor-93pc{height:93%}.h-hor-93vh{height:93vh}.mb-hor-93pc{margin-bottom:93%}.mr-hor-93pc{margin-right:93%}.text-hor-right{text-align:right}.w-hor-94pc{width:94%}.w-hor-94vw{width:94vw}.h-hor-94pc{height:94%}.h-hor-94vh{height:94vh}.mb-hor-94pc{margin-bottom:94%}.mr-hor-94pc{margin-right:94%}.text-hor-right{text-align:right}.w-hor-95pc{width:95%}.w-hor-95vw{width:95vw}.h-hor-95pc{height:95%}.h-hor-95vh{height:95vh}.mb-hor-95pc{margin-bottom:95%}.mr-hor-95pc{margin-right:95%}.text-hor-right{text-align:right}.w-hor-96pc{width:96%}.w-hor-96vw{width:96vw}.h-hor-96pc{height:96%}.h-hor-96vh{height:96vh}.mb-hor-96pc{margin-bottom:96%}.mr-hor-96pc{margin-right:96%}.text-hor-right{text-align:right}.w-hor-97pc{width:97%}.w-hor-97vw{width:97vw}.h-hor-97pc{height:97%}.h-hor-97vh{height:97vh}.mb-hor-97pc{margin-bottom:97%}.mr-hor-97pc{margin-right:97%}.text-hor-right{text-align:right}.w-hor-98pc{width:98%}.w-hor-98vw{width:98vw}.h-hor-98pc{height:98%}.h-hor-98vh{height:98vh}.mb-hor-98pc{margin-bottom:98%}.mr-hor-98pc{margin-right:98%}.text-hor-right{text-align:right}.w-hor-99pc{width:99%}.w-hor-99vw{width:99vw}.h-hor-99pc{height:99%}.h-hor-99vh{height:99vh}.mb-hor-99pc{margin-bottom:99%}.mr-hor-99pc{margin-right:99%}.text-hor-right{text-align:right}.w-hor-100pc{width:100%}.w-hor-100vw{width:100vw}.h-hor-100pc{height:100%}.h-hor-100vh{height:100vh}.mb-hor-100pc{margin-bottom:100%}.mr-hor-100pc{margin-right:100%}.text-hor-right{text-align:right}}@media screen and (min-width: 900px){.w-des-auto{width:auto}.w-des-0pc{width:0%}.w-des-0vw{width:0vw}.h-des-0pc{height:0%}.h-des-0vh{height:0vh}.mb-des-0pc{margin-bottom:0%}.mr-des-0pc{margin-right:0%}.text-des-right{text-align:right}.w-des-1pc{width:1%}.w-des-1vw{width:1vw}.h-des-1pc{height:1%}.h-des-1vh{height:1vh}.mb-des-1pc{margin-bottom:1%}.mr-des-1pc{margin-right:1%}.text-des-right{text-align:right}.w-des-2pc{width:2%}.w-des-2vw{width:2vw}.h-des-2pc{height:2%}.h-des-2vh{height:2vh}.mb-des-2pc{margin-bottom:2%}.mr-des-2pc{margin-right:2%}.text-des-right{text-align:right}.w-des-3pc{width:3%}.w-des-3vw{width:3vw}.h-des-3pc{height:3%}.h-des-3vh{height:3vh}.mb-des-3pc{margin-bottom:3%}.mr-des-3pc{margin-right:3%}.text-des-right{text-align:right}.w-des-4pc{width:4%}.w-des-4vw{width:4vw}.h-des-4pc{height:4%}.h-des-4vh{height:4vh}.mb-des-4pc{margin-bottom:4%}.mr-des-4pc{margin-right:4%}.text-des-right{text-align:right}.w-des-5pc{width:5%}.w-des-5vw{width:5vw}.h-des-5pc{height:5%}.h-des-5vh{height:5vh}.mb-des-5pc{margin-bottom:5%}.mr-des-5pc{margin-right:5%}.text-des-right{text-align:right}.w-des-6pc{width:6%}.w-des-6vw{width:6vw}.h-des-6pc{height:6%}.h-des-6vh{height:6vh}.mb-des-6pc{margin-bottom:6%}.mr-des-6pc{margin-right:6%}.text-des-right{text-align:right}.w-des-7pc{width:7%}.w-des-7vw{width:7vw}.h-des-7pc{height:7%}.h-des-7vh{height:7vh}.mb-des-7pc{margin-bottom:7%}.mr-des-7pc{margin-right:7%}.text-des-right{text-align:right}.w-des-8pc{width:8%}.w-des-8vw{width:8vw}.h-des-8pc{height:8%}.h-des-8vh{height:8vh}.mb-des-8pc{margin-bottom:8%}.mr-des-8pc{margin-right:8%}.text-des-right{text-align:right}.w-des-9pc{width:9%}.w-des-9vw{width:9vw}.h-des-9pc{height:9%}.h-des-9vh{height:9vh}.mb-des-9pc{margin-bottom:9%}.mr-des-9pc{margin-right:9%}.text-des-right{text-align:right}.w-des-10pc{width:10%}.w-des-10vw{width:10vw}.h-des-10pc{height:10%}.h-des-10vh{height:10vh}.mb-des-10pc{margin-bottom:10%}.mr-des-10pc{margin-right:10%}.text-des-right{text-align:right}.w-des-11pc{width:11%}.w-des-11vw{width:11vw}.h-des-11pc{height:11%}.h-des-11vh{height:11vh}.mb-des-11pc{margin-bottom:11%}.mr-des-11pc{margin-right:11%}.text-des-right{text-align:right}.w-des-12pc{width:12%}.w-des-12vw{width:12vw}.h-des-12pc{height:12%}.h-des-12vh{height:12vh}.mb-des-12pc{margin-bottom:12%}.mr-des-12pc{margin-right:12%}.text-des-right{text-align:right}.w-des-13pc{width:13%}.w-des-13vw{width:13vw}.h-des-13pc{height:13%}.h-des-13vh{height:13vh}.mb-des-13pc{margin-bottom:13%}.mr-des-13pc{margin-right:13%}.text-des-right{text-align:right}.w-des-14pc{width:14%}.w-des-14vw{width:14vw}.h-des-14pc{height:14%}.h-des-14vh{height:14vh}.mb-des-14pc{margin-bottom:14%}.mr-des-14pc{margin-right:14%}.text-des-right{text-align:right}.w-des-15pc{width:15%}.w-des-15vw{width:15vw}.h-des-15pc{height:15%}.h-des-15vh{height:15vh}.mb-des-15pc{margin-bottom:15%}.mr-des-15pc{margin-right:15%}.text-des-right{text-align:right}.w-des-16pc{width:16%}.w-des-16vw{width:16vw}.h-des-16pc{height:16%}.h-des-16vh{height:16vh}.mb-des-16pc{margin-bottom:16%}.mr-des-16pc{margin-right:16%}.text-des-right{text-align:right}.w-des-17pc{width:17%}.w-des-17vw{width:17vw}.h-des-17pc{height:17%}.h-des-17vh{height:17vh}.mb-des-17pc{margin-bottom:17%}.mr-des-17pc{margin-right:17%}.text-des-right{text-align:right}.w-des-18pc{width:18%}.w-des-18vw{width:18vw}.h-des-18pc{height:18%}.h-des-18vh{height:18vh}.mb-des-18pc{margin-bottom:18%}.mr-des-18pc{margin-right:18%}.text-des-right{text-align:right}.w-des-19pc{width:19%}.w-des-19vw{width:19vw}.h-des-19pc{height:19%}.h-des-19vh{height:19vh}.mb-des-19pc{margin-bottom:19%}.mr-des-19pc{margin-right:19%}.text-des-right{text-align:right}.w-des-20pc{width:20%}.w-des-20vw{width:20vw}.h-des-20pc{height:20%}.h-des-20vh{height:20vh}.mb-des-20pc{margin-bottom:20%}.mr-des-20pc{margin-right:20%}.text-des-right{text-align:right}.w-des-21pc{width:21%}.w-des-21vw{width:21vw}.h-des-21pc{height:21%}.h-des-21vh{height:21vh}.mb-des-21pc{margin-bottom:21%}.mr-des-21pc{margin-right:21%}.text-des-right{text-align:right}.w-des-22pc{width:22%}.w-des-22vw{width:22vw}.h-des-22pc{height:22%}.h-des-22vh{height:22vh}.mb-des-22pc{margin-bottom:22%}.mr-des-22pc{margin-right:22%}.text-des-right{text-align:right}.w-des-23pc{width:23%}.w-des-23vw{width:23vw}.h-des-23pc{height:23%}.h-des-23vh{height:23vh}.mb-des-23pc{margin-bottom:23%}.mr-des-23pc{margin-right:23%}.text-des-right{text-align:right}.w-des-24pc{width:24%}.w-des-24vw{width:24vw}.h-des-24pc{height:24%}.h-des-24vh{height:24vh}.mb-des-24pc{margin-bottom:24%}.mr-des-24pc{margin-right:24%}.text-des-right{text-align:right}.w-des-25pc{width:25%}.w-des-25vw{width:25vw}.h-des-25pc{height:25%}.h-des-25vh{height:25vh}.mb-des-25pc{margin-bottom:25%}.mr-des-25pc{margin-right:25%}.text-des-right{text-align:right}.w-des-26pc{width:26%}.w-des-26vw{width:26vw}.h-des-26pc{height:26%}.h-des-26vh{height:26vh}.mb-des-26pc{margin-bottom:26%}.mr-des-26pc{margin-right:26%}.text-des-right{text-align:right}.w-des-27pc{width:27%}.w-des-27vw{width:27vw}.h-des-27pc{height:27%}.h-des-27vh{height:27vh}.mb-des-27pc{margin-bottom:27%}.mr-des-27pc{margin-right:27%}.text-des-right{text-align:right}.w-des-28pc{width:28%}.w-des-28vw{width:28vw}.h-des-28pc{height:28%}.h-des-28vh{height:28vh}.mb-des-28pc{margin-bottom:28%}.mr-des-28pc{margin-right:28%}.text-des-right{text-align:right}.w-des-29pc{width:29%}.w-des-29vw{width:29vw}.h-des-29pc{height:29%}.h-des-29vh{height:29vh}.mb-des-29pc{margin-bottom:29%}.mr-des-29pc{margin-right:29%}.text-des-right{text-align:right}.w-des-30pc{width:30%}.w-des-30vw{width:30vw}.h-des-30pc{height:30%}.h-des-30vh{height:30vh}.mb-des-30pc{margin-bottom:30%}.mr-des-30pc{margin-right:30%}.text-des-right{text-align:right}.w-des-31pc{width:31%}.w-des-31vw{width:31vw}.h-des-31pc{height:31%}.h-des-31vh{height:31vh}.mb-des-31pc{margin-bottom:31%}.mr-des-31pc{margin-right:31%}.text-des-right{text-align:right}.w-des-32pc{width:32%}.w-des-32vw{width:32vw}.h-des-32pc{height:32%}.h-des-32vh{height:32vh}.mb-des-32pc{margin-bottom:32%}.mr-des-32pc{margin-right:32%}.text-des-right{text-align:right}.w-des-33pc{width:33%}.w-des-33vw{width:33vw}.h-des-33pc{height:33%}.h-des-33vh{height:33vh}.mb-des-33pc{margin-bottom:33%}.mr-des-33pc{margin-right:33%}.text-des-right{text-align:right}.w-des-34pc{width:34%}.w-des-34vw{width:34vw}.h-des-34pc{height:34%}.h-des-34vh{height:34vh}.mb-des-34pc{margin-bottom:34%}.mr-des-34pc{margin-right:34%}.text-des-right{text-align:right}.w-des-35pc{width:35%}.w-des-35vw{width:35vw}.h-des-35pc{height:35%}.h-des-35vh{height:35vh}.mb-des-35pc{margin-bottom:35%}.mr-des-35pc{margin-right:35%}.text-des-right{text-align:right}.w-des-36pc{width:36%}.w-des-36vw{width:36vw}.h-des-36pc{height:36%}.h-des-36vh{height:36vh}.mb-des-36pc{margin-bottom:36%}.mr-des-36pc{margin-right:36%}.text-des-right{text-align:right}.w-des-37pc{width:37%}.w-des-37vw{width:37vw}.h-des-37pc{height:37%}.h-des-37vh{height:37vh}.mb-des-37pc{margin-bottom:37%}.mr-des-37pc{margin-right:37%}.text-des-right{text-align:right}.w-des-38pc{width:38%}.w-des-38vw{width:38vw}.h-des-38pc{height:38%}.h-des-38vh{height:38vh}.mb-des-38pc{margin-bottom:38%}.mr-des-38pc{margin-right:38%}.text-des-right{text-align:right}.w-des-39pc{width:39%}.w-des-39vw{width:39vw}.h-des-39pc{height:39%}.h-des-39vh{height:39vh}.mb-des-39pc{margin-bottom:39%}.mr-des-39pc{margin-right:39%}.text-des-right{text-align:right}.w-des-40pc{width:40%}.w-des-40vw{width:40vw}.h-des-40pc{height:40%}.h-des-40vh{height:40vh}.mb-des-40pc{margin-bottom:40%}.mr-des-40pc{margin-right:40%}.text-des-right{text-align:right}.w-des-41pc{width:41%}.w-des-41vw{width:41vw}.h-des-41pc{height:41%}.h-des-41vh{height:41vh}.mb-des-41pc{margin-bottom:41%}.mr-des-41pc{margin-right:41%}.text-des-right{text-align:right}.w-des-42pc{width:42%}.w-des-42vw{width:42vw}.h-des-42pc{height:42%}.h-des-42vh{height:42vh}.mb-des-42pc{margin-bottom:42%}.mr-des-42pc{margin-right:42%}.text-des-right{text-align:right}.w-des-43pc{width:43%}.w-des-43vw{width:43vw}.h-des-43pc{height:43%}.h-des-43vh{height:43vh}.mb-des-43pc{margin-bottom:43%}.mr-des-43pc{margin-right:43%}.text-des-right{text-align:right}.w-des-44pc{width:44%}.w-des-44vw{width:44vw}.h-des-44pc{height:44%}.h-des-44vh{height:44vh}.mb-des-44pc{margin-bottom:44%}.mr-des-44pc{margin-right:44%}.text-des-right{text-align:right}.w-des-45pc{width:45%}.w-des-45vw{width:45vw}.h-des-45pc{height:45%}.h-des-45vh{height:45vh}.mb-des-45pc{margin-bottom:45%}.mr-des-45pc{margin-right:45%}.text-des-right{text-align:right}.w-des-46pc{width:46%}.w-des-46vw{width:46vw}.h-des-46pc{height:46%}.h-des-46vh{height:46vh}.mb-des-46pc{margin-bottom:46%}.mr-des-46pc{margin-right:46%}.text-des-right{text-align:right}.w-des-47pc{width:47%}.w-des-47vw{width:47vw}.h-des-47pc{height:47%}.h-des-47vh{height:47vh}.mb-des-47pc{margin-bottom:47%}.mr-des-47pc{margin-right:47%}.text-des-right{text-align:right}.w-des-48pc{width:48%}.w-des-48vw{width:48vw}.h-des-48pc{height:48%}.h-des-48vh{height:48vh}.mb-des-48pc{margin-bottom:48%}.mr-des-48pc{margin-right:48%}.text-des-right{text-align:right}.w-des-49pc{width:49%}.w-des-49vw{width:49vw}.h-des-49pc{height:49%}.h-des-49vh{height:49vh}.mb-des-49pc{margin-bottom:49%}.mr-des-49pc{margin-right:49%}.text-des-right{text-align:right}.w-des-50pc{width:50%}.w-des-50vw{width:50vw}.h-des-50pc{height:50%}.h-des-50vh{height:50vh}.mb-des-50pc{margin-bottom:50%}.mr-des-50pc{margin-right:50%}.text-des-right{text-align:right}.w-des-51pc{width:51%}.w-des-51vw{width:51vw}.h-des-51pc{height:51%}.h-des-51vh{height:51vh}.mb-des-51pc{margin-bottom:51%}.mr-des-51pc{margin-right:51%}.text-des-right{text-align:right}.w-des-52pc{width:52%}.w-des-52vw{width:52vw}.h-des-52pc{height:52%}.h-des-52vh{height:52vh}.mb-des-52pc{margin-bottom:52%}.mr-des-52pc{margin-right:52%}.text-des-right{text-align:right}.w-des-53pc{width:53%}.w-des-53vw{width:53vw}.h-des-53pc{height:53%}.h-des-53vh{height:53vh}.mb-des-53pc{margin-bottom:53%}.mr-des-53pc{margin-right:53%}.text-des-right{text-align:right}.w-des-54pc{width:54%}.w-des-54vw{width:54vw}.h-des-54pc{height:54%}.h-des-54vh{height:54vh}.mb-des-54pc{margin-bottom:54%}.mr-des-54pc{margin-right:54%}.text-des-right{text-align:right}.w-des-55pc{width:55%}.w-des-55vw{width:55vw}.h-des-55pc{height:55%}.h-des-55vh{height:55vh}.mb-des-55pc{margin-bottom:55%}.mr-des-55pc{margin-right:55%}.text-des-right{text-align:right}.w-des-56pc{width:56%}.w-des-56vw{width:56vw}.h-des-56pc{height:56%}.h-des-56vh{height:56vh}.mb-des-56pc{margin-bottom:56%}.mr-des-56pc{margin-right:56%}.text-des-right{text-align:right}.w-des-57pc{width:57%}.w-des-57vw{width:57vw}.h-des-57pc{height:57%}.h-des-57vh{height:57vh}.mb-des-57pc{margin-bottom:57%}.mr-des-57pc{margin-right:57%}.text-des-right{text-align:right}.w-des-58pc{width:58%}.w-des-58vw{width:58vw}.h-des-58pc{height:58%}.h-des-58vh{height:58vh}.mb-des-58pc{margin-bottom:58%}.mr-des-58pc{margin-right:58%}.text-des-right{text-align:right}.w-des-59pc{width:59%}.w-des-59vw{width:59vw}.h-des-59pc{height:59%}.h-des-59vh{height:59vh}.mb-des-59pc{margin-bottom:59%}.mr-des-59pc{margin-right:59%}.text-des-right{text-align:right}.w-des-60pc{width:60%}.w-des-60vw{width:60vw}.h-des-60pc{height:60%}.h-des-60vh{height:60vh}.mb-des-60pc{margin-bottom:60%}.mr-des-60pc{margin-right:60%}.text-des-right{text-align:right}.w-des-61pc{width:61%}.w-des-61vw{width:61vw}.h-des-61pc{height:61%}.h-des-61vh{height:61vh}.mb-des-61pc{margin-bottom:61%}.mr-des-61pc{margin-right:61%}.text-des-right{text-align:right}.w-des-62pc{width:62%}.w-des-62vw{width:62vw}.h-des-62pc{height:62%}.h-des-62vh{height:62vh}.mb-des-62pc{margin-bottom:62%}.mr-des-62pc{margin-right:62%}.text-des-right{text-align:right}.w-des-63pc{width:63%}.w-des-63vw{width:63vw}.h-des-63pc{height:63%}.h-des-63vh{height:63vh}.mb-des-63pc{margin-bottom:63%}.mr-des-63pc{margin-right:63%}.text-des-right{text-align:right}.w-des-64pc{width:64%}.w-des-64vw{width:64vw}.h-des-64pc{height:64%}.h-des-64vh{height:64vh}.mb-des-64pc{margin-bottom:64%}.mr-des-64pc{margin-right:64%}.text-des-right{text-align:right}.w-des-65pc{width:65%}.w-des-65vw{width:65vw}.h-des-65pc{height:65%}.h-des-65vh{height:65vh}.mb-des-65pc{margin-bottom:65%}.mr-des-65pc{margin-right:65%}.text-des-right{text-align:right}.w-des-66pc{width:66%}.w-des-66vw{width:66vw}.h-des-66pc{height:66%}.h-des-66vh{height:66vh}.mb-des-66pc{margin-bottom:66%}.mr-des-66pc{margin-right:66%}.text-des-right{text-align:right}.w-des-67pc{width:67%}.w-des-67vw{width:67vw}.h-des-67pc{height:67%}.h-des-67vh{height:67vh}.mb-des-67pc{margin-bottom:67%}.mr-des-67pc{margin-right:67%}.text-des-right{text-align:right}.w-des-68pc{width:68%}.w-des-68vw{width:68vw}.h-des-68pc{height:68%}.h-des-68vh{height:68vh}.mb-des-68pc{margin-bottom:68%}.mr-des-68pc{margin-right:68%}.text-des-right{text-align:right}.w-des-69pc{width:69%}.w-des-69vw{width:69vw}.h-des-69pc{height:69%}.h-des-69vh{height:69vh}.mb-des-69pc{margin-bottom:69%}.mr-des-69pc{margin-right:69%}.text-des-right{text-align:right}.w-des-70pc{width:70%}.w-des-70vw{width:70vw}.h-des-70pc{height:70%}.h-des-70vh{height:70vh}.mb-des-70pc{margin-bottom:70%}.mr-des-70pc{margin-right:70%}.text-des-right{text-align:right}.w-des-71pc{width:71%}.w-des-71vw{width:71vw}.h-des-71pc{height:71%}.h-des-71vh{height:71vh}.mb-des-71pc{margin-bottom:71%}.mr-des-71pc{margin-right:71%}.text-des-right{text-align:right}.w-des-72pc{width:72%}.w-des-72vw{width:72vw}.h-des-72pc{height:72%}.h-des-72vh{height:72vh}.mb-des-72pc{margin-bottom:72%}.mr-des-72pc{margin-right:72%}.text-des-right{text-align:right}.w-des-73pc{width:73%}.w-des-73vw{width:73vw}.h-des-73pc{height:73%}.h-des-73vh{height:73vh}.mb-des-73pc{margin-bottom:73%}.mr-des-73pc{margin-right:73%}.text-des-right{text-align:right}.w-des-74pc{width:74%}.w-des-74vw{width:74vw}.h-des-74pc{height:74%}.h-des-74vh{height:74vh}.mb-des-74pc{margin-bottom:74%}.mr-des-74pc{margin-right:74%}.text-des-right{text-align:right}.w-des-75pc{width:75%}.w-des-75vw{width:75vw}.h-des-75pc{height:75%}.h-des-75vh{height:75vh}.mb-des-75pc{margin-bottom:75%}.mr-des-75pc{margin-right:75%}.text-des-right{text-align:right}.w-des-76pc{width:76%}.w-des-76vw{width:76vw}.h-des-76pc{height:76%}.h-des-76vh{height:76vh}.mb-des-76pc{margin-bottom:76%}.mr-des-76pc{margin-right:76%}.text-des-right{text-align:right}.w-des-77pc{width:77%}.w-des-77vw{width:77vw}.h-des-77pc{height:77%}.h-des-77vh{height:77vh}.mb-des-77pc{margin-bottom:77%}.mr-des-77pc{margin-right:77%}.text-des-right{text-align:right}.w-des-78pc{width:78%}.w-des-78vw{width:78vw}.h-des-78pc{height:78%}.h-des-78vh{height:78vh}.mb-des-78pc{margin-bottom:78%}.mr-des-78pc{margin-right:78%}.text-des-right{text-align:right}.w-des-79pc{width:79%}.w-des-79vw{width:79vw}.h-des-79pc{height:79%}.h-des-79vh{height:79vh}.mb-des-79pc{margin-bottom:79%}.mr-des-79pc{margin-right:79%}.text-des-right{text-align:right}.w-des-80pc{width:80%}.w-des-80vw{width:80vw}.h-des-80pc{height:80%}.h-des-80vh{height:80vh}.mb-des-80pc{margin-bottom:80%}.mr-des-80pc{margin-right:80%}.text-des-right{text-align:right}.w-des-81pc{width:81%}.w-des-81vw{width:81vw}.h-des-81pc{height:81%}.h-des-81vh{height:81vh}.mb-des-81pc{margin-bottom:81%}.mr-des-81pc{margin-right:81%}.text-des-right{text-align:right}.w-des-82pc{width:82%}.w-des-82vw{width:82vw}.h-des-82pc{height:82%}.h-des-82vh{height:82vh}.mb-des-82pc{margin-bottom:82%}.mr-des-82pc{margin-right:82%}.text-des-right{text-align:right}.w-des-83pc{width:83%}.w-des-83vw{width:83vw}.h-des-83pc{height:83%}.h-des-83vh{height:83vh}.mb-des-83pc{margin-bottom:83%}.mr-des-83pc{margin-right:83%}.text-des-right{text-align:right}.w-des-84pc{width:84%}.w-des-84vw{width:84vw}.h-des-84pc{height:84%}.h-des-84vh{height:84vh}.mb-des-84pc{margin-bottom:84%}.mr-des-84pc{margin-right:84%}.text-des-right{text-align:right}.w-des-85pc{width:85%}.w-des-85vw{width:85vw}.h-des-85pc{height:85%}.h-des-85vh{height:85vh}.mb-des-85pc{margin-bottom:85%}.mr-des-85pc{margin-right:85%}.text-des-right{text-align:right}.w-des-86pc{width:86%}.w-des-86vw{width:86vw}.h-des-86pc{height:86%}.h-des-86vh{height:86vh}.mb-des-86pc{margin-bottom:86%}.mr-des-86pc{margin-right:86%}.text-des-right{text-align:right}.w-des-87pc{width:87%}.w-des-87vw{width:87vw}.h-des-87pc{height:87%}.h-des-87vh{height:87vh}.mb-des-87pc{margin-bottom:87%}.mr-des-87pc{margin-right:87%}.text-des-right{text-align:right}.w-des-88pc{width:88%}.w-des-88vw{width:88vw}.h-des-88pc{height:88%}.h-des-88vh{height:88vh}.mb-des-88pc{margin-bottom:88%}.mr-des-88pc{margin-right:88%}.text-des-right{text-align:right}.w-des-89pc{width:89%}.w-des-89vw{width:89vw}.h-des-89pc{height:89%}.h-des-89vh{height:89vh}.mb-des-89pc{margin-bottom:89%}.mr-des-89pc{margin-right:89%}.text-des-right{text-align:right}.w-des-90pc{width:90%}.w-des-90vw{width:90vw}.h-des-90pc{height:90%}.h-des-90vh{height:90vh}.mb-des-90pc{margin-bottom:90%}.mr-des-90pc{margin-right:90%}.text-des-right{text-align:right}.w-des-91pc{width:91%}.w-des-91vw{width:91vw}.h-des-91pc{height:91%}.h-des-91vh{height:91vh}.mb-des-91pc{margin-bottom:91%}.mr-des-91pc{margin-right:91%}.text-des-right{text-align:right}.w-des-92pc{width:92%}.w-des-92vw{width:92vw}.h-des-92pc{height:92%}.h-des-92vh{height:92vh}.mb-des-92pc{margin-bottom:92%}.mr-des-92pc{margin-right:92%}.text-des-right{text-align:right}.w-des-93pc{width:93%}.w-des-93vw{width:93vw}.h-des-93pc{height:93%}.h-des-93vh{height:93vh}.mb-des-93pc{margin-bottom:93%}.mr-des-93pc{margin-right:93%}.text-des-right{text-align:right}.w-des-94pc{width:94%}.w-des-94vw{width:94vw}.h-des-94pc{height:94%}.h-des-94vh{height:94vh}.mb-des-94pc{margin-bottom:94%}.mr-des-94pc{margin-right:94%}.text-des-right{text-align:right}.w-des-95pc{width:95%}.w-des-95vw{width:95vw}.h-des-95pc{height:95%}.h-des-95vh{height:95vh}.mb-des-95pc{margin-bottom:95%}.mr-des-95pc{margin-right:95%}.text-des-right{text-align:right}.w-des-96pc{width:96%}.w-des-96vw{width:96vw}.h-des-96pc{height:96%}.h-des-96vh{height:96vh}.mb-des-96pc{margin-bottom:96%}.mr-des-96pc{margin-right:96%}.text-des-right{text-align:right}.w-des-97pc{width:97%}.w-des-97vw{width:97vw}.h-des-97pc{height:97%}.h-des-97vh{height:97vh}.mb-des-97pc{margin-bottom:97%}.mr-des-97pc{margin-right:97%}.text-des-right{text-align:right}.w-des-98pc{width:98%}.w-des-98vw{width:98vw}.h-des-98pc{height:98%}.h-des-98vh{height:98vh}.mb-des-98pc{margin-bottom:98%}.mr-des-98pc{margin-right:98%}.text-des-right{text-align:right}.w-des-99pc{width:99%}.w-des-99vw{width:99vw}.h-des-99pc{height:99%}.h-des-99vh{height:99vh}.mb-des-99pc{margin-bottom:99%}.mr-des-99pc{margin-right:99%}.text-des-right{text-align:right}.w-des-100pc{width:100%}.w-des-100vw{width:100vw}.h-des-100pc{height:100%}.h-des-100vh{height:100vh}.mb-des-100pc{margin-bottom:100%}.mr-des-100pc{margin-right:100%}.text-des-right{text-align:right}}`, "",{"version":3,"sources":["webpack://./frontend/styles/main.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AASA,WACI,UAAA,CACA,cAAA,CACA,SAAA,CACA,QAAA,CAGJ,4EAEE,uBAAA,CACA,QAAA,CAGF,OACI,eAAA,CAGJ,YACI,WAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CACA,kBAAA,CAGJ,SACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CAKA,UAAA,wBC/BK,CDgCL,UAAA,aChCK,CD+BL,UAAA,wBC/BK,CDgCL,UAAA,aChCK,CD+BL,UAAA,wBC/BK,CDgCL,UAAA,aChCK,CDTL,mCAkDI,SAAA,UAAA,CAEI,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,QAAA,QAAA,CACA,QAAA,SAAA,CACA,QAAA,SAAA,CACA,QAAA,UAAA,CACA,SAAA,gBAAA,CACA,SAAA,eAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,SAAA,SAAA,CACA,SAAA,UAAA,CACA,SAAA,UAAA,CACA,SAAA,WAAA,CACA,UAAA,iBAAA,CACA,UAAA,gBAAA,CACA,aAAA,gBAAA,CANA,UAAA,UAAA,CACA,UAAA,WAAA,CACA,UAAA,WAAA,CACA,UAAA,YAAA,CACA,WAAA,kBAAA,CACA,WAAA,iBAAA,CACA,aAAA,gBAAA,CAAA,CA1DR,qCAkDI,YAAA,UAAA,CAEI,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,aAAA,UAAA,CACA,aAAA,WAAA,CACA,aAAA,WAAA,CACA,aAAA,YAAA,CACA,cAAA,kBAAA,CACA,cAAA,iBAAA,CACA,gBAAA,gBAAA,CAAA,CA1DR,qCAkDI,YAAA,UAAA,CAEI,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,WAAA,QAAA,CACA,WAAA,SAAA,CACA,WAAA,SAAA,CACA,WAAA,UAAA,CACA,YAAA,gBAAA,CACA,YAAA,eAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,YAAA,SAAA,CACA,YAAA,UAAA,CACA,YAAA,UAAA,CACA,YAAA,WAAA,CACA,aAAA,iBAAA,CACA,aAAA,gBAAA,CACA,gBAAA,gBAAA,CANA,aAAA,UAAA,CACA,aAAA,WAAA,CACA,aAAA,WAAA,CACA,aAAA,YAAA,CACA,cAAA,kBAAA,CACA,cAAA,iBAAA,CACA,gBAAA,gBAAA,CAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\n@mixin breakpoint($size: 0px) {\\r\\n    @media screen and (min-width: $size) {\\r\\n        @content\\r\\n    }\\r\\n};\\r\\n\\r\\ninput.inpN {\\r\\n    width: 17px;\\r\\n    text-align: end;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\ninput.inpN::-webkit-outer-spin-button,\\r\\ninput.inpN::-webkit-inner-spin-button {\\r\\n  -webkit-appearance: none;\\r\\n  margin: 0;\\r\\n};\\r\\n\\r\\nstrong {\\r\\n    font-weight: 600;\\r\\n};\\r\\n\\r\\n.flexColumn {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n};\\r\\n\\r\\n.flexRow {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n};\\r\\n\\r\\n\\r\\n@each $colorName, $color in vars.$colors {\\r\\n    .bg-#{$colorName} {background-color: $color;}\\r\\n    .cc-#{$colorName} {color: $color;}\\r\\n};\\r\\n\\r\\n@each $breakpoint, $breakwidth in vars.$breakpoints {\\r\\n    @include breakpoint($breakwidth) {\\r\\n        \\r\\n        // breakpont specific content here:\\r\\n\\r\\n        // widths\\r\\n        .w-#{$breakpoint}-auto {width: auto;}\\r\\n        @for $percent from 0 through 100 {\\r\\n            .w-#{$breakpoint}-#{$percent}pc {width: $percent*1%}\\r\\n            .w-#{$breakpoint}-#{$percent}vw {width: $percent*1vw}\\r\\n            .h-#{$breakpoint}-#{$percent}pc {height: $percent*1%}\\r\\n            .h-#{$breakpoint}-#{$percent}vh {height: $percent*1vh}\\r\\n            .mb-#{$breakpoint}-#{$percent}pc {margin-bottom: $percent*1%;}\\r\\n            .mr-#{$breakpoint}-#{$percent}pc {margin-right: $percent*1%;}\\r\\n            .text-#{$breakpoint}-right {text-align: right}\\r\\n        }\\r\\n    }\\r\\n};\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///33\n')},756:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.board{position:absolute;z-index:0;width:100%;height:100%;margin:-5px;overflow:hidden}div.boardImg{background-position:cover}div.overboard{z-index:1;position:relative;border:solid #000 1px;border-radius:5px;background-color:#d9d9d9;padding:5px}div.overlay{height:100%;display:flex;justify-content:space-between;align-items:start}div.down{align-items:end !important}div.currentArea{margin-top:20px;margin-left:20px}div.mapAreas{margin-top:20px;margin-right:20px}div.textEntryRow{display:flex;justify-content:space-between}input.textEntryInput{background-color:#d0d0d0;border:solid #959595 1px;width:50%;text-align:end;color:#000}select.selectType{background-color:#d0d0d0}div.currentButtonsRow{display:flex;justify-content:space-evenly}`, "",{"version":3,"sources":["webpack://./frontend/styles/mapeditor.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAGA,UACI,iBAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,eAAA,CAGJ,aACI,yBAAA,CAGJ,cACI,SAAA,CACA,iBAAA,CACA,qBAAA,CACA,iBAAA,CACA,wBChBI,CDiBJ,WCNK,CDST,YACI,WAAA,CACA,YAAA,CACA,6BAAA,CACA,iBAAA,CAGJ,SACI,0BAAA,CAGJ,gBACI,eAAA,CACA,gBAAA,CAGJ,aACI,eAAA,CACA,iBAAA,CAGJ,iBACI,YAAA,CACA,6BAAA,CAGJ,qBACI,wBC9CI,CD+CJ,wBAAA,CACA,SAAA,CACA,cAAA,CACA,UC/CG,CDkDP,kBACI,wBCtDI,CDyDR,sBACI,YAAA,CACA,4BAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\ndiv.board {\\r\\n    position: absolute;\\r\\n    z-index: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    margin: -1 * vars.$spacer;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\ndiv.boardImg {\\r\\n    background-position: cover;\\r\\n}\\r\\n\\r\\ndiv.overboard {\\r\\n    z-index: 1;\\r\\n    position: relative;\\r\\n    border: solid black 1px;\\r\\n    border-radius: 5px;\\r\\n    background-color: vars.$page0;\\r\\n    padding: vars.$spacer;\\r\\n}\\r\\n\\r\\ndiv.overlay {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: start;\\r\\n}\\r\\n\\r\\ndiv.down {\\r\\n    align-items: end !important;\\r\\n}\\r\\n\\r\\ndiv.currentArea {\\r\\n    margin-top: 4*vars.$spacer;\\r\\n    margin-left: 4*vars.$spacer;\\r\\n}\\r\\n\\r\\ndiv.mapAreas {    \\r\\n    margin-top: 4*vars.$spacer;\\r\\n    margin-right: 4*vars.$spacer;\\r\\n}\\r\\n\\r\\ndiv.textEntryRow {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\ninput.textEntryInput {\\r\\n    background-color: vars.$page1;\\r\\n    border: solid vars.$page2 1px;\\r\\n    width: 50%;\\r\\n    text-align: end;\\r\\n    color: vars.$dark;\\r\\n}\\r\\n\\r\\nselect.selectType {\\r\\n    background-color: vars.$page1;\\r\\n}\\r\\n\\r\\ndiv.currentButtonsRow {\\r\\n    display: flex;\\r\\n    justify-content: space-evenly;\\r\\n}","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzU2LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0Esb0RBQW9ELGtCQUFrQixVQUFVLFdBQVcsWUFBWSxZQUFZLGdCQUFnQixhQUFhLDBCQUEwQixjQUFjLFVBQVUsa0JBQWtCLHNCQUFzQixrQkFBa0IseUJBQXlCLFlBQVksWUFBWSxZQUFZLGFBQWEsOEJBQThCLGtCQUFrQixTQUFTLDJCQUEyQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixhQUFhLGdCQUFnQixrQkFBa0IsaUJBQWlCLGFBQWEsOEJBQThCLHFCQUFxQix5QkFBeUIseUJBQXlCLFVBQVUsZUFBZSxXQUFXLGtCQUFrQix5QkFBeUIsc0JBQXNCLGFBQWEsNkJBQTZCLE9BQU8sNGpCQUE0akIsbUJBQW1CLDJCQUEyQixtQkFBbUIsb0JBQW9CLHFCQUFxQixrQ0FBa0MseUJBQXlCLEtBQUssc0JBQXNCLG1DQUFtQyxLQUFLLHVCQUF1QixtQkFBbUIsMkJBQTJCLGdDQUFnQywyQkFBMkIsc0NBQXNDLDhCQUE4QixLQUFLLHFCQUFxQixxQkFBcUIsc0JBQXNCLHVDQUF1QywyQkFBMkIsS0FBSyxrQkFBa0Isb0NBQW9DLEtBQUsseUJBQXlCLG1DQUFtQyxvQ0FBb0MsS0FBSywwQkFBMEIsbUNBQW1DLHFDQUFxQyxLQUFLLDBCQUEwQixzQkFBc0IsdUNBQXVDLEtBQUssOEJBQThCLHNDQUFzQyxzQ0FBc0MsbUJBQW1CLHdCQUF3QiwwQkFBMEIsS0FBSywyQkFBMkIsc0NBQXNDLEtBQUssK0JBQStCLHNCQUFzQixzQ0FBc0MsS0FBSywrQkFBK0IscUJBQXFCLHFCQUFxQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0IsaUJBQWlCLDZCQUE2QixxRUFBcUUsbUNBQW1DLHlFQUF5RSwrQkFBK0I7QUFDMzlGO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL2Zyb250ZW5kL3N0eWxlcy9tYXBlZGl0b3Iuc2Nzcz9jZDhiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBkaXYuYm9hcmR7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bWFyZ2luOi01cHg7b3ZlcmZsb3c6aGlkZGVufWRpdi5ib2FyZEltZ3tiYWNrZ3JvdW5kLXBvc2l0aW9uOmNvdmVyfWRpdi5vdmVyYm9hcmR7ei1pbmRleDoxO3Bvc2l0aW9uOnJlbGF0aXZlO2JvcmRlcjpzb2xpZCAjMDAwIDFweDtib3JkZXItcmFkaXVzOjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNkOWQ5ZDk7cGFkZGluZzo1cHh9ZGl2Lm92ZXJsYXl7aGVpZ2h0OjEwMCU7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOnN0YXJ0fWRpdi5kb3due2FsaWduLWl0ZW1zOmVuZCAhaW1wb3J0YW50fWRpdi5jdXJyZW50QXJlYXttYXJnaW4tdG9wOjIwcHg7bWFyZ2luLWxlZnQ6MjBweH1kaXYubWFwQXJlYXN7bWFyZ2luLXRvcDoyMHB4O21hcmdpbi1yaWdodDoyMHB4fWRpdi50ZXh0RW50cnlSb3d7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufWlucHV0LnRleHRFbnRyeUlucHV0e2JhY2tncm91bmQtY29sb3I6I2QwZDBkMDtib3JkZXI6c29saWQgIzk1OTU5NSAxcHg7d2lkdGg6NTAlO3RleHQtYWxpZ246ZW5kO2NvbG9yOiMwMDB9c2VsZWN0LnNlbGVjdFR5cGV7YmFja2dyb3VuZC1jb2xvcjojZDBkMGQwfWRpdi5jdXJyZW50QnV0dG9uc1Jvd3tkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWV2ZW5seX1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy9tYXBlZGl0b3Iuc2Nzc1wiLFwid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL3ZhcnMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQSxVQUNJLGlCQUFBLENBQ0EsU0FBQSxDQUNBLFVBQUEsQ0FDQSxXQUFBLENBQ0EsV0FBQSxDQUNBLGVBQUEsQ0FHSixhQUNJLHlCQUFBLENBR0osY0FDSSxTQUFBLENBQ0EsaUJBQUEsQ0FDQSxxQkFBQSxDQUNBLGlCQUFBLENBQ0Esd0JDaEJJLENEaUJKLFdDTkssQ0RTVCxZQUNJLFdBQUEsQ0FDQSxZQUFBLENBQ0EsNkJBQUEsQ0FDQSxpQkFBQSxDQUdKLFNBQ0ksMEJBQUEsQ0FHSixnQkFDSSxlQUFBLENBQ0EsZ0JBQUEsQ0FHSixhQUNJLGVBQUEsQ0FDQSxpQkFBQSxDQUdKLGlCQUNJLFlBQUEsQ0FDQSw2QkFBQSxDQUdKLHFCQUNJLHdCQzlDSSxDRCtDSix3QkFBQSxDQUNBLFNBQUEsQ0FDQSxjQUFBLENBQ0EsVUMvQ0csQ0RrRFAsa0JBQ0ksd0JDdERJLENEeURSLHNCQUNJLFlBQUEsQ0FDQSw0QkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJcXHJcXG5AdXNlICd2YXJzJztcXHJcXG5cXHJcXG5kaXYuYm9hcmQge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIHotaW5kZXg6IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIG1hcmdpbjogLTEgKiB2YXJzLiRzcGFjZXI7XFxyXFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbmRpdi5ib2FyZEltZyB7XFxyXFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNvdmVyO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYub3ZlcmJvYXJkIHtcXHJcXG4gICAgei1pbmRleDogMTtcXHJcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgICBib3JkZXI6IHNvbGlkIGJsYWNrIDFweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXJzLiRwYWdlMDtcXHJcXG4gICAgcGFkZGluZzogdmFycy4kc3BhY2VyO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYub3ZlcmxheSB7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgICBhbGlnbi1pdGVtczogc3RhcnQ7XFxyXFxufVxcclxcblxcclxcbmRpdi5kb3duIHtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGVuZCAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuY3VycmVudEFyZWEge1xcclxcbiAgICBtYXJnaW4tdG9wOiA0KnZhcnMuJHNwYWNlcjtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDQqdmFycy4kc3BhY2VyO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYubWFwQXJlYXMgeyAgICBcXHJcXG4gICAgbWFyZ2luLXRvcDogNCp2YXJzLiRzcGFjZXI7XFxyXFxuICAgIG1hcmdpbi1yaWdodDogNCp2YXJzLiRzcGFjZXI7XFxyXFxufVxcclxcblxcclxcbmRpdi50ZXh0RW50cnlSb3cge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxufVxcclxcblxcclxcbmlucHV0LnRleHRFbnRyeUlucHV0IHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFycy4kcGFnZTE7XFxyXFxuICAgIGJvcmRlcjogc29saWQgdmFycy4kcGFnZTIgMXB4O1xcclxcbiAgICB3aWR0aDogNTAlO1xcclxcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XFxyXFxuICAgIGNvbG9yOiB2YXJzLiRkYXJrO1xcclxcbn1cXHJcXG5cXHJcXG5zZWxlY3Quc2VsZWN0VHlwZSB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcnMuJHBhZ2UxO1xcclxcbn1cXHJcXG5cXHJcXG5kaXYuY3VycmVudEJ1dHRvbnNSb3cge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXHJcXG59XCIsXCJcXHJcXG4vLyBjb2xvcnNcXHJcXG4keW91OiBibHVlO1xcclxcbiRwbGF5ZXI6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2VuMTogI2ZmZmZmZjtcXHJcXG4kcGFnZTA6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2UxOiAjZDBkMGQwO1xcclxcbiRwYWdlMjogIzk1OTU5NTtcXHJcXG4kYWxlcnQ6ICNlYzBkMGQ7XFxyXFxuJGRhcms6IGJsYWNrO1xcclxcblxcclxcbiRidXR0b25Cb3JkZXI6IGJsYWNrO1xcclxcblxcclxcbiRjb2xvcnM6ICgncGFnZTEnOiAkcGFnZTEsICdwYWdlMic6ICRwYWdlMiwgJ2FsZXJ0JzogJGFsZXJ0KTtcXHJcXG5cXHJcXG4vLyBsZW5ndGhzXFxyXFxuJHNwYWNlcjogNXB4O1xcclxcblxcclxcbi8vIHdpZHRoc1xcclxcbiRicmVha3BvaW50czogKCcnOiAwcHgsICdob3InOiA1MDBweCwgJ2Rlcyc6IDkwMHB4KTtcXHJcXG5cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///756\n')},3:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.modalOverlay{position:absolute;z-index:100;top:0;left:0;width:100%;height:100%;display:flex;justify-content:center;background-color:rgba(0,0,0,.4);backdrop-filter:blur(1px)}div.modalBody{min-width:50%;width:fit-content;max-width:90%;height:fit-content;border:solid;margin-top:5%;margin-bottom:auto;background-color:#d0d0d0}`, "",{"version":3,"sources":["webpack://./frontend/styles/modal.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAGA,iBAEI,iBAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,YAAA,CACA,sBAAA,CACA,+BAAA,CACA,yBAAA,CAGJ,cACI,aAAA,CACA,iBAAA,CACA,aAAA,CACA,kBAAA,CACA,YAAA,CACA,aAAA,CACA,kBAAA,CACA,wBCnBI","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\ndiv.modalOverlay {\\r\\n\\r\\n    position: absolute;\\r\\n    z-index: 100;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    background-color: rgba(0, 0, 0, 0.4);\\r\\n    backdrop-filter: blur(1px);\\r\\n};\\r\\n\\r\\ndiv.modalBody {\\r\\n    min-width: 50%;\\r\\n    width: fit-content;\\r\\n    max-width: 90%;\\r\\n    height: fit-content;\\r\\n    border: solid;\\r\\n    margin-top: 5%;\\r\\n    margin-bottom: auto;\\r\\n    background-color: vars.$page1;\\r\\n};\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDNkc7QUFDakI7QUFDNUYsOEJBQThCLG1GQUEyQixDQUFDLDRGQUFxQztBQUMvRjtBQUNBLDJEQUEyRCxrQkFBa0IsWUFBWSxNQUFNLE9BQU8sV0FBVyxZQUFZLGFBQWEsdUJBQXVCLGdDQUFnQywwQkFBMEIsY0FBYyxjQUFjLGtCQUFrQixjQUFjLG1CQUFtQixhQUFhLGNBQWMsbUJBQW1CLHlCQUF5QixPQUFPLDRXQUE0VywwQkFBMEIsK0JBQStCLHFCQUFxQixlQUFlLGdCQUFnQixvQkFBb0IscUJBQXFCLHNCQUFzQixnQ0FBZ0MsNkNBQTZDLG1DQUFtQyxNQUFNLHVCQUF1Qix1QkFBdUIsMkJBQTJCLHVCQUF1Qiw0QkFBNEIsc0JBQXNCLHVCQUF1Qiw0QkFBNEIsc0NBQXNDLE1BQU0sbUNBQW1DLHFCQUFxQixxQkFBcUIsb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLGlCQUFpQiw2QkFBNkIscUVBQXFFLG1DQUFtQyx5RUFBeUUsK0JBQStCO0FBQ2xwRDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvbW9kYWwuc2Nzcz9kMmU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBkaXYubW9kYWxPdmVybGF5e3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTAwO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNCk7YmFja2Ryb3AtZmlsdGVyOmJsdXIoMXB4KX1kaXYubW9kYWxCb2R5e21pbi13aWR0aDo1MCU7d2lkdGg6Zml0LWNvbnRlbnQ7bWF4LXdpZHRoOjkwJTtoZWlnaHQ6Zml0LWNvbnRlbnQ7Ym9yZGVyOnNvbGlkO21hcmdpbi10b3A6NSU7bWFyZ2luLWJvdHRvbTphdXRvO2JhY2tncm91bmQtY29sb3I6I2QwZDBkMH1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy9tb2RhbC5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9mcm9udGVuZC9zdHlsZXMvdmFycy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUdBLGlCQUVJLGlCQUFBLENBQ0EsV0FBQSxDQUNBLEtBQUEsQ0FDQSxNQUFBLENBQ0EsVUFBQSxDQUNBLFdBQUEsQ0FDQSxZQUFBLENBQ0Esc0JBQUEsQ0FDQSwrQkFBQSxDQUNBLHlCQUFBLENBR0osY0FDSSxhQUFBLENBQ0EsaUJBQUEsQ0FDQSxhQUFBLENBQ0Esa0JBQUEsQ0FDQSxZQUFBLENBQ0EsYUFBQSxDQUNBLGtCQUFBLENBQ0Esd0JDbkJJXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcclxcbkB1c2UgJ3ZhcnMnO1xcclxcblxcclxcbmRpdi5tb2RhbE92ZXJsYXkge1xcclxcblxcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIHotaW5kZXg6IDEwMDtcXHJcXG4gICAgdG9wOiAwO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xcclxcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMXB4KTtcXHJcXG59O1xcclxcblxcclxcbmRpdi5tb2RhbEJvZHkge1xcclxcbiAgICBtaW4td2lkdGg6IDUwJTtcXHJcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcclxcbiAgICBtYXgtd2lkdGg6IDkwJTtcXHJcXG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcXHJcXG4gICAgYm9yZGVyOiBzb2xpZDtcXHJcXG4gICAgbWFyZ2luLXRvcDogNSU7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IGF1dG87XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcnMuJHBhZ2UxO1xcclxcbn07XFxyXFxuXCIsXCJcXHJcXG4vLyBjb2xvcnNcXHJcXG4keW91OiBibHVlO1xcclxcbiRwbGF5ZXI6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2VuMTogI2ZmZmZmZjtcXHJcXG4kcGFnZTA6ICNkOWQ5ZDk7XFxyXFxuJHBhZ2UxOiAjZDBkMGQwO1xcclxcbiRwYWdlMjogIzk1OTU5NTtcXHJcXG4kYWxlcnQ6ICNlYzBkMGQ7XFxyXFxuJGRhcms6IGJsYWNrO1xcclxcblxcclxcbiRidXR0b25Cb3JkZXI6IGJsYWNrO1xcclxcblxcclxcbiRjb2xvcnM6ICgncGFnZTEnOiAkcGFnZTEsICdwYWdlMic6ICRwYWdlMiwgJ2FsZXJ0JzogJGFsZXJ0KTtcXHJcXG5cXHJcXG4vLyBsZW5ndGhzXFxyXFxuJHNwYWNlcjogNXB4O1xcclxcblxcclxcbi8vIHdpZHRoc1xcclxcbiRicmVha3BvaW50czogKCcnOiAwcHgsICdob3InOiA1MDBweCwgJ2Rlcyc6IDkwMHB4KTtcXHJcXG5cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n')},523:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.phasesBannerBorder{margin:auto;width:fit-content}div.phasesBannerCurrentPhase{text-align:center;font-weight:600;font-size:1.2rem;padding-bottom:5px}div.phasesBannerHoverPhaseAction{width:fit-content}`, "",{"version":3,"sources":["webpack://./frontend/styles/phasesbanner.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAGA,uBACI,WAAA,CACA,iBAAA,CAGJ,6BACI,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,kBCIK,CDDT,iCACI,iBAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\ndiv.phasesBannerBorder {\\r\\n    margin: auto;\\r\\n    width: fit-content;\\r\\n}\\r\\n\\r\\ndiv.phasesBannerCurrentPhase {\\r\\n    text-align: center;\\r\\n    font-weight: 600;\\r\\n    font-size: 1.2rem;\\r\\n    padding-bottom: vars.$spacer;\\r\\n}\\r\\n\\r\\ndiv.phasesBannerHoverPhaseAction {\\r\\n    width: fit-content;\\r\\n}\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsaUVBQWlFLFlBQVksa0JBQWtCLDZCQUE2QixrQkFBa0IsZ0JBQWdCLGlCQUFpQixtQkFBbUIsaUNBQWlDLGtCQUFrQixPQUFPLHdRQUF3USxnQ0FBZ0MscUJBQXFCLDJCQUEyQixLQUFLLHNDQUFzQywyQkFBMkIseUJBQXlCLDBCQUEwQixxQ0FBcUMsS0FBSywwQ0FBMEMsMkJBQTJCLEtBQUssbUNBQW1DLHFCQUFxQixxQkFBcUIsb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLGlCQUFpQiw2QkFBNkIscUVBQXFFLG1DQUFtQyx5RUFBeUUsK0JBQStCO0FBQzV0QztBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvcGhhc2VzYmFubmVyLnNjc3M/NTkyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgZGl2LnBoYXNlc0Jhbm5lckJvcmRlcnttYXJnaW46YXV0bzt3aWR0aDpmaXQtY29udGVudH1kaXYucGhhc2VzQmFubmVyQ3VycmVudFBoYXNle3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MS4ycmVtO3BhZGRpbmctYm90dG9tOjVweH1kaXYucGhhc2VzQmFubmVySG92ZXJQaGFzZUFjdGlvbnt3aWR0aDpmaXQtY29udGVudH1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy9waGFzZXNiYW5uZXIuc2Nzc1wiLFwid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL3ZhcnMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQSx1QkFDSSxXQUFBLENBQ0EsaUJBQUEsQ0FHSiw2QkFDSSxpQkFBQSxDQUNBLGVBQUEsQ0FDQSxnQkFBQSxDQUNBLGtCQ0lLLENERFQsaUNBQ0ksaUJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxyXFxuQHVzZSAndmFycyc7XFxyXFxuXFxyXFxuZGl2LnBoYXNlc0Jhbm5lckJvcmRlciB7XFxyXFxuICAgIG1hcmdpbjogYXV0bztcXHJcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYucGhhc2VzQmFubmVyQ3VycmVudFBoYXNlIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBmb250LXdlaWdodDogNjAwO1xcclxcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXHJcXG4gICAgcGFkZGluZy1ib3R0b206IHZhcnMuJHNwYWNlcjtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LnBoYXNlc0Jhbm5lckhvdmVyUGhhc2VBY3Rpb24ge1xcclxcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxyXFxufVxcclxcblwiLFwiXFxyXFxuLy8gY29sb3JzXFxyXFxuJHlvdTogYmx1ZTtcXHJcXG4kcGxheWVyOiAjZDlkOWQ5O1xcclxcbiRwYWdlbjE6ICNmZmZmZmY7XFxyXFxuJHBhZ2UwOiAjZDlkOWQ5O1xcclxcbiRwYWdlMTogI2QwZDBkMDtcXHJcXG4kcGFnZTI6ICM5NTk1OTU7XFxyXFxuJGFsZXJ0OiAjZWMwZDBkO1xcclxcbiRkYXJrOiBibGFjaztcXHJcXG5cXHJcXG4kYnV0dG9uQm9yZGVyOiBibGFjaztcXHJcXG5cXHJcXG4kY29sb3JzOiAoJ3BhZ2UxJzogJHBhZ2UxLCAncGFnZTInOiAkcGFnZTIsICdhbGVydCc6ICRhbGVydCk7XFxyXFxuXFxyXFxuLy8gbGVuZ3Roc1xcclxcbiRzcGFjZXI6IDVweDtcXHJcXG5cXHJcXG4vLyB3aWR0aHNcXHJcXG4kYnJlYWtwb2ludHM6ICgnJzogMHB4LCAnaG9yJzogNTAwcHgsICdkZXMnOiA5MDBweCk7XFxyXFxuXFxyXFxuXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///523\n')},428:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.playersCardBorder{width:fit-content}div.playersCardPlayerRow{width:fit-content}div.playersCardCurrentPlayer{background-color:#ff0;box-shadow:#ff0 0 0 3px 3px}`, "",{"version":3,"sources":["webpack://./frontend/styles/playerscard.scss"],"names":[],"mappings":"AAGA,sBACI,iBAAA,CAGJ,yBACI,iBAAA,CAGJ,6BACI,qBAAA,CACA,2BAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\ndiv.playersCardBorder {\\r\\n    width: fit-content;\\r\\n}\\r\\n\\r\\ndiv.playersCardPlayerRow {\\r\\n    width: fit-content;\\r\\n}\\r\\n\\r\\ndiv.playersCardCurrentPlayer {\\r\\n    background-color: yellow;\\r\\n    box-shadow: yellow 0 0 3px 3px;\\r\\n}\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDI4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsZ0VBQWdFLGtCQUFrQix5QkFBeUIsa0JBQWtCLDZCQUE2QixzQkFBc0IsNEJBQTRCLE9BQU8sZ01BQWdNLCtCQUErQiwyQkFBMkIsS0FBSyxrQ0FBa0MsMkJBQTJCLEtBQUssc0NBQXNDLGlDQUFpQyx1Q0FBdUMsS0FBSyx1QkFBdUI7QUFDOXBCO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL2Zyb250ZW5kL3N0eWxlcy9wbGF5ZXJzY2FyZC5zY3NzPzQ5MTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGRpdi5wbGF5ZXJzQ2FyZEJvcmRlcnt3aWR0aDpmaXQtY29udGVudH1kaXYucGxheWVyc0NhcmRQbGF5ZXJSb3d7d2lkdGg6Zml0LWNvbnRlbnR9ZGl2LnBsYXllcnNDYXJkQ3VycmVudFBsYXllcntiYWNrZ3JvdW5kLWNvbG9yOiNmZjA7Ym94LXNoYWRvdzojZmYwIDAgMCAzcHggM3B4fWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL3BsYXllcnNjYXJkLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBR0Esc0JBQ0ksaUJBQUEsQ0FHSix5QkFDSSxpQkFBQSxDQUdKLDZCQUNJLHFCQUFBLENBQ0EsMkJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxyXFxuQHVzZSAndmFycyc7XFxyXFxuXFxyXFxuZGl2LnBsYXllcnNDYXJkQm9yZGVyIHtcXHJcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYucGxheWVyc0NhcmRQbGF5ZXJSb3cge1xcclxcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxyXFxufVxcclxcblxcclxcbmRpdi5wbGF5ZXJzQ2FyZEN1cnJlbnRQbGF5ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XFxyXFxuICAgIGJveC1zaGFkb3c6IHllbGxvdyAwIDAgM3B4IDNweDtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///428\n')},470:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.overBoard{position:relative;z-index:1;background-color:#d9d9d9}div.playGameContent{display:flex}div.column{width:100%;height:100%}div.card{padding:5px;border-radius:5px;border:solid #000 1px}div.cardTitle{font-size:1.2rem;font-weight:700}`, "",{"version":3,"sources":["webpack://./frontend/styles/playgame.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAGA,WACI,iBAAA,CACA,SAAA,CACA,wBCDI,CDIR,oBACI,YAAA,CAGJ,WACI,UAAA,CACA,WAAA,CAGJ,SACI,WCHK,CDIL,iBAAA,CACA,qBAAA,CAGJ,cACI,gBAAA,CACA,eAAA","sourcesContent":["\\r\\n@use \'vars\';\\r\\n\\r\\n.overBoard {\\r\\n    position: relative;\\r\\n    z-index: 1;\\r\\n    background-color: vars.$page0;\\r\\n};\\r\\n\\r\\ndiv.playGameContent {\\r\\n    display: flex;\\r\\n};\\r\\n\\r\\ndiv.column {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n};\\r\\n\\r\\ndiv.card {\\r\\n    padding: vars.$spacer;\\r\\n    border-radius: 5px;\\r\\n    border: solid vars.$dark 1px;\\r\\n};\\r\\n\\r\\ndiv.cardTitle {\\r\\n    font-size: 1.2rem;\\r\\n    font-weight: 700\\r\\n};\\r\\n\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EscURBQXFELGtCQUFrQixVQUFVLHlCQUF5QixvQkFBb0IsYUFBYSxXQUFXLFdBQVcsWUFBWSxTQUFTLFlBQVksa0JBQWtCLHNCQUFzQixjQUFjLGlCQUFpQixnQkFBZ0IsT0FBTyxvVEFBb1Qsb0JBQW9CLDJCQUEyQixtQkFBbUIsc0NBQXNDLE1BQU0sNkJBQTZCLHNCQUFzQixNQUFNLG9CQUFvQixvQkFBb0IscUJBQXFCLE1BQU0sa0JBQWtCLDhCQUE4QiwyQkFBMkIscUNBQXFDLE1BQU0sdUJBQXVCLDBCQUEwQiw4QkFBOEIsdUNBQXVDLHFCQUFxQixxQkFBcUIsb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLGlCQUFpQiw2QkFBNkIscUVBQXFFLG1DQUFtQyx5RUFBeUUsK0JBQStCO0FBQ2w2QztBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9mcm9udGVuZC9zdHlsZXMvcGxheWdhbWUuc2Nzcz8yMjc2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAub3ZlckJvYXJke3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MTtiYWNrZ3JvdW5kLWNvbG9yOiNkOWQ5ZDl9ZGl2LnBsYXlHYW1lQ29udGVudHtkaXNwbGF5OmZsZXh9ZGl2LmNvbHVtbnt3aWR0aDoxMDAlO2hlaWdodDoxMDAlfWRpdi5jYXJke3BhZGRpbmc6NXB4O2JvcmRlci1yYWRpdXM6NXB4O2JvcmRlcjpzb2xpZCAjMDAwIDFweH1kaXYuY2FyZFRpdGxle2ZvbnQtc2l6ZToxLjJyZW07Zm9udC13ZWlnaHQ6NzAwfWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vZnJvbnRlbmQvc3R5bGVzL3BsYXlnYW1lLnNjc3NcIixcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy92YXJzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBR0EsV0FDSSxpQkFBQSxDQUNBLFNBQUEsQ0FDQSx3QkNESSxDRElSLG9CQUNJLFlBQUEsQ0FHSixXQUNJLFVBQUEsQ0FDQSxXQUFBLENBR0osU0FDSSxXQ0hLLENESUwsaUJBQUEsQ0FDQSxxQkFBQSxDQUdKLGNBQ0ksZ0JBQUEsQ0FDQSxlQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcclxcbkB1c2UgJ3ZhcnMnO1xcclxcblxcclxcbi5vdmVyQm9hcmQge1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIHotaW5kZXg6IDE7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcnMuJHBhZ2UwO1xcclxcbn07XFxyXFxuXFxyXFxuZGl2LnBsYXlHYW1lQ29udGVudCB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuY29sdW1uIHtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG59O1xcclxcblxcclxcbmRpdi5jYXJkIHtcXHJcXG4gICAgcGFkZGluZzogdmFycy4kc3BhY2VyO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGJvcmRlcjogc29saWQgdmFycy4kZGFyayAxcHg7XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuY2FyZFRpdGxlIHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjJyZW07XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiA3MDBcXHJcXG59O1xcclxcblxcclxcblwiLFwiXFxyXFxuLy8gY29sb3JzXFxyXFxuJHlvdTogYmx1ZTtcXHJcXG4kcGxheWVyOiAjZDlkOWQ5O1xcclxcbiRwYWdlbjE6ICNmZmZmZmY7XFxyXFxuJHBhZ2UwOiAjZDlkOWQ5O1xcclxcbiRwYWdlMTogI2QwZDBkMDtcXHJcXG4kcGFnZTI6ICM5NTk1OTU7XFxyXFxuJGFsZXJ0OiAjZWMwZDBkO1xcclxcbiRkYXJrOiBibGFjaztcXHJcXG5cXHJcXG4kYnV0dG9uQm9yZGVyOiBibGFjaztcXHJcXG5cXHJcXG4kY29sb3JzOiAoJ3BhZ2UxJzogJHBhZ2UxLCAncGFnZTInOiAkcGFnZTIsICdhbGVydCc6ICRhbGVydCk7XFxyXFxuXFxyXFxuLy8gbGVuZ3Roc1xcclxcbiRzcGFjZXI6IDVweDtcXHJcXG5cXHJcXG4vLyB3aWR0aHNcXHJcXG4kYnJlYWtwb2ludHM6ICgnJzogMHB4LCAnaG9yJzogNTAwcHgsICdkZXMnOiA5MDBweCk7XFxyXFxuXFxyXFxuXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///470\n')},119:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.pregameBody{width:100%;display:flex;flex-direction:row;justify-content:space-evenly;flex-wrap:wrap;height:80vh}div.pregamePlayersCardWrapper{width:fit-content;min-width:150px;max-width:400px;display:flex;flex-direction:column;align-items:center}div.pregamePlayersCard{background-color:#fff;border:solid #000 2px;width:fit-content;min-width:150px;max-width:400px}div.pregamePlayersCardText{font-weight:600;font-size:1.2rem;margin-bottom:5px}div.pregamePlayerRow{display:flex;margin-bottom:5px;border:solid #d3d3d3 1px}div.pregamePlayerRow:last-child{margin-bottom:0}div.pregamePlayerIcon{margin-right:5px;padding:2px}div.pregamePlayerUsername{margin-right:auto}div.pregameCivilizationDisplay{margin-left:5px;margin-right:0;padding:2px}select.pregameCivilizationSelect{margin-left:5px;margin-right:0;padding:2px}div.pregameSettingsCardWrapper{width:fit-content;min-width:150px;max-width:400px;display:flex;flex-direction:column;align-items:center}div.pregameSettingsCardText{font-weight:600;font-size:1.2rem;margin-bottom:5px}div.pregameSettingsCard{background-color:#fff;border:solid #000 2px}div.pregameSettingRow{display:flex;margin-bottom:5px;align-items:center}div.pregameSettingRow:last-child{margin-bottom:0}div.pregameSettingRow *{margin-right:5px}div.pregameSettingRow *:last-child{margin-left:auto;margin-right:0}button.pregameStart{margin-top:auto !important;margin-bottom:auto !important}div.pregameChatWrapper{max-height:100%;display:flex;flex-direction:column;align-items:center;width:fit-content;min-width:150px;max-width:400px}@media screen and (min-width: 900px){div.pregameChatWrapper{max-height:75vh}}div.pregameChatText{font-weight:600;font-size:1.2rem;margin-bottom:5px}`, "",{"version":3,"sources":["webpack://./frontend/styles/pregame.scss","webpack://./frontend/styles/vars.scss"],"names":[],"mappings":"AAIA,gBACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,cAAA,CACA,WAAA,CAGJ,8BACI,iBAAA,CACA,eAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CAGJ,uBACI,qBCnBK,CDoBL,qBAAA,CACA,iBAAA,CACA,eAAA,CACA,eAAA,CAGJ,2BACI,eAAA,CACA,gBAAA,CACA,iBCjBK,CDoBT,qBACI,YAAA,CACA,iBAAA,CACA,wBAAA,CAGJ,gCACI,eAAA,CAGJ,sBACI,gBAAA,CACA,WAAA,CAGJ,0BACI,iBAAA,CAGJ,+BACI,eAAA,CACA,cAAA,CACA,WAAA,CAGJ,iCACI,eAAA,CACA,cAAA,CACA,WAAA,CAGJ,+BACI,iBAAA,CACA,eAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CAGJ,4BACI,eAAA,CACA,gBAAA,CACA,iBC/DK,CDkET,wBACI,qBC/EK,CDgFL,qBAAA,CAGJ,sBACI,YAAA,CACA,iBCzEK,CD0EL,kBAAA,CAGJ,iCACI,eAAA,CAGJ,wBACI,gBClFK,CDqFT,mCACI,gBAAA,CACA,cAAA,CAGJ,oBACI,0BAAA,CACA,6BAAA,CAGJ,uBACI,eAAA,CAIA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,iBAAA,CACA,eAAA,CACA,eAAA,CARA,qCAFJ,uBAGQ,eAAA,CAAA,CAUR,oBACI,eAAA,CACA,gBAAA,CACA,iBC/GK","sourcesContent":["\\r\\n@use \'vars\';\\r\\n@use \'sass:map\';\\r\\n\\r\\ndiv.pregameBody {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-evenly;\\r\\n    flex-wrap: wrap;\\r\\n    height: 80vh\\r\\n};\\r\\n\\r\\ndiv.pregamePlayersCardWrapper {\\r\\n    width: fit-content;\\r\\n    min-width: 150px;\\r\\n    max-width: 400px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n};\\r\\n\\r\\ndiv.pregamePlayersCard {\\r\\n    background-color: vars.$pagen1;\\r\\n    border: solid black 2px;\\r\\n    width: fit-content;\\r\\n    min-width: 150px;\\r\\n    max-width: 400px;\\r\\n};\\r\\n\\r\\ndiv.pregamePlayersCardText {\\r\\n    font-weight: 600;\\r\\n    font-size: 1.2rem;\\r\\n    margin-bottom: vars.$spacer;\\r\\n};\\r\\n\\r\\ndiv.pregamePlayerRow {\\r\\n    display: flex;\\r\\n    margin-bottom: 5px;\\r\\n    border: solid lightgrey 1px;\\r\\n};\\r\\n\\r\\ndiv.pregamePlayerRow:last-child {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\ndiv.pregamePlayerIcon {\\r\\n    margin-right: 5px;\\r\\n    padding: 2px;\\r\\n}\\r\\n\\r\\ndiv.pregamePlayerUsername {\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\ndiv.pregameCivilizationDisplay {\\r\\n    margin-left: 5px;\\r\\n    margin-right: 0;\\r\\n    padding: 2px;\\r\\n}\\r\\n\\r\\nselect.pregameCivilizationSelect {\\r\\n    margin-left: 5px;\\r\\n    margin-right: 0;\\r\\n    padding: 2px;\\r\\n}\\r\\n\\r\\ndiv.pregameSettingsCardWrapper {\\r\\n    width: fit-content;\\r\\n    min-width: 150px;\\r\\n    max-width: 400px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\ndiv.pregameSettingsCardText {\\r\\n    font-weight: 600;\\r\\n    font-size: 1.2rem;\\r\\n    margin-bottom: vars.$spacer;\\r\\n}\\r\\n\\r\\ndiv.pregameSettingsCard {\\r\\n    background-color: vars.$pagen1;\\r\\n    border: solid black 2px;\\r\\n}\\r\\n\\r\\ndiv.pregameSettingRow {\\r\\n    display: flex;\\r\\n    margin-bottom: vars.$spacer;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\ndiv.pregameSettingRow:last-child {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\ndiv.pregameSettingRow * {\\r\\n    margin-right: vars.$spacer;\\r\\n}\\r\\n\\r\\ndiv.pregameSettingRow *:last-child {\\r\\n    margin-left: auto;\\r\\n    margin-right: 0;\\r\\n}\\r\\n\\r\\nbutton.pregameStart {\\r\\n    margin-top: auto !important;\\r\\n    margin-bottom: auto !important;;\\r\\n}\\r\\n\\r\\ndiv.pregameChatWrapper {\\r\\n    max-height: 100%;\\r\\n    @media screen and (min-width: map.get(vars.$breakpoints, \'des\')) {\\r\\n        max-height: 75vh;\\r\\n    }\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    width: fit-content;\\r\\n    min-width: 150px;\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\ndiv.pregameChatText {\\r\\n    font-weight: 600;\\r\\n    font-size: 1.2rem;\\r\\n    margin-bottom: vars.$spacer;\\r\\n}\\r\\n","\\r\\n// colors\\r\\n$you: blue;\\r\\n$player: #d9d9d9;\\r\\n$pagen1: #ffffff;\\r\\n$page0: #d9d9d9;\\r\\n$page1: #d0d0d0;\\r\\n$page2: #959595;\\r\\n$alert: #ec0d0d;\\r\\n$dark: black;\\r\\n\\r\\n$buttonBorder: black;\\r\\n\\r\\n$colors: (\'page1\': $page1, \'page2\': $page2, \'alert\': $alert);\\r\\n\\r\\n// lengths\\r\\n$spacer: 5px;\\r\\n\\r\\n// widths\\r\\n$breakpoints: (\'\': 0px, \'hor\': 500px, \'des\': 900px);\\r\\n\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///119\n')},972:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:1rem;font:inherit;vertical-align:baseline;font-family:system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:"";content:none}table{border-collapse:collapse;border-spacing:0}`, "",{"version":3,"sources":["webpack://./frontend/styles/reset.scss"],"names":[],"mappings":"AAAA,2ZAaC,QAAA,CACA,SAAA,CACA,QAAA,CACA,cAAA,CACA,YAAA,CACA,uBAAA,CACA,wIAAA,CAED,8EAEC,aAAA,CAED,KACC,aAAA,CAED,MACC,eAAA,CAED,aACC,WAAA,CAED,oDAEC,UAAA,CACA,YAAA,CAED,MACC,wBAAA,CACA,gBAAA","sourcesContent":["html, body, div, span, applet, object, iframe,\\r\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\r\\na, abbr, acronym, address, big, cite, code,\\r\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\r\\nsmall, strike, strong, sub, sup, tt, var,\\r\\nb, u, i, center,\\r\\ndl, dt, dd, ol, ul, li,\\r\\nfieldset, form, label, legend,\\r\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\r\\narticle, aside, canvas, details, embed, \\r\\nfigure, figcaption, footer, header, hgroup, \\r\\nmenu, nav, output, ruby, section, summary,\\r\\ntime, mark, audio, video {\\r\\n\\tmargin: 0;\\r\\n\\tpadding: 0;\\r\\n\\tborder: 0;\\r\\n\\tfont-size: 1rem;\\r\\n\\tfont: inherit;\\r\\n\\tvertical-align: baseline;\\r\\n\\tfont-family: system-ui, -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, Cantarell, \'Open Sans\', \'Helvetica Neue\', sans-serif;\\r\\n}\\r\\narticle, aside, details, figcaption, figure, \\r\\nfooter, header, hgroup, menu, nav, section {\\r\\n\\tdisplay: block;\\r\\n}\\r\\nbody {\\r\\n\\tline-height: 1;\\r\\n}\\r\\nol, ul {\\r\\n\\tlist-style: none;\\r\\n}\\r\\nblockquote, q {\\r\\n\\tquotes: none;\\r\\n}\\r\\nblockquote:before, blockquote:after,\\r\\nq:before, q:after {\\r\\n\\tcontent: \'\';\\r\\n\\tcontent: none;\\r\\n}\\r\\ntable {\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\r\\n}\\r\\n\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EscWNBQXFjLFNBQVMsVUFBVSxTQUFTLGVBQWUsYUFBYSx3QkFBd0IseUlBQXlJLDhFQUE4RSxjQUFjLEtBQUssY0FBYyxNQUFNLGdCQUFnQixhQUFhLFlBQVksb0RBQW9ELFdBQVcsYUFBYSxNQUFNLHlCQUF5QixpQkFBaUIsT0FBTyw4ekJBQTh6QixnQkFBZ0IsaUJBQWlCLGdCQUFnQixzQkFBc0Isb0JBQW9CLCtCQUErQiwwSkFBMEosS0FBSyxpR0FBaUcscUJBQXFCLEtBQUssVUFBVSxxQkFBcUIsS0FBSyxZQUFZLHVCQUF1QixLQUFLLG1CQUFtQixtQkFBbUIsS0FBSywrREFBK0Qsa0JBQWtCLG9CQUFvQixLQUFLLFdBQVcsZ0NBQWdDLHdCQUF3QixLQUFLLDJCQUEyQjtBQUNyOUU7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZ2FlbXBpcmVzLy4vZnJvbnRlbmQvc3R5bGVzL3Jlc2V0LnNjc3M/MmU2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgaHRtbCxib2R5LGRpdixzcGFuLGFwcGxldCxvYmplY3QsaWZyYW1lLGgxLGgyLGgzLGg0LGg1LGg2LHAsYmxvY2txdW90ZSxwcmUsYSxhYmJyLGFjcm9ueW0sYWRkcmVzcyxiaWcsY2l0ZSxjb2RlLGRlbCxkZm4sZW0saW1nLGlucyxrYmQscSxzLHNhbXAsc21hbGwsc3RyaWtlLHN0cm9uZyxzdWIsc3VwLHR0LHZhcixiLHUsaSxjZW50ZXIsZGwsZHQsZGQsb2wsdWwsbGksZmllbGRzZXQsZm9ybSxsYWJlbCxsZWdlbmQsdGFibGUsY2FwdGlvbix0Ym9keSx0Zm9vdCx0aGVhZCx0cix0aCx0ZCxhcnRpY2xlLGFzaWRlLGNhbnZhcyxkZXRhaWxzLGVtYmVkLGZpZ3VyZSxmaWdjYXB0aW9uLGZvb3RlcixoZWFkZXIsaGdyb3VwLG1lbnUsbmF2LG91dHB1dCxydWJ5LHNlY3Rpb24sc3VtbWFyeSx0aW1lLG1hcmssYXVkaW8sdmlkZW97bWFyZ2luOjA7cGFkZGluZzowO2JvcmRlcjowO2ZvbnQtc2l6ZToxcmVtO2ZvbnQ6aW5oZXJpdDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZTtmb250LWZhbWlseTpzeXN0ZW0tdWksLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsXCJTZWdvZSBVSVwiLFJvYm90byxPeHlnZW4sVWJ1bnR1LENhbnRhcmVsbCxcIk9wZW4gU2Fuc1wiLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfWFydGljbGUsYXNpZGUsZGV0YWlscyxmaWdjYXB0aW9uLGZpZ3VyZSxmb290ZXIsaGVhZGVyLGhncm91cCxtZW51LG5hdixzZWN0aW9ue2Rpc3BsYXk6YmxvY2t9Ym9keXtsaW5lLWhlaWdodDoxfW9sLHVse2xpc3Qtc3R5bGU6bm9uZX1ibG9ja3F1b3RlLHF7cXVvdGVzOm5vbmV9YmxvY2txdW90ZTpiZWZvcmUsYmxvY2txdW90ZTphZnRlcixxOmJlZm9yZSxxOmFmdGVye2NvbnRlbnQ6XCJcIjtjb250ZW50Om5vbmV9dGFibGV7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjB9YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9mcm9udGVuZC9zdHlsZXMvcmVzZXQuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSwyWkFhQyxRQUFBLENBQ0EsU0FBQSxDQUNBLFFBQUEsQ0FDQSxjQUFBLENBQ0EsWUFBQSxDQUNBLHVCQUFBLENBQ0Esd0lBQUEsQ0FFRCw4RUFFQyxhQUFBLENBRUQsS0FDQyxhQUFBLENBRUQsTUFDQyxlQUFBLENBRUQsYUFDQyxXQUFBLENBRUQsb0RBRUMsVUFBQSxDQUNBLFlBQUEsQ0FFRCxNQUNDLHdCQUFBLENBQ0EsZ0JBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxcclxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcXHJcXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXFxyXFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxcclxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXFxyXFxuYiwgdSwgaSwgY2VudGVyLFxcclxcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXFxyXFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXFxyXFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXFxyXFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxcclxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXFxyXFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXFxyXFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcXHJcXG5cXHRtYXJnaW46IDA7XFxyXFxuXFx0cGFkZGluZzogMDtcXHJcXG5cXHRib3JkZXI6IDA7XFxyXFxuXFx0Zm9udC1zaXplOiAxcmVtO1xcclxcblxcdGZvbnQ6IGluaGVyaXQ7XFxyXFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcclxcblxcdGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWksIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCAnT3BlbiBTYW5zJywgJ0hlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZjtcXHJcXG59XFxyXFxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXFxyXFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcXHJcXG5cXHRkaXNwbGF5OiBibG9jaztcXHJcXG59XFxyXFxuYm9keSB7XFxyXFxuXFx0bGluZS1oZWlnaHQ6IDE7XFxyXFxufVxcclxcbm9sLCB1bCB7XFxyXFxuXFx0bGlzdC1zdHlsZTogbm9uZTtcXHJcXG59XFxyXFxuYmxvY2txdW90ZSwgcSB7XFxyXFxuXFx0cXVvdGVzOiBub25lO1xcclxcbn1cXHJcXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcXHJcXG5xOmJlZm9yZSwgcTphZnRlciB7XFxyXFxuXFx0Y29udGVudDogJyc7XFxyXFxuXFx0Y29udGVudDogbm9uZTtcXHJcXG59XFxyXFxudGFibGUge1xcclxcblxcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxyXFxuXFx0Ym9yZGVyLXNwYWNpbmc6IDA7XFxyXFxufVxcclxcblxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///972\n')},831:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Z: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `div.settingsUserRow{display:flex;justify-content:start;align-items:center;padding:0;margin:0}div.settingsGameRow{display:flex}div.settingsGameHost{margin-inline-end:5px}div.settingsGameStatus{margin-inline-end:5px}`, "",{"version":3,"sources":["webpack://./frontend/styles/settings.scss"],"names":[],"mappings":"AAEA,oBACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,SAAA,CACA,QAAA,CAIJ,oBACI,YAAA,CAGJ,qBACI,qBAAA,CAGJ,uBACI,qBAAA","sourcesContent":["\\r\\n\\r\\ndiv.settingsUserRow {\\r\\n    display: flex;\\r\\n    justify-content: start;\\r\\n    align-items: center;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n};\\r\\n\\r\\n\\r\\ndiv.settingsGameRow {\\r\\n    display: flex;\\r\\n};\\r\\n\\r\\ndiv.settingsGameHost {\\r\\n    margin-inline-end: 5px;\\r\\n};\\r\\n\\r\\ndiv.settingsGameStatus {\\r\\n    margin-inline-end: 5px;    \\r\\n};\\r\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMxLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsOERBQThELGFBQWEsc0JBQXNCLG1CQUFtQixVQUFVLFNBQVMsb0JBQW9CLGFBQWEscUJBQXFCLHNCQUFzQix1QkFBdUIsc0JBQXNCLE9BQU8sd1BBQXdQLHNCQUFzQiwrQkFBK0IsNEJBQTRCLG1CQUFtQixrQkFBa0IsTUFBTSxpQ0FBaUMsc0JBQXNCLE1BQU0sOEJBQThCLCtCQUErQixNQUFNLGdDQUFnQyxtQ0FBbUMsTUFBTSx1QkFBdUI7QUFDMzFCO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL2Zyb250ZW5kL3N0eWxlcy9zZXR0aW5ncy5zY3NzP2ZiNWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGRpdi5zZXR0aW5nc1VzZXJSb3d7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzdGFydDthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZzowO21hcmdpbjowfWRpdi5zZXR0aW5nc0dhbWVSb3d7ZGlzcGxheTpmbGV4fWRpdi5zZXR0aW5nc0dhbWVIb3N0e21hcmdpbi1pbmxpbmUtZW5kOjVweH1kaXYuc2V0dGluZ3NHYW1lU3RhdHVze21hcmdpbi1pbmxpbmUtZW5kOjVweH1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Zyb250ZW5kL3N0eWxlcy9zZXR0aW5ncy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBLG9CQUNJLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLGtCQUFBLENBQ0EsU0FBQSxDQUNBLFFBQUEsQ0FJSixvQkFDSSxZQUFBLENBR0oscUJBQ0kscUJBQUEsQ0FHSix1QkFDSSxxQkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJcXHJcXG5cXHJcXG5kaXYuc2V0dGluZ3NVc2VyUm93IHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbn07XFxyXFxuXFxyXFxuXFxyXFxuZGl2LnNldHRpbmdzR2FtZVJvdyB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuc2V0dGluZ3NHYW1lSG9zdCB7XFxyXFxuICAgIG1hcmdpbi1pbmxpbmUtZW5kOiA1cHg7XFxyXFxufTtcXHJcXG5cXHJcXG5kaXYuc2V0dGluZ3NHYW1lU3RhdHVzIHtcXHJcXG4gICAgbWFyZ2luLWlubGluZS1lbmQ6IDVweDsgICAgXFxyXFxufTtcXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///831\n')},645:module=>{"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///645\n')},537:module=>{"use strict";eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTM3LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///537\n')},703:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(414);\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYiwyQkFBMkIsbUJBQU8sQ0FBQyxHQUE0Qjs7QUFFL0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lZ2FlbXBpcmVzLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzP2Q3YTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJpZ2ludDogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///703\n")},697:(module,__unused_webpack_exports,__webpack_require__)=>{eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) { var throwOnDirectAccess, ReactIs; } else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(703)();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjk3LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLEtBQXFDLEVBQUUscUNBTzFDLENBQUM7QUFDRjtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsR0FBNEI7QUFDdkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzP2Q3YmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///697\n")},414:module=>{"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lZ2FlbXBpcmVzLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzPzU5YjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///414\n")},448:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(294),ca=__webpack_require__(840);function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");\nvar Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||""}return"\\n"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\\n"),\nf=d.stack.split("\\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}\nfunction Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";\ncase 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}\nfunction Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,"checked",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}\nfunction cb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}\nfunction lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}\nvar mb,nb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{mb=mb||document.createElement("div");mb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}});window.addEventListener("test",Mb,Mb);window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&"function"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");\nfunction Sc(a,b){switch(a){case "focusin":case "focusout":Lc=null;break;case "dragenter":case "dragleave":Mc=null;break;case "mouseover":case "mouseout":Nc=null;break;case "pointerover":case "pointerout":Oc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case "focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case "dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case "mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case "cancel":case "click":case "close":case "contextmenu":case "copy":case "cut":case "auxclick":case "dblclick":case "dragend":case "dragstart":case "drop":case "focusin":case "focusout":case "input":case "invalid":case "keydown":case "keypress":case "keyup":case "mousedown":case "mouseup":case "paste":case "pause":case "play":case "pointercancel":case "pointerdown":case "pointerup":case "ratechange":case "reset":case "resize":case "seeked":case "submit":case "touchcancel":case "touchend":case "touchstart":case "volumechange":case "change":case "selectionchange":case "textInput":case "compositionstart":case "compositionend":case "compositionupdate":case "beforeblur":case "afterblur":case "beforeinput":case "blur":case "fullscreenchange":case "focus":case "hashchange":case "popstate":case "select":case "selectstart":return 1;case "drag":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "mousemove":case "mouseout":case "mouseover":case "pointermove":case "pointerout":case "pointerover":case "scroll":case "toggle":case "touchmove":case "wheel":case "mouseenter":case "mouseleave":case "pointerenter":case "pointerleave":return 4;\ncase "message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in\na)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",\nSpacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",\n119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===\na.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};\nia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);\nha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));\nfa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));\nfunction nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":n="focus";k=Fd;break;case "focusout":n="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=\nDd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var t=0!==(b&4),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F="onMouseLeave";x="onMouseEnter";w="mouse";if("pointerout"===a||"pointerover"===a)t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+"leave",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+"enter",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);"focusout"===a&&(xa=h._wrapperState)&&\nxa.controlled&&"number"===h.type&&cb(h,"number",h.value)}xa=d?ue(d):window;switch(a){case "focusin":if(me(xa)||"true"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case "compositionstart":var ba="onCompositionStart";break b;case "compositionend":ba="onCompositionEnd";\nbreak b;case "compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),\n0<d.length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return("string"===typeof a?a:""+a).replace(xf,"\\n").replace(yf,"")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff="function"===typeof setTimeout?setTimeout:void 0,Gf="function"===typeof clearTimeout?clearTimeout:void 0,Hf="function"===typeof Promise?Promise:void 0,Jf="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if("function"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r="function"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;"object"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,\n"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=xh(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){"object"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if("object"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||"object"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return"string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return"function"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Uh++;0<c&&(b+="H"+c.toString(32));b+=":"}else c=Vh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c="",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e="\\nError generating stack: "+f.message+"\\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni="function"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);"function"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;q||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?("function"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):\n("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||\n"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?("function"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:"hidden",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:"visible",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:"visible",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if("$!"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if("$?"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case "together":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case "dialog":D("cancel",d);D("close",d);break;case "iframe":case "object":case "embed":D("load",d);break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case "source":D("error",d);break;case "img":case "image":case "link":D("error",\nd);D("load",d);break;case "details":D("toggle",d);break;case "input":Za(d,f);D("invalid",d);break;case "select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case "textarea":hb(d,f),D("invalid",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case "input":Va(d);db(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=kb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\\x3c/script>",a=a.removeChild(a.firstChild)):\n"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case "dialog":D("cancel",a);D("close",a);e=d;break;case "iframe":case "object":case "embed":D("load",a);e=d;break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case "source":D("error",a);e=d;break;case "img":case "image":case "link":D("error",\na);D("load",a);e=d;break;case "details":D("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);D("invalid",a);break;case "option":e=d;break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case "textarea":hb(a,d);e=gb(a,d);D("invalid",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):"children"===f?"string"===typeof k?("textarea"!==\nc||""!==k)&&ob(a,k):"number"===typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case "input":Va(a);db(a,d,!1);break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:"function"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case "button":case "input":case "select":case "textarea":d=!!d.autoFocus;break a;case "img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj="function"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}"function"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&"function"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case "input":bb(e,f);break;case "textarea":ib(e,f);break;case "select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if("function"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=\nrb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,""),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case "button":case "input":case "select":case "textarea":k.autoFocus&&c.focus();break;case "img":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&("function"===typeof w.getDerivedStateFromError||null!==u&&"function"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&"function"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if("function"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bj(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,""));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll="function"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,"",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if("function"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,"",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case "input":bb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+\'][type="radio"]\');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d="",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version="18.2.0-next-9e3b772b8-20220608";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///448\n')},745:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval("var __webpack_unused_export__;\n\n\nvar m = __webpack_require__(935);\nif (true) {\n  exports.s = m.createRoot;\n  __webpack_unused_export__ = m.hydrateRoot;\n} else { var i; }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQ1LmpzIiwibWFwcGluZ3MiOiI7QUFBYTs7QUFFYixRQUFRLG1CQUFPLENBQUMsR0FBVztBQUMzQixJQUFJLElBQXFDO0FBQ3pDLEVBQUUsU0FBa0I7QUFDcEIsRUFBRSx5QkFBbUI7QUFDckIsRUFBRSxLQUFLLFVBa0JOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcz8xMWIxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///745\n")},935:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {}\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(448);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTM1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLEtBQXFDLEVBQUUsRUFTMUM7QUFDSDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLElBQXFDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEVBQUUseUNBQTZEO0FBQy9ELEVBQUUsS0FBSyxFQUVOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzPzhiYzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///935\n")},408:(__unused_webpack_module,exports)=>{"use strict";eval('/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version="18.2.0";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///408\n')},294:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(408);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjk0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksSUFBcUM7QUFDekMsRUFBRSx5Q0FBeUQ7QUFDM0QsRUFBRSxLQUFLLEVBRU4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcz9hYjViIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///294\n")},53:(__unused_webpack_module,exports)=>{"use strict";eval('/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;\n"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2EsZ0JBQWdCLGVBQWUsVUFBVSxPQUFPLElBQUksRUFBRSxxQkFBcUIsOEJBQThCLGNBQWMsY0FBYyw4QkFBOEIsY0FBYyw0QkFBNEIscUJBQXFCLFVBQVUsT0FBTyxpQ0FBaUMsSUFBSSxFQUFFLG9DQUFvQyxrRUFBa0Usd0NBQXdDLGNBQWM7QUFDbmMsZ0JBQWdCLDhCQUE4Qix5QkFBeUIsdUVBQXVFLGtCQUFrQixvQkFBb0IsWUFBWSxnQkFBZ0IsS0FBSyxxQkFBcUIsb0JBQW9CLFlBQVksa0JBQWtCO0FBQzVSLDRLQUE0SyxjQUFjLGVBQWUsU0FBUyxFQUFFLDBCQUEwQixnRUFBZ0UsV0FBVyxRQUFRLGNBQWMsS0FBSyxLQUFLLCtCQUErQixLQUFLLFdBQVc7QUFDeFksZ0JBQWdCLEtBQUssb0JBQW9CLEtBQUssUUFBUSxJQUFJLEtBQUssV0FBVywyQ0FBMkMsRUFBRSxpQkFBaUIsMEJBQTBCLGdCQUFnQixrQkFBa0IsNkJBQTZCLHlCQUF5QixrREFBa0QsS0FBSyxVQUFVLE9BQU8scUJBQXFCLEtBQUssV0FBVyw2QkFBNkIsS0FBSyxTQUFTLFFBQVEsaUJBQWlCO0FBQzNhLGFBQWEsd0NBQXdDLGFBQWEsYUFBYSw2QkFBNkIsSUFBSSxTQUFTLElBQUksVUFBVSxRQUFRLHFCQUFxQixVQUFVLE1BQU0sc0NBQXNDLE1BQU0sNkNBQTZDLG1DQUFtQyxvQkFBb0IsYUFBYSxxQkFBcUIsa0JBQWtCLFFBQVEsY0FBYyxJQUFJLGNBQWMsZ0JBQWdCLGVBQWUsMEJBQTBCO0FBQ3pkLDZCQUE2QixHQUFHLGtDQUFrQyxHQUFHLDRCQUE0QixHQUFHLCtCQUErQixHQUFHLDBCQUEwQixNQUFNLHFDQUFxQyxHQUFHLCtCQUErQixhQUFhLGlCQUFpQixrQ0FBa0MsWUFBWTtBQUN6VCwrQkFBK0IsYUFBYSx1S0FBdUssd0NBQXdDLFlBQVksVUFBVSxxQ0FBcUMsWUFBWSxhQUFhLHFCQUFxQixhQUFhLFVBQVUsNkJBQTZCLE1BQU0sWUFBWSxRQUFRLElBQUksSUFBSSxXQUFXLFFBQVEsTUFBTSwrQkFBK0I7QUFDbGYsNkJBQTZCLGNBQWMsZ0NBQWdDLGVBQWUsVUFBVSx5Q0FBeUMsWUFBWSxRQUFRLElBQUksSUFBSSxXQUFXLFFBQVE7QUFDNUwsaUNBQWlDLGlCQUFpQiw2QkFBNkIsK0VBQStFLFVBQVUsZ0JBQWdCLE1BQU0sYUFBYSxNQUFNLG9CQUFvQixNQUFNLGFBQWEsTUFBTSxjQUFjLE1BQU0sR0FBRyw2RUFBNkUseUhBQXlIO0FBQzNkLDRCQUE0QixHQUFHLDZCQUE2QixhQUFhLFFBQVEsa0JBQWtCLFFBQVEsSUFBSSxJQUFJLCtCQUErQixRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanM/ZmIwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO2Z1bmN0aW9uIGYoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzA8Yzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKDA8ZyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gaChhKXtyZXR1cm4gMD09PWEubGVuZ3RoP251bGw6YVswXX1mdW5jdGlvbiBrKGEpe2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gbnVsbDt2YXIgYj1hWzBdLGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aCx3PWU+Pj4xO2Q8dzspe3ZhciBtPTIqKGQrMSktMSxDPWFbbV0sbj1tKzEseD1hW25dO2lmKDA+ZyhDLGMpKW48ZSYmMD5nKHgsQyk/KGFbZF09eCxhW25dPWMsZD1uKTooYVtkXT1DLGFbbV09YyxkPW0pO2Vsc2UgaWYobjxlJiYwPmcoeCxjKSlhW2RdPXgsYVtuXT1jLGQ9bjtlbHNlIGJyZWFrIGF9fXJldHVybiBifVxuZnVuY3Rpb24gZyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH1pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19dmFyIHI9W10sdD1bXSx1PTEsdj1udWxsLHk9Myx6PSExLEE9ITEsQj0hMSxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6bnVsbCxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0Om51bGwsRj1cInVuZGVmaW5lZFwiIT09dHlwZW9mIHNldEltbWVkaWF0ZT9zZXRJbW1lZGlhdGU6bnVsbDtcblwidW5kZWZpbmVkXCIhPT10eXBlb2YgbmF2aWdhdG9yJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZyYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcmJm5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nLmJpbmQobmF2aWdhdG9yLnNjaGVkdWxpbmcpO2Z1bmN0aW9uIEcoYSl7Zm9yKHZhciBiPWgodCk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylrKHQpO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpayh0KSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLGYocixiKTtlbHNlIGJyZWFrO2I9aCh0KX19ZnVuY3Rpb24gSChhKXtCPSExO0coYSk7aWYoIUEpaWYobnVsbCE9PWgocikpQT0hMCxJKEopO2Vsc2V7dmFyIGI9aCh0KTtudWxsIT09YiYmSyhILGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIEooYSxiKXtBPSExO0ImJihCPSExLEUoTCksTD0tMSk7ej0hMDt2YXIgYz15O3RyeXtHKGIpO2Zvcih2PWgocik7bnVsbCE9PXYmJighKHYuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFNKCkpOyl7dmFyIGQ9di5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7di5jYWxsYmFjaz1udWxsO3k9di5wcmlvcml0eUxldmVsO3ZhciBlPWQodi5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP3YuY2FsbGJhY2s9ZTp2PT09aChyKSYmayhyKTtHKGIpfWVsc2UgayhyKTt2PWgocil9aWYobnVsbCE9PXYpdmFyIHc9ITA7ZWxzZXt2YXIgbT1oKHQpO251bGwhPT1tJiZLKEgsbS5zdGFydFRpbWUtYik7dz0hMX1yZXR1cm4gd31maW5hbGx5e3Y9bnVsbCx5PWMsej0hMX19dmFyIE49ITEsTz1udWxsLEw9LTEsUD01LFE9LTE7XG5mdW5jdGlvbiBNKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCktUTxQPyExOiEwfWZ1bmN0aW9uIFIoKXtpZihudWxsIT09Tyl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtRPWE7dmFyIGI9ITA7dHJ5e2I9TyghMCxhKX1maW5hbGx5e2I/UygpOihOPSExLE89bnVsbCl9fWVsc2UgTj0hMX12YXIgUztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRilTPWZ1bmN0aW9uKCl7RihSKX07ZWxzZSBpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPVI7Uz1mdW5jdGlvbigpe1UucG9zdE1lc3NhZ2UobnVsbCl9fWVsc2UgUz1mdW5jdGlvbigpe0QoUiwwKX07ZnVuY3Rpb24gSShhKXtPPWE7Tnx8KE49ITAsUygpKX1mdW5jdGlvbiBLKGEsYil7TD1EKGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9XG5leHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7QXx8enx8KEE9ITAsSShKKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6UD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiB5fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGgocil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goeSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9eX12YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e3k9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O1xuZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9eTt5PWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXt5PWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6dSsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsZih0LGEpLG51bGw9PT1oKHIpJiZhPT09aCh0KSYmKEI/KEUoTCksTD0tMSk6Qj0hMCxLKEgsYy1kKSkpOihhLnNvcnRJbmRleD1lLGYocixhKSxBfHx6fHwoQT0hMCxJKEopKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1NO2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPXk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e3k9Y319fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///53\n')},840:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(53);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksSUFBcUM7QUFDekMsRUFBRSx3Q0FBNkQ7QUFDL0QsRUFBRSxLQUFLLEVBRU4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanM/NDAyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///840\n")},379:module=>{"use strict";eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzc5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix3QkFBd0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEJBQTRCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNkJBQTZCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///379\n')},569:module=>{"use strict";eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lZ2FlbXBpcmVzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9iMjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///569\n')},216:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWdhZW1waXJlcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///216\n')},565:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxjQUFjLEtBQXdDLEdBQUcsc0JBQWlCLEdBQUcsQ0FBSTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanM/ZGRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///565\n')},795:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///795\n')},589:module=>{"use strict";eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYWVtcGlyZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///589\n")}},__webpack_module_cache__={};function __webpack_require__(t){var n=__webpack_module_cache__[t];if(void 0!==n)return n.exports;var e=__webpack_module_cache__[t]={id:t,exports:{}};return __webpack_modules__[t](e,e.exports,__webpack_require__),e.exports}__webpack_require__.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(t,n)=>{for(var e in n)__webpack_require__.o(n,e)&&!__webpack_require__.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},__webpack_require__.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),__webpack_require__.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},__webpack_require__.p="/static/",__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(446)})();